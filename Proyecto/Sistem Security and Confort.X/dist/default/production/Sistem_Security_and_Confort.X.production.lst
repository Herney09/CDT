

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Thu Jul 14 12:34:51 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=3
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1
    42                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    43                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    44                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    45                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    46  0000                     
    47                           ; Version 2.40
    48                           ; Generated 17/11/2021 GMT
    49                           ; 
    50                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    51                           ; All rights reserved.
    52                           ; 
    53                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    54                           ; 
    55                           ; Redistribution and use in source and binary forms, with or without modification, are
    56                           ; permitted provided that the following conditions are met:
    57                           ; 
    58                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    59                           ;        conditions and the following disclaimer.
    60                           ; 
    61                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    62                           ;        of conditions and the following disclaimer in the documentation and/or other
    63                           ;        materials provided with the distribution. Publication is not required when
    64                           ;        this file is used in an embedded application.
    65                           ; 
    66                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    67                           ;        software without specific prior written permission.
    68                           ; 
    69                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    70                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    71                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    72                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    73                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    74                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    75                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    76                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    77                           ; 
    78                           ; 
    79                           ; Code-generator required, PIC18F4550 Definitions
    80                           ; 
    81                           ; SFR Addresses
    82  0000                     
    83                           	psect	idataBANK0
    84  001FBA                     __pidataBANK0:
    85                           	callstack 0
    86                           
    87                           ;initializer for keypad_getkey@F3205
    88  001FBA  31                 	db	49
    89  001FBB  32                 	db	50
    90  001FBC  33                 	db	51
    91  001FBD  41                 	db	65
    92  001FBE  34                 	db	52
    93  001FBF  35                 	db	53
    94  001FC0  36                 	db	54
    95  001FC1  42                 	db	66
    96  001FC2  37                 	db	55
    97  001FC3  38                 	db	56
    98  001FC4  39                 	db	57
    99  001FC5  43                 	db	67
   100  001FC6  2A                 	db	42
   101  001FC7  30                 	db	48
   102  001FC8  23                 	db	35
   103  001FC9  44                 	db	68
   104                           
   105                           ;initializer for _key
   106  001FCA  30                 	db	48
   107                           
   108                           	psect	smallconst
   109  000800                     __psmallconst:
   110                           	callstack 0
   111  000800  00                 	db	0
   112  000801                     _password:
   113                           	callstack 0
   114  000801  32                 	db	50
   115  000802  30                 	db	48
   116  000803  32                 	db	50
   117  000804  32                 	db	50
   118  000805  00                 	db	0
   119  000806                     __end_of_password:
   120                           	callstack 0
   121  0000                     _ADRESL	set	4035
   122  0000                     _ADRESH	set	4036
   123  0000                     _ADCON0bits	set	4034
   124  0000                     _TRISAbits	set	3986
   125  0000                     _OSCCONbits	set	4051
   126  0000                     _LATD1	set	31841
   127  0000                     _LATD0	set	31840
   128  0000                     _PORTAbits	set	3968
   129  0000                     _PORTB	set	3969
   130  0000                     _PORTE	set	3972
   131  0000                     _LATD	set	3980
   132  0000                     _TRISD	set	3989
   133  0000                     _ADCON2bits	set	4032
   134  0000                     _ADCON1bits	set	4033
   135  0000                     _TRISE	set	3990
   136  0000                     _OSCCON	set	4051
   137  0000                     _TRISA	set	3986
   138  0000                     _INTCON2bits	set	4081
   139  0000                     _TRISB	set	3987
   140  0000                     _LATB	set	3978
   141  0000                     _LATA1	set	31817
   142  000806                     STR_2:
   143  000806  41                 	db	65	;'A'
   144  000807  63                 	db	99	;'c'
   145  000808  63                 	db	99	;'c'
   146  000809  65                 	db	101	;'e'
   147  00080A  73                 	db	115	;'s'
   148  00080B  6F                 	db	111	;'o'
   149  00080C  20                 	db	32
   150  00080D  43                 	db	67	;'C'
   151  00080E  6F                 	db	111	;'o'
   152  00080F  6E                 	db	110	;'n'
   153  000810  63                 	db	99	;'c'
   154  000811  65                 	db	101	;'e'
   155  000812  64                 	db	100	;'d'
   156  000813  69                 	db	105	;'i'
   157  000814  64                 	db	100	;'d'
   158  000815  6F                 	db	111	;'o'
   159  000816  00                 	db	0
   160  000817                     STR_6:
   161  000817  43                 	db	67	;'C'
   162  000818  6C                 	db	108	;'l'
   163  000819  61                 	db	97	;'a'
   164  00081A  76                 	db	118	;'v'
   165  00081B  65                 	db	101	;'e'
   166  00081C  20                 	db	32
   167  00081D  42                 	db	66	;'B'
   168  00081E  6C                 	db	108	;'l'
   169  00081F  6F                 	db	111	;'o'
   170  000820  71                 	db	113	;'q'
   171  000821  75                 	db	117	;'u'
   172  000822  65                 	db	101	;'e'
   173  000823  61                 	db	97	;'a'
   174  000824  64                 	db	100	;'d'
   175  000825  61                 	db	97	;'a'
   176  000826  00                 	db	0
   177  000827                     STR_1:
   178  000827  44                 	db	68	;'D'
   179  000828  69                 	db	105	;'i'
   180  000829  67                 	db	103	;'g'
   181  00082A  69                 	db	105	;'i'
   182  00082B  74                 	db	116	;'t'
   183  00082C  65                 	db	101	;'e'
   184  00082D  20                 	db	32
   185  00082E  53                 	db	83	;'S'
   186  00082F  75                 	db	117	;'u'
   187  000830  20                 	db	32
   188  000831  43                 	db	67	;'C'
   189  000832  6C                 	db	108	;'l'
   190  000833  61                 	db	97	;'a'
   191  000834  76                 	db	118	;'v'
   192  000835  65                 	db	101	;'e'
   193  000836  00                 	db	0
   194  000837                     STR_5:
   195  000837  43                 	db	67	;'C'
   196  000838  6C                 	db	108	;'l'
   197  000839  61                 	db	97	;'a'
   198  00083A  76                 	db	118	;'v'
   199  00083B  65                 	db	101	;'e'
   200  00083C  20                 	db	32
   201  00083D  49                 	db	73	;'I'
   202  00083E  6E                 	db	110	;'n'
   203  00083F  76                 	db	118	;'v'
   204  000840  61                 	db	97	;'a'
   205  000841  6C                 	db	108	;'l'
   206  000842  69                 	db	105	;'i'
   207  000843  64                 	db	100	;'d'
   208  000844  61                 	db	97	;'a'
   209  000845  00                 	db	0
   210  000846                     STR_4:
   211  000846  53                 	db	83	;'S'
   212  000847  69                 	db	105	;'i'
   213  000848  73                 	db	115	;'s'
   214  000849  74                 	db	116	;'t'
   215  00084A  65                 	db	101	;'e'
   216  00084B  6D                 	db	109	;'m'
   217  00084C  20                 	db	32
   218  00084D  43                 	db	67	;'C'
   219  00084E  6F                 	db	111	;'o'
   220  00084F  6E                 	db	110	;'n'
   221  000850  66                 	db	102	;'f'
   222  000851  6F                 	db	111	;'o'
   223  000852  72                 	db	114	;'r'
   224  000853  74                 	db	116	;'t'
   225  000854  00                 	db	0
   226  000855                     STR_3:
   227  000855  42                 	db	66	;'B'
   228  000856  69                 	db	105	;'i'
   229  000857  65                 	db	101	;'e'
   230  000858  6E                 	db	110	;'n'
   231  000859  76                 	db	118	;'v'
   232  00085A  65                 	db	101	;'e'
   233  00085B  6E                 	db	110	;'n'
   234  00085C  69                 	db	105	;'i'
   235  00085D  64                 	db	100	;'d'
   236  00085E  6F                 	db	111	;'o'
   237  00085F  20                 	db	32
   238  000860  41                 	db	65	;'A'
   239  000861  6C                 	db	108	;'l'
   240  000862  00                 	db	0
   241  000863                     STR_8:
   242  000863  49                 	db	73	;'I'
   243  000864  6E                 	db	110	;'n'
   244  000865  74                 	db	116	;'t'
   245  000866  65                 	db	101	;'e'
   246  000867  6E                 	db	110	;'n'
   247  000868  74                 	db	116	;'t'
   248  000869  6F                 	db	111	;'o'
   249  00086A  73                 	db	115	;'s'
   250  00086B  3A                 	db	58	;':'
   251  00086C  00                 	db	0
   252  00086D                     STR_10:
   253  00086D  4C                 	db	76	;'L'
   254  00086E  75                 	db	117	;'u'
   255  00086F  7A                 	db	122	;'z'
   256  000870  3A                 	db	58	;':'
   257  000871  20                 	db	32
   258  000872  00                 	db	0
   259  000873                     STR_12:
   260  000873  2E                 	db	46
   261  000874  25                 	db	37
   262  000875  64                 	db	100	;'d'
   263  000876  20                 	db	32
   264  000877  00                 	db	0
   265  000878                     STR_16:
   266  000878  54                 	db	84	;'T'
   267  000879  65                 	db	101	;'e'
   268  00087A  6D                 	db	109	;'m'
   269  00087B  3A                 	db	58	;':'
   270  00087C  00                 	db	0
   271  00087D                     STR_13:
   272  00087D  48                 	db	72	;'H'
   273  00087E  72                 	db	114	;'r'
   274  00087F  3A                 	db	58	;':'
   275  000880  00                 	db	0
   276  000881                     STR_15:
   277  000881  2E                 	db	46
   278  000882  25                 	db	37
   279  000883  64                 	db	100	;'d'
   280  000884  00                 	db	0
   281  000885  00                 	db	0	; dummy byte at the end
   282  0000                     
   283                           ; #config settings
   284                           
   285                           	psect	cinit
   286  001E94                     __pcinit:
   287                           	callstack 0
   288  001E94                     start_initialization:
   289                           	callstack 0
   290  001E94                     __initialization:
   291                           	callstack 0
   292                           
   293                           ; Initialize objects allocated to BANK0 (17 bytes)
   294                           ; load TBLPTR registers with __pidataBANK0
   295  001E94  0EBA               	movlw	low __pidataBANK0
   296  001E96  6EF6               	movwf	tblptrl,c
   297  001E98  0E1F               	movlw	high __pidataBANK0
   298  001E9A  6EF7               	movwf	tblptrh,c
   299  001E9C  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   300  001E9E  6EF8               	movwf	tblptru,c
   301  001EA0  EE00  F0CF         	lfsr	0,__pdataBANK0
   302  001EA4  EE10 F011          	lfsr	1,17
   303  001EA8                     copy_data0:
   304  001EA8  0009               	tblrd		*+
   305  001EAA  CFF5 FFEE          	movff	tablat,postinc0
   306  001EAE  50E5               	movf	postdec1,w,c
   307  001EB0  50E1               	movf	fsr1l,w,c
   308  001EB2  E1FA               	bnz	copy_data0
   309                           
   310                           ; Clear objects allocated to BANK0 (82 bytes)
   311  001EB4  EE00  F060         	lfsr	0,__pbssBANK0
   312  001EB8  0E52               	movlw	82
   313  001EBA                     clear_0:
   314  001EBA  6AEE               	clrf	postinc0,c
   315  001EBC  06E8               	decf	wreg,f,c
   316  001EBE  E1FD               	bnz	clear_0
   317  001EC0                     end_of_initialization:
   318                           	callstack 0
   319  001EC0                     __end_of__initialization:
   320                           	callstack 0
   321  001EC0  0E00               	movlw	low (__Lmediumconst shr (0+16))
   322  001EC2  6EF8               	movwf	tblptru,c
   323  001EC4  0100               	movlb	0
   324  001EC6  EFB0  F00F         	goto	_main	;jump to C main() function
   325                           
   326                           	psect	bssBANK0
   327  000060                     __pbssBANK0:
   328                           	callstack 0
   329  000060                     _Raw:
   330                           	callstack 0
   331  000060                     	ds	10
   332  00006A                     _temp:
   333                           	callstack 0
   334  00006A                     	ds	4
   335  00006E                     _nout:
   336                           	callstack 0
   337  00006E                     	ds	2
   338  000070                     _width:
   339                           	callstack 0
   340  000070                     	ds	2
   341  000072                     _prec:
   342                           	callstack 0
   343  000072                     	ds	2
   344  000074                     _flags:
   345                           	callstack 0
   346  000074                     	ds	2
   347  000076                     _value_adc:
   348                           	callstack 0
   349  000076                     	ds	2
   350  000078                     _Contador:
   351                           	callstack 0
   352  000078                     	ds	2
   353  00007A                     _Con_Error:
   354                           	callstack 0
   355  00007A                     	ds	2
   356  00007C                     _lm35:
   357                           	callstack 0
   358  00007C                     	ds	1
   359  00007D                     _counter_digito:
   360                           	callstack 0
   361  00007D                     	ds	1
   362  00007E                     _estado:
   363                           	callstack 0
   364  00007E                     	ds	1
   365  00007F                     _idx:
   366                           	callstack 0
   367  00007F                     	ds	1
   368  000080                     _dbuf:
   369                           	callstack 0
   370  000080                     	ds	32
   371  0000A0                     _Temperature:
   372                           	callstack 0
   373  0000A0                     	ds	10
   374  0000AA                     _pass_user:
   375                           	callstack 0
   376  0000AA                     	ds	5
   377  0000AF                     _buffer:
   378                           	callstack 0
   379  0000AF                     	ds	3
   380                           
   381                           	psect	dataBANK0
   382  0000CF                     __pdataBANK0:
   383                           	callstack 0
   384  0000CF                     keypad_getkey@F3205:
   385                           	callstack 0
   386  0000CF                     	ds	16
   387  0000DF                     _key:
   388                           	callstack 0
   389  0000DF                     	ds	1
   390                           
   391                           	psect	cstackBANK0
   392  0000B2                     __pcstackBANK0:
   393                           	callstack 0
   394  0000B2                     sprintf@ap:
   395                           	callstack 0
   396                           
   397                           ; 2 bytes @ 0x0
   398  0000B2                     	ds	2
   399  0000B4                     sprintf@f:
   400                           	callstack 0
   401                           
   402                           ; 11 bytes @ 0x2
   403  0000B4                     	ds	11
   404  0000BF                     Dht11@value:
   405                           	callstack 0
   406                           
   407                           ; 10 bytes @ 0xD
   408  0000BF                     	ds	10
   409  0000C9                     Dht11@RH_Decimal:
   410                           	callstack 0
   411                           
   412                           ; 1 bytes @ 0x17
   413  0000C9                     	ds	1
   414  0000CA                     Dht11@RH_Integral:
   415                           	callstack 0
   416                           
   417                           ; 1 bytes @ 0x18
   418  0000CA                     	ds	1
   419  0000CB                     Dht11@T_Decimal:
   420                           	callstack 0
   421                           
   422                           ; 1 bytes @ 0x19
   423  0000CB                     	ds	1
   424  0000CC                     Dht11@T_Integral:
   425                           	callstack 0
   426                           
   427                           ; 1 bytes @ 0x1A
   428  0000CC                     	ds	1
   429  0000CD                     ??_Security:
   430                           
   431                           ; 1 bytes @ 0x1B
   432  0000CD                     	ds	2
   433                           
   434                           	psect	cstackCOMRAM
   435  000001                     __pcstackCOMRAM:
   436                           	callstack 0
   437  000001                     ??_LCD_Command:
   438  000001                     ??_DHT11_Start:
   439  000001                     ??_LCD_Char:
   440  000001                     ?_strncmp:
   441                           	callstack 0
   442  000001                     ?_strlen:
   443                           	callstack 0
   444  000001                     ?___fltol:
   445                           	callstack 0
   446  000001                     ?___xxtofl:
   447                           	callstack 0
   448  000001                     ?___aodiv:
   449                           	callstack 0
   450  000001                     ?___aomod:
   451                           	callstack 0
   452  000001                     DHT11_ReadData@i:
   453                           	callstack 0
   454  000001                     fputc@c:
   455                           	callstack 0
   456  000001                     strlen@s:
   457                           	callstack 0
   458  000001                     strncmp@_l:
   459                           	callstack 0
   460  000001                     ___fltol@f1:
   461                           	callstack 0
   462  000001                     ___xxtofl@val:
   463                           	callstack 0
   464  000001                     ___aodiv@dividend:
   465                           	callstack 0
   466  000001                     ___aomod@dividend:
   467                           	callstack 0
   468  000001                     keypad_getkey@letras:
   469                           	callstack 0
   470                           
   471                           ; 16 bytes @ 0x0
   472  000001                     	ds	1
   473  000002                     LCD_Command@cmd:
   474                           	callstack 0
   475  000002                     LCD_Char@dat:
   476                           	callstack 0
   477  000002                     DHT11_ReadData@data:
   478                           	callstack 0
   479                           
   480                           ; 1 bytes @ 0x1
   481  000002                     	ds	1
   482  000003                     ??_LCD_Init:
   483  000003                     ??_LCD_Clear:
   484  000003                     LCD_String@msg:
   485                           	callstack 0
   486  000003                     fputc@fp:
   487                           	callstack 0
   488  000003                     strlen@a:
   489                           	callstack 0
   490  000003                     strncmp@_r:
   491                           	callstack 0
   492                           
   493                           ; 2 bytes @ 0x2
   494  000003                     	ds	2
   495  000005                     ??_fputc:
   496  000005                     ??___fltol:
   497  000005                     ??___xxtofl:
   498  000005                     LCD_String_xy@pos:
   499                           	callstack 0
   500  000005                     strncmp@n:
   501                           	callstack 0
   502                           
   503                           ; 2 bytes @ 0x4
   504  000005                     	ds	1
   505  000006                     LCD_String_xy@msg:
   506                           	callstack 0
   507                           
   508                           ; 2 bytes @ 0x5
   509  000006                     	ds	1
   510  000007                     ??_strncmp:
   511                           
   512                           ; 1 bytes @ 0x6
   513  000007                     	ds	1
   514  000008                     LCD_String_xy@row:
   515                           	callstack 0
   516  000008                     strncmp@l:
   517                           	callstack 0
   518                           
   519                           ; 2 bytes @ 0x7
   520  000008                     	ds	1
   521  000009                     LCD_String_xy@location:
   522                           	callstack 0
   523  000009                     ___fltol@sign1:
   524                           	callstack 0
   525  000009                     ___xxtofl@sign:
   526                           	callstack 0
   527  000009                     ___aodiv@divisor:
   528                           	callstack 0
   529  000009                     ___aomod@divisor:
   530                           	callstack 0
   531                           
   532                           ; 8 bytes @ 0x8
   533  000009                     	ds	1
   534  00000A                     ___fltol@exp1:
   535                           	callstack 0
   536  00000A                     ___xxtofl@exp:
   537                           	callstack 0
   538  00000A                     fputs@s:
   539                           	callstack 0
   540  00000A                     strncmp@r:
   541                           	callstack 0
   542                           
   543                           ; 2 bytes @ 0x9
   544  00000A                     	ds	1
   545  00000B                     ___xxtofl@arg:
   546                           	callstack 0
   547                           
   548                           ; 4 bytes @ 0xA
   549  00000B                     	ds	1
   550  00000C                     fputs@fp:
   551                           	callstack 0
   552                           
   553                           ; 2 bytes @ 0xB
   554  00000C                     	ds	2
   555  00000E                     fputs@c:
   556                           	callstack 0
   557                           
   558                           ; 1 bytes @ 0xD
   559  00000E                     	ds	1
   560  00000F                     fputs@i:
   561                           	callstack 0
   562                           
   563                           ; 2 bytes @ 0xE
   564  00000F                     	ds	2
   565  000011                     ?_pad:
   566                           	callstack 0
   567  000011                     keypad_getkey@valor:
   568                           	callstack 0
   569  000011                     ___aodiv@counter:
   570                           	callstack 0
   571  000011                     ___aomod@counter:
   572                           	callstack 0
   573  000011                     pad@fp:
   574                           	callstack 0
   575                           
   576                           ; 2 bytes @ 0x10
   577  000011                     	ds	1
   578  000012                     ___aodiv@sign:
   579                           	callstack 0
   580  000012                     ___aomod@sign:
   581                           	callstack 0
   582  000012                     keypad_getkey@i:
   583                           	callstack 0
   584                           
   585                           ; 2 bytes @ 0x11
   586  000012                     	ds	1
   587  000013                     ?_abs:
   588                           	callstack 0
   589  000013                     pad@buf:
   590                           	callstack 0
   591  000013                     abs@a:
   592                           	callstack 0
   593  000013                     ___aodiv@quotient:
   594                           	callstack 0
   595                           
   596                           ; 8 bytes @ 0x12
   597  000013                     	ds	2
   598  000015                     ??_abs:
   599  000015                     pad@p:
   600                           	callstack 0
   601                           
   602                           ; 2 bytes @ 0x14
   603  000015                     	ds	2
   604  000017                     ??_pad:
   605                           
   606                           ; 1 bytes @ 0x16
   607  000017                     	ds	1
   608  000018                     pad@i:
   609                           	callstack 0
   610                           
   611                           ; 2 bytes @ 0x17
   612  000018                     	ds	2
   613  00001A                     pad@w:
   614                           	callstack 0
   615                           
   616                           ; 2 bytes @ 0x19
   617  00001A                     	ds	2
   618  00001C                     ?_dtoa:
   619                           	callstack 0
   620  00001C                     dtoa@fp:
   621                           	callstack 0
   622                           
   623                           ; 2 bytes @ 0x1B
   624  00001C                     	ds	2
   625  00001E                     dtoa@d:
   626                           	callstack 0
   627                           
   628                           ; 8 bytes @ 0x1D
   629  00001E                     	ds	8
   630  000026                     ??_dtoa:
   631                           
   632                           ; 1 bytes @ 0x25
   633  000026                     	ds	8
   634  00002E                     _dtoa$1041:
   635                           	callstack 0
   636                           
   637                           ; 2 bytes @ 0x2D
   638  00002E                     	ds	2
   639  000030                     dtoa@p:
   640                           	callstack 0
   641                           
   642                           ; 2 bytes @ 0x2F
   643  000030                     	ds	2
   644  000032                     dtoa@w:
   645                           	callstack 0
   646                           
   647                           ; 2 bytes @ 0x31
   648  000032                     	ds	2
   649  000034                     dtoa@s:
   650                           	callstack 0
   651                           
   652                           ; 2 bytes @ 0x33
   653  000034                     	ds	2
   654  000036                     dtoa@n:
   655                           	callstack 0
   656                           
   657                           ; 8 bytes @ 0x35
   658  000036                     	ds	8
   659  00003E                     dtoa@i:
   660                           	callstack 0
   661                           
   662                           ; 2 bytes @ 0x3D
   663  00003E                     	ds	2
   664  000040                     ?_vfpfcnvrt:
   665                           	callstack 0
   666  000040                     vfpfcnvrt@fp:
   667                           	callstack 0
   668                           
   669                           ; 2 bytes @ 0x3F
   670  000040                     	ds	2
   671  000042                     vfpfcnvrt@fmt:
   672                           	callstack 0
   673                           
   674                           ; 2 bytes @ 0x41
   675  000042                     	ds	2
   676  000044                     vfpfcnvrt@ap:
   677                           	callstack 0
   678                           
   679                           ; 2 bytes @ 0x43
   680  000044                     	ds	2
   681  000046                     ??_vfpfcnvrt:
   682                           
   683                           ; 1 bytes @ 0x45
   684  000046                     	ds	2
   685  000048                     vfpfcnvrt@ll:
   686                           	callstack 0
   687                           
   688                           ; 8 bytes @ 0x47
   689  000048                     	ds	8
   690  000050                     ?_vfprintf:
   691                           	callstack 0
   692  000050                     vfprintf@fp:
   693                           	callstack 0
   694                           
   695                           ; 2 bytes @ 0x4F
   696  000050                     	ds	2
   697  000052                     vfprintf@fmt:
   698                           	callstack 0
   699                           
   700                           ; 2 bytes @ 0x51
   701  000052                     	ds	2
   702  000054                     vfprintf@ap:
   703                           	callstack 0
   704                           
   705                           ; 2 bytes @ 0x53
   706  000054                     	ds	2
   707  000056                     vfprintf@cfmt:
   708                           	callstack 0
   709                           
   710                           ; 2 bytes @ 0x55
   711  000056                     	ds	2
   712  000058                     ?_sprintf:
   713                           	callstack 0
   714  000058                     sprintf@s:
   715                           	callstack 0
   716                           
   717                           ; 2 bytes @ 0x57
   718  000058                     	ds	2
   719  00005A                     sprintf@fmt:
   720                           	callstack 0
   721                           
   722                           ; 2 bytes @ 0x59
   723  00005A                     	ds	4
   724  00005E                     ??_Dht11:
   725  00005E                     ??_Photoresist:
   726  00005E                     
   727                           ; 1 bytes @ 0x5D
   728  00005E                     	ds	2
   729  000060                     
   730                           ; 1 bytes @ 0x5F
   731 ;;
   732 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   733 ;;
   734 ;; *************** function _main *****************
   735 ;; Defined at:
   736 ;;		line 48 in file "Main.c"
   737 ;; Parameters:    Size  Location     Type
   738 ;;		None
   739 ;; Auto vars:     Size  Location     Type
   740 ;;		None
   741 ;; Return value:  Size  Location     Type
   742 ;;                  1    wreg      void 
   743 ;; Registers used:
   744 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   745 ;; Tracked objects:
   746 ;;		On entry : 0/0
   747 ;;		On exit  : 0/0
   748 ;;		Unchanged: 0/0
   749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   750 ;;      Params:         0       0       0       0       0       0       0       0       0
   751 ;;      Locals:         0       0       0       0       0       0       0       0       0
   752 ;;      Temps:          0       0       0       0       0       0       0       0       0
   753 ;;      Totals:         0       0       0       0       0       0       0       0       0
   754 ;;Total ram usage:        0 bytes
   755 ;; Hardware stack levels required when called: 10
   756 ;; This function calls:
   757 ;;		_LCD_Init
   758 ;;		_Security
   759 ;;		_keypad_init
   760 ;; This function is called by:
   761 ;;		Startup code after reset
   762 ;; This function uses a non-reentrant model
   763 ;;
   764                           
   765                           	psect	text0
   766  001F60                     __ptext0:
   767                           	callstack 0
   768  001F60                     _main:
   769                           	callstack 21
   770  001F60                     
   771                           ;Main.c: 51:     OSCCON = 0x72;
   772  001F60  0E72               	movlw	114
   773  001F62  6ED3               	movwf	211,c	;volatile
   774                           
   775                           ;Main.c: 52:     TRISE = 0b000;
   776  001F64  0E00               	movlw	0
   777  001F66  6E96               	movwf	150,c	;volatile
   778                           
   779                           ;Main.c: 53:     TRISA =0x01;
   780  001F68  0E01               	movlw	1
   781  001F6A  6E92               	movwf	146,c	;volatile
   782                           
   783                           ;Main.c: 54:     ADCON1bits.PCFG = 0b1110;
   784  001F6C  50C1               	movf	193,w,c	;volatile
   785  001F6E  0BF0               	andlw	-16
   786  001F70  090E               	iorlw	14
   787  001F72  6EC1               	movwf	193,c	;volatile
   788  001F74                     
   789                           ;Main.c: 55:     LCD_Init();
   790  001F74  EC80  F00F         	call	_LCD_Init	;wreg free
   791  001F78                     
   792                           ;Main.c: 56:     keypad_init();
   793  001F78  ECE6  F00F         	call	_keypad_init	;wreg free
   794  001F7C                     
   795                           ;Main.c: 57:     Security();
   796  001F7C  ECB4  F005         	call	_Security	;wreg free
   797  001F80  EF00  F000         	goto	start
   798  001F84                     __end_of_main:
   799                           	callstack 0
   800                           
   801 ;; *************** function _keypad_init *****************
   802 ;; Defined at:
   803 ;;		line 14 in file "KEYPAD_2.c"
   804 ;; Parameters:    Size  Location     Type
   805 ;;		None
   806 ;; Auto vars:     Size  Location     Type
   807 ;;		None
   808 ;; Return value:  Size  Location     Type
   809 ;;                  1    wreg      void 
   810 ;; Registers used:
   811 ;;		wreg, status,2, status,0
   812 ;; Tracked objects:
   813 ;;		On entry : 0/0
   814 ;;		On exit  : 0/0
   815 ;;		Unchanged: 0/0
   816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   817 ;;      Params:         0       0       0       0       0       0       0       0       0
   818 ;;      Locals:         0       0       0       0       0       0       0       0       0
   819 ;;      Temps:          0       0       0       0       0       0       0       0       0
   820 ;;      Totals:         0       0       0       0       0       0       0       0       0
   821 ;;Total ram usage:        0 bytes
   822 ;; Hardware stack levels used: 1
   823 ;; This function calls:
   824 ;;		Nothing
   825 ;; This function is called by:
   826 ;;		_main
   827 ;; This function uses a non-reentrant model
   828 ;;
   829                           
   830                           	psect	text1
   831  001FCC                     __ptext1:
   832                           	callstack 0
   833  001FCC                     _keypad_init:
   834                           	callstack 30
   835  001FCC                     
   836                           ;KEYPAD_2.c: 16:     TRISB &= ~(1<<0) & ~(1<<1) & ~(1<<2) & ~(1<<3);
   837  001FCC  0EF0               	movlw	240
   838  001FCE  1693               	andwf	147,f,c	;volatile
   839                           
   840                           ;KEYPAD_2.c: 17:     TRISB |= (1<<4) | (1<<5) | (1<<6) | (1<<7);
   841  001FD0  0EF0               	movlw	240
   842  001FD2  1293               	iorwf	147,f,c	;volatile
   843  001FD4                     
   844                           ;KEYPAD_2.c: 18:     INTCON2bits.RBPU = 0;
   845  001FD4  9EF1               	bcf	241,7,c	;volatile
   846  001FD6  0012               	return		;funcret
   847  001FD8                     __end_of_keypad_init:
   848                           	callstack 0
   849                           
   850 ;; *************** function _Security *****************
   851 ;; Defined at:
   852 ;;		line 60 in file "Main.c"
   853 ;; Parameters:    Size  Location     Type
   854 ;;		None
   855 ;; Auto vars:     Size  Location     Type
   856 ;;		None
   857 ;; Return value:  Size  Location     Type
   858 ;;                  1    wreg      void 
   859 ;; Registers used:
   860 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   861 ;; Tracked objects:
   862 ;;		On entry : 0/0
   863 ;;		On exit  : 0/0
   864 ;;		Unchanged: 0/0
   865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   866 ;;      Params:         0       0       0       0       0       0       0       0       0
   867 ;;      Locals:         0       0       0       0       0       0       0       0       0
   868 ;;      Temps:          0       2       0       0       0       0       0       0       0
   869 ;;      Totals:         0       2       0       0       0       0       0       0       0
   870 ;;Total ram usage:        2 bytes
   871 ;; Hardware stack levels used: 1
   872 ;; Hardware stack levels required when called: 9
   873 ;; This function calls:
   874 ;;		_Dht11
   875 ;;		_LCD_Char
   876 ;;		_LCD_Clear
   877 ;;		_LCD_Command
   878 ;;		_LCD_String
   879 ;;		_LCD_String_xy
   880 ;;		_Photoresist
   881 ;;		_keypad_getkey
   882 ;;		_sprintf
   883 ;;		_strncmp
   884 ;; This function is called by:
   885 ;;		_main
   886 ;; This function uses a non-reentrant model
   887 ;;
   888                           
   889                           	psect	text2
   890  000B68                     __ptext2:
   891                           	callstack 0
   892  000B68                     _Security:
   893                           	callstack 21
   894  000B68                     l127:
   895  000B68                     
   896                           ;Main.c: 62:         Contador = 2 - Con_Error;
   897  000B68  0100               	movlb	0	; () banked
   898  000B6A  517A               	movf	_Con_Error& (0+255),w,b
   899  000B6C  0802               	sublw	2
   900  000B6E  6F78               	movwf	_Contador& (0+255),b
   901  000B70  517B               	movf	(_Con_Error+1)& (0+255),w,b
   902  000B72  A0D8               	btfss	status,0,c
   903  000B74  2AE8               	incf	wreg,f,c
   904  000B76  0800               	sublw	0
   905  000B78  6F79               	movwf	(_Contador+1)& (0+255),b
   906  000B7A                     
   907                           ; BSR set to: 0
   908                           ;Main.c: 63:         LCD_String_xy(0,1,"Digite Su Clave");
   909  000B7A  0E01               	movlw	1
   910  000B7C  6E05               	movwf	LCD_String_xy@pos^0,c
   911  000B7E  0E27               	movlw	low STR_1
   912  000B80  6E06               	movwf	LCD_String_xy@msg^0,c
   913  000B82  0E08               	movlw	high STR_1
   914  000B84  6E07               	movwf	(LCD_String_xy@msg+1)^0,c
   915  000B86  0E00               	movlw	0
   916  000B88  EC2A  F00F         	call	_LCD_String_xy
   917  000B8C                     
   918                           ;Main.c: 64:         LCD_Command(0xC0);
   919  000B8C  0EC0               	movlw	192
   920  000B8E  ECC0  F00E         	call	_LCD_Command
   921  000B92                     l2347:
   922                           
   923                           ;Main.c: 67:             key = keypad_getkey();
   924  000B92  ECEA  F006         	call	_keypad_getkey	;wreg free
   925  000B96  0100               	movlb	0	; () banked
   926  000B98  6FDF               	movwf	_key& (0+255),b
   927  000B9A                     
   928                           ; BSR set to: 0
   929                           ;Main.c: 68:             if(key != 0){
   930  000B9A  51DF               	movf	_key& (0+255),w,b
   931  000B9C  B4D8               	btfsc	status,2,c
   932  000B9E  EFD3  F005         	goto	u2051
   933  000BA2  EFD5  F005         	goto	u2050
   934  000BA6                     u2051:
   935  000BA6  EFE2  F005         	goto	l2357
   936  000BAA                     u2050:
   937  000BAA                     
   938                           ; BSR set to: 0
   939                           ;Main.c: 70:                 LCD_Char(key);
   940  000BAA  51DF               	movf	_key& (0+255),w,b
   941  000BAC  EC98  F00E         	call	_LCD_Char
   942  000BB0                     
   943                           ;Main.c: 71:                 pass_user[idx++] = key;
   944  000BB0  0EAA               	movlw	low _pass_user
   945  000BB2  0100               	movlb	0	; () banked
   946  000BB4  257F               	addwf	_idx& (0+255),w,b
   947  000BB6  6ED9               	movwf	fsr2l,c
   948  000BB8  6ADA               	clrf	fsr2h,c
   949  000BBA  0E00               	movlw	high _pass_user
   950  000BBC  22DA               	addwfc	fsr2h,f,c
   951  000BBE  C0DF  FFDF         	movff	_key,indf2
   952  000BC2                     
   953                           ; BSR set to: 0
   954  000BC2  2B7F               	incf	_idx& (0+255),f,b
   955  000BC4                     l2357:
   956                           
   957                           ; BSR set to: 0
   958                           ;Main.c: 73:             _delay((unsigned long)((100)*(8000000/4000.0)));
   959  000BC4  0E02               	movlw	2
   960  000BC6  0100               	movlb	0	; () banked
   961  000BC8  6FCE               	movwf	(??_Security+1)& (0+255),b
   962  000BCA  0E04               	movlw	4
   963  000BCC  6FCD               	movwf	??_Security& (0+255),b
   964  000BCE  0EBA               	movlw	186
   965  000BD0                     u2097:
   966  000BD0  2EE8               	decfsz	wreg,f,c
   967  000BD2  D7FE               	bra	u2097
   968  000BD4  2FCD               	decfsz	??_Security& (0+255),f,b
   969  000BD6  D7FC               	bra	u2097
   970  000BD8  2FCE               	decfsz	(??_Security+1)& (0+255),f,b
   971  000BDA  D7FA               	bra	u2097
   972  000BDC  F000               	nop	
   973  000BDE                     
   974                           ;Main.c: 74:         }while(idx < 5);
   975  000BDE  0E04               	movlw	4
   976  000BE0  0100               	movlb	0	; () banked
   977  000BE2  657F               	cpfsgt	_idx& (0+255),b
   978  000BE4  EFF6  F005         	goto	u2061
   979  000BE8  EFF8  F005         	goto	u2060
   980  000BEC                     u2061:
   981  000BEC  EFC9  F005         	goto	l2347
   982  000BF0                     u2060:
   983  000BF0                     
   984                           ; BSR set to: 0
   985                           ;Main.c: 76:         if(strncmp(pass_user,password,4)==0){
   986  000BF0  0EAA               	movlw	low _pass_user
   987  000BF2  6E01               	movwf	strncmp@_l^0,c
   988  000BF4  0E00               	movlw	high _pass_user
   989  000BF6  6E02               	movwf	(strncmp@_l+1)^0,c
   990  000BF8  0E01               	movlw	low _password
   991  000BFA  6E03               	movwf	strncmp@_r^0,c
   992  000BFC  0E08               	movlw	high _password
   993  000BFE  6E04               	movwf	(strncmp@_r+1)^0,c
   994  000C00  0E00               	movlw	0
   995  000C02  6E06               	movwf	(strncmp@n+1)^0,c
   996  000C04  0E04               	movlw	4
   997  000C06  6E05               	movwf	strncmp@n^0,c
   998  000C08  ECAE  F00C         	call	_strncmp	;wreg free
   999  000C0C  5001               	movf	?_strncmp^0,w,c
  1000  000C0E  1002               	iorwf	(?_strncmp+1)^0,w,c
  1001  000C10  A4D8               	btfss	status,2,c
  1002  000C12  EF0D  F006         	goto	u2071
  1003  000C16  EF0F  F006         	goto	u2070
  1004  000C1A                     u2071:
  1005  000C1A  EF6C  F006         	goto	l2387
  1006  000C1E                     u2070:
  1007  000C1E                     
  1008                           ;Main.c: 77:             LCD_Clear();
  1009  000C1E  ECD2  F00F         	call	_LCD_Clear	;wreg free
  1010  000C22                     
  1011                           ;Main.c: 78:             LCD_String_xy(0,0,"Acceso Concedido");
  1012  000C22  0E00               	movlw	0
  1013  000C24  6E05               	movwf	LCD_String_xy@pos^0,c
  1014  000C26  0E06               	movlw	low STR_2
  1015  000C28  6E06               	movwf	LCD_String_xy@msg^0,c
  1016  000C2A  0E08               	movlw	high STR_2
  1017  000C2C  6E07               	movwf	(LCD_String_xy@msg+1)^0,c
  1018  000C2E  0E00               	movlw	0
  1019  000C30  EC2A  F00F         	call	_LCD_String_xy
  1020  000C34                     
  1021                           ;Main.c: 80:             PORTE = 0b10;
  1022  000C34  0E02               	movlw	2
  1023  000C36  6E84               	movwf	132,c	;volatile
  1024  000C38                     
  1025                           ;Main.c: 81:             _delay((unsigned long)((3000)*(8000000/4000.0)));
  1026  000C38  0E1F               	movlw	31
  1027  000C3A  0100               	movlb	0	; () banked
  1028  000C3C  6FCE               	movwf	(??_Security+1)& (0+255),b
  1029  000C3E  0E71               	movlw	113
  1030  000C40  6FCD               	movwf	??_Security& (0+255),b
  1031  000C42  0E1E               	movlw	30
  1032  000C44                     u2107:
  1033  000C44  2EE8               	decfsz	wreg,f,c
  1034  000C46  D7FE               	bra	u2107
  1035  000C48  2FCD               	decfsz	??_Security& (0+255),f,b
  1036  000C4A  D7FC               	bra	u2107
  1037  000C4C  2FCE               	decfsz	(??_Security+1)& (0+255),f,b
  1038  000C4E  D7FA               	bra	u2107
  1039  000C50  F000               	nop	
  1040  000C52                     
  1041                           ;Main.c: 82:             PORTE = 0b00;
  1042  000C52  0E00               	movlw	0
  1043  000C54  6E84               	movwf	132,c	;volatile
  1044  000C56                     
  1045                           ;Main.c: 83:             _delay((unsigned long)((500)*(8000000/4000.0)));
  1046  000C56  0E06               	movlw	6
  1047  000C58  0100               	movlb	0	; () banked
  1048  000C5A  6FCE               	movwf	(??_Security+1)& (0+255),b
  1049  000C5C  0E13               	movlw	19
  1050  000C5E  6FCD               	movwf	??_Security& (0+255),b
  1051  000C60  0EAD               	movlw	173
  1052  000C62                     u2117:
  1053  000C62  2EE8               	decfsz	wreg,f,c
  1054  000C64  D7FE               	bra	u2117
  1055  000C66  2FCD               	decfsz	??_Security& (0+255),f,b
  1056  000C68  D7FC               	bra	u2117
  1057  000C6A  2FCE               	decfsz	(??_Security+1)& (0+255),f,b
  1058  000C6C  D7FA               	bra	u2117
  1059  000C6E  D000               	nop2	
  1060  000C70                     
  1061                           ;Main.c: 84:             LCD_Clear();
  1062  000C70  ECD2  F00F         	call	_LCD_Clear	;wreg free
  1063                           
  1064                           ;Main.c: 85:             LCD_String_xy(0,1,"Bienvenido Al");
  1065  000C74  0E01               	movlw	1
  1066  000C76  6E05               	movwf	LCD_String_xy@pos^0,c
  1067  000C78  0E55               	movlw	low STR_3
  1068  000C7A  6E06               	movwf	LCD_String_xy@msg^0,c
  1069  000C7C  0E08               	movlw	high STR_3
  1070  000C7E  6E07               	movwf	(LCD_String_xy@msg+1)^0,c
  1071  000C80  0E00               	movlw	0
  1072  000C82  EC2A  F00F         	call	_LCD_String_xy
  1073                           
  1074                           ;Main.c: 86:             LCD_String_xy(2,1,"Sistem Confort");
  1075  000C86  0E01               	movlw	1
  1076  000C88  6E05               	movwf	LCD_String_xy@pos^0,c
  1077  000C8A  0E46               	movlw	low STR_4
  1078  000C8C  6E06               	movwf	LCD_String_xy@msg^0,c
  1079  000C8E  0E08               	movlw	high STR_4
  1080  000C90  6E07               	movwf	(LCD_String_xy@msg+1)^0,c
  1081  000C92  0E02               	movlw	2
  1082  000C94  EC2A  F00F         	call	_LCD_String_xy
  1083  000C98                     
  1084                           ;Main.c: 87:             _delay((unsigned long)((3000)*(8000000/4000.0)));
  1085  000C98  0E1F               	movlw	31
  1086  000C9A  0100               	movlb	0	; () banked
  1087  000C9C  6FCE               	movwf	(??_Security+1)& (0+255),b
  1088  000C9E  0E71               	movlw	113
  1089  000CA0  6FCD               	movwf	??_Security& (0+255),b
  1090  000CA2  0E1E               	movlw	30
  1091  000CA4                     u2127:
  1092  000CA4  2EE8               	decfsz	wreg,f,c
  1093  000CA6  D7FE               	bra	u2127
  1094  000CA8  2FCD               	decfsz	??_Security& (0+255),f,b
  1095  000CAA  D7FC               	bra	u2127
  1096  000CAC  2FCE               	decfsz	(??_Security+1)& (0+255),f,b
  1097  000CAE  D7FA               	bra	u2127
  1098  000CB0  F000               	nop	
  1099  000CB2                     l2379:
  1100                           
  1101                           ;Main.c: 90:                 Dht11();
  1102  000CB2  EC23  F00B         	call	_Dht11	;wreg free
  1103  000CB6                     
  1104                           ;Main.c: 91:                 _delay((unsigned long)((2000)*(8000000/4000.0)));
  1105  000CB6  0E15               	movlw	21
  1106  000CB8  0100               	movlb	0	; () banked
  1107  000CBA  6FCE               	movwf	(??_Security+1)& (0+255),b
  1108  000CBC  0E4B               	movlw	75
  1109  000CBE  6FCD               	movwf	??_Security& (0+255),b
  1110  000CC0  0EBE               	movlw	190
  1111  000CC2                     u2137:
  1112  000CC2  2EE8               	decfsz	wreg,f,c
  1113  000CC4  D7FE               	bra	u2137
  1114  000CC6  2FCD               	decfsz	??_Security& (0+255),f,b
  1115  000CC8  D7FC               	bra	u2137
  1116  000CCA  2FCE               	decfsz	(??_Security+1)& (0+255),f,b
  1117  000CCC  D7FA               	bra	u2137
  1118  000CCE  F000               	nop	
  1119  000CD0                     
  1120                           ;Main.c: 92:                 Photoresist();
  1121  000CD0  EC38  F00C         	call	_Photoresist	;wreg free
  1122  000CD4  EF59  F006         	goto	l2379
  1123  000CD8                     l2387:
  1124                           
  1125                           ;Main.c: 97:             LCD_Clear();
  1126  000CD8  ECD2  F00F         	call	_LCD_Clear	;wreg free
  1127  000CDC                     
  1128                           ;Main.c: 98:             LCD_String_xy(0,1,"Clave Invalida");
  1129  000CDC  0E01               	movlw	1
  1130  000CDE  6E05               	movwf	LCD_String_xy@pos^0,c
  1131  000CE0  0E37               	movlw	low STR_5
  1132  000CE2  6E06               	movwf	LCD_String_xy@msg^0,c
  1133  000CE4  0E08               	movlw	high STR_5
  1134  000CE6  6E07               	movwf	(LCD_String_xy@msg+1)^0,c
  1135  000CE8  0E00               	movlw	0
  1136  000CEA  EC2A  F00F         	call	_LCD_String_xy
  1137  000CEE                     
  1138                           ;Main.c: 99:             PORTE = 0b01;
  1139  000CEE  0E01               	movlw	1
  1140  000CF0  6E84               	movwf	132,c	;volatile
  1141  000CF2                     
  1142                           ;Main.c: 100:             _delay((unsigned long)((3000)*(8000000/4000.0)));
  1143  000CF2  0E1F               	movlw	31
  1144  000CF4  0100               	movlb	0	; () banked
  1145  000CF6  6FCE               	movwf	(??_Security+1)& (0+255),b
  1146  000CF8  0E71               	movlw	113
  1147  000CFA  6FCD               	movwf	??_Security& (0+255),b
  1148  000CFC  0E1E               	movlw	30
  1149  000CFE                     u2147:
  1150  000CFE  2EE8               	decfsz	wreg,f,c
  1151  000D00  D7FE               	bra	u2147
  1152  000D02  2FCD               	decfsz	??_Security& (0+255),f,b
  1153  000D04  D7FC               	bra	u2147
  1154  000D06  2FCE               	decfsz	(??_Security+1)& (0+255),f,b
  1155  000D08  D7FA               	bra	u2147
  1156  000D0A  F000               	nop	
  1157  000D0C                     
  1158                           ;Main.c: 101:             PORTE = 0b00;
  1159  000D0C  0E00               	movlw	0
  1160  000D0E  6E84               	movwf	132,c	;volatile
  1161  000D10                     
  1162                           ;Main.c: 102:             Con_Error = Con_Error + 1;
  1163  000D10  0E01               	movlw	1
  1164  000D12  0100               	movlb	0	; () banked
  1165  000D14  257A               	addwf	_Con_Error& (0+255),w,b
  1166  000D16  6F7A               	movwf	_Con_Error& (0+255),b
  1167  000D18  0E00               	movlw	0
  1168  000D1A  217B               	addwfc	(_Con_Error+1)& (0+255),w,b
  1169  000D1C  6F7B               	movwf	(_Con_Error+1)& (0+255),b
  1170  000D1E                     
  1171                           ; BSR set to: 0
  1172                           ;Main.c: 104:             if(Con_Error == 3){
  1173  000D1E  0E03               	movlw	3
  1174  000D20  197A               	xorwf	_Con_Error& (0+255),w,b
  1175  000D22  117B               	iorwf	(_Con_Error+1)& (0+255),w,b
  1176  000D24  A4D8               	btfss	status,2,c
  1177  000D26  EF97  F006         	goto	u2081
  1178  000D2A  EF99  F006         	goto	u2080
  1179  000D2E                     u2081:
  1180  000D2E  EFB8  F006         	goto	l2409
  1181  000D32                     u2080:
  1182  000D32                     
  1183                           ; BSR set to: 0
  1184                           ;Main.c: 105:                 LCD_Clear();
  1185  000D32  ECD2  F00F         	call	_LCD_Clear	;wreg free
  1186  000D36                     
  1187                           ;Main.c: 106:                 LCD_String_xy(0,0,"Clave Bloqueada");
  1188  000D36  0E00               	movlw	0
  1189  000D38  6E05               	movwf	LCD_String_xy@pos^0,c
  1190  000D3A  0E17               	movlw	low STR_6
  1191  000D3C  6E06               	movwf	LCD_String_xy@msg^0,c
  1192  000D3E  0E08               	movlw	high STR_6
  1193  000D40  6E07               	movwf	(LCD_String_xy@msg+1)^0,c
  1194  000D42  0E00               	movlw	0
  1195  000D44  EC2A  F00F         	call	_LCD_String_xy
  1196  000D48                     
  1197                           ;Main.c: 107:                 _delay((unsigned long)((15000)*(8000000/4000.0)));
  1198  000D48  0E99               	movlw	153
  1199  000D4A  0100               	movlb	0	; () banked
  1200  000D4C  6FCE               	movwf	(??_Security+1)& (0+255),b
  1201  000D4E  0E31               	movlw	49
  1202  000D50  6FCD               	movwf	??_Security& (0+255),b
  1203  000D52  0EA2               	movlw	162
  1204  000D54                     u2157:
  1205  000D54  2EE8               	decfsz	wreg,f,c
  1206  000D56  D7FE               	bra	u2157
  1207  000D58  2FCD               	decfsz	??_Security& (0+255),f,b
  1208  000D5A  D7FC               	bra	u2157
  1209  000D5C  2FCE               	decfsz	(??_Security+1)& (0+255),f,b
  1210  000D5E  D7FA               	bra	u2157
  1211  000D60  F000               	nop	
  1212  000D62                     
  1213                           ;Main.c: 108:                 Con_Error = 0;
  1214  000D62  0E00               	movlw	0
  1215  000D64  0100               	movlb	0	; () banked
  1216  000D66  6F7B               	movwf	(_Con_Error+1)& (0+255),b
  1217  000D68  0E00               	movlw	0
  1218  000D6A  6F7A               	movwf	_Con_Error& (0+255),b
  1219                           
  1220                           ;Main.c: 109:             }else{
  1221  000D6C  EFD5  F006         	goto	l2415
  1222  000D70                     l2409:
  1223                           
  1224                           ; BSR set to: 0
  1225                           ;Main.c: 110:                 sprintf(buffer,"%d ", (int)(Contador));
  1226  000D70  0EAF               	movlw	low _buffer
  1227  000D72  6E58               	movwf	sprintf@s^0,c
  1228  000D74  0E00               	movlw	high _buffer
  1229  000D76  6E59               	movwf	(sprintf@s+1)^0,c
  1230  000D78  0E74               	movlw	low (STR_12+1)
  1231  000D7A  6E5A               	movwf	sprintf@fmt^0,c
  1232  000D7C  0E08               	movlw	high (STR_12+1)
  1233  000D7E  6E5B               	movwf	(sprintf@fmt+1)^0,c
  1234  000D80  C078  F05C         	movff	_Contador,?_sprintf+4
  1235  000D84  C079  F05D         	movff	_Contador+1,?_sprintf+5
  1236  000D88  EC6F  F00E         	call	_sprintf	;wreg free
  1237  000D8C                     
  1238                           ;Main.c: 111:                 LCD_String_xy(2,0,"Intentos:");
  1239  000D8C  0E00               	movlw	0
  1240  000D8E  6E05               	movwf	LCD_String_xy@pos^0,c
  1241  000D90  0E63               	movlw	low STR_8
  1242  000D92  6E06               	movwf	LCD_String_xy@msg^0,c
  1243  000D94  0E08               	movlw	high STR_8
  1244  000D96  6E07               	movwf	(LCD_String_xy@msg+1)^0,c
  1245  000D98  0E02               	movlw	2
  1246  000D9A  EC2A  F00F         	call	_LCD_String_xy
  1247  000D9E                     
  1248                           ;Main.c: 112:                 LCD_String(buffer);
  1249  000D9E  0EAF               	movlw	low _buffer
  1250  000DA0  6E03               	movwf	LCD_String@msg^0,c
  1251  000DA2  0E00               	movlw	high _buffer
  1252  000DA4  6E04               	movwf	(LCD_String@msg+1)^0,c
  1253  000DA6  EC12  F00E         	call	_LCD_String	;wreg free
  1254  000DAA                     l2415:
  1255                           
  1256                           ;Main.c: 115:         _delay((unsigned long)((1000)*(8000000/4000.0)));
  1257  000DAA  0E0B               	movlw	11
  1258  000DAC  0100               	movlb	0	; () banked
  1259  000DAE  6FCE               	movwf	(??_Security+1)& (0+255),b
  1260  000DB0  0E26               	movlw	38
  1261  000DB2  6FCD               	movwf	??_Security& (0+255),b
  1262  000DB4  0E5D               	movlw	93
  1263  000DB6                     u2167:
  1264  000DB6  2EE8               	decfsz	wreg,f,c
  1265  000DB8  D7FE               	bra	u2167
  1266  000DBA  2FCD               	decfsz	??_Security& (0+255),f,b
  1267  000DBC  D7FC               	bra	u2167
  1268  000DBE  2FCE               	decfsz	(??_Security+1)& (0+255),f,b
  1269  000DC0  D7FA               	bra	u2167
  1270  000DC2  D000               	nop2	
  1271  000DC4                     
  1272                           ;Main.c: 116:         LCD_Clear();
  1273  000DC4  ECD2  F00F         	call	_LCD_Clear	;wreg free
  1274  000DC8                     
  1275                           ;Main.c: 117:         idx = 0;
  1276  000DC8  0E00               	movlw	0
  1277  000DCA  0100               	movlb	0	; () banked
  1278  000DCC  6F7F               	movwf	_idx& (0+255),b
  1279  000DCE  EFB4  F005         	goto	l127
  1280  000DD2  0012               	return		;funcret
  1281  000DD4                     __end_of_Security:
  1282                           	callstack 0
  1283                           
  1284 ;; *************** function _strncmp *****************
  1285 ;; Defined at:
  1286 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\strncmp.c"
  1287 ;; Parameters:    Size  Location     Type
  1288 ;;  _l              2    0[COMRAM] PTR const unsigned char 
  1289 ;;		 -> pass_user(5), 
  1290 ;;  _r              2    2[COMRAM] PTR const unsigned char 
  1291 ;;		 -> password(5), 
  1292 ;;  n               2    4[COMRAM] unsigned int 
  1293 ;; Auto vars:     Size  Location     Type
  1294 ;;  r               2    9[COMRAM] PTR const unsigned char 
  1295 ;;		 -> password(5), 
  1296 ;;  l               2    7[COMRAM] PTR const unsigned char 
  1297 ;;		 -> pass_user(5), 
  1298 ;; Return value:  Size  Location     Type
  1299 ;;                  2    0[COMRAM] int 
  1300 ;; Registers used:
  1301 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  1302 ;; Tracked objects:
  1303 ;;		On entry : 0/0
  1304 ;;		On exit  : 0/0
  1305 ;;		Unchanged: 0/0
  1306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1307 ;;      Params:         6       0       0       0       0       0       0       0       0
  1308 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1309 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1310 ;;      Totals:        11       0       0       0       0       0       0       0       0
  1311 ;;Total ram usage:       11 bytes
  1312 ;; Hardware stack levels used: 1
  1313 ;; This function calls:
  1314 ;;		Nothing
  1315 ;; This function is called by:
  1316 ;;		_Security
  1317 ;; This function uses a non-reentrant model
  1318 ;;
  1319                           
  1320                           	psect	text3
  1321  00195C                     __ptext3:
  1322                           	callstack 0
  1323  00195C                     _strncmp:
  1324                           	callstack 29
  1325  00195C  C001  F008         	movff	strncmp@_l,strncmp@l
  1326  001960  C002  F009         	movff	strncmp@_l+1,strncmp@l+1
  1327  001964  C003  F00A         	movff	strncmp@_r,strncmp@r
  1328  001968  C004  F00B         	movff	strncmp@_r+1,strncmp@r+1
  1329  00196C  0605               	decf	strncmp@n^0,f,c
  1330  00196E  A0D8               	btfss	status,0,c
  1331  001970  0606               	decf	(strncmp@n+1)^0,f,c
  1332  001972  2805               	incf	strncmp@n^0,w,c
  1333  001974  E106               	bnz	u1991
  1334  001976  2806               	incf	(strncmp@n+1)^0,w,c
  1335  001978  A4D8               	btfss	status,2,c
  1336  00197A  EFC1  F00C         	goto	u1991
  1337  00197E  EFC3  F00C         	goto	u1990
  1338  001982                     u1991:
  1339  001982  EFD0  F00C         	goto	l2261
  1340  001986                     u1990:
  1341  001986  0E00               	movlw	0
  1342  001988  6E02               	movwf	(?_strncmp+1)^0,c
  1343  00198A  0E00               	movlw	0
  1344  00198C  6E01               	movwf	?_strncmp^0,c
  1345  00198E  EF18  F00D         	goto	l1050
  1346  001992                     l2259:
  1347  001992  4A08               	infsnz	strncmp@l^0,f,c
  1348  001994  2A09               	incf	(strncmp@l+1)^0,f,c
  1349  001996  4A0A               	infsnz	strncmp@r^0,f,c
  1350  001998  2A0B               	incf	(strncmp@r+1)^0,f,c
  1351  00199A  0605               	decf	strncmp@n^0,f,c
  1352  00199C  A0D8               	btfss	status,0,c
  1353  00199E  0606               	decf	(strncmp@n+1)^0,f,c
  1354  0019A0                     l2261:
  1355  0019A0  C008  FFD9         	movff	strncmp@l,fsr2l
  1356  0019A4  C009  FFDA         	movff	strncmp@l+1,fsr2h
  1357  0019A8  50DF               	movf	indf2,w,c
  1358  0019AA  B4D8               	btfsc	status,2,c
  1359  0019AC  EFDA  F00C         	goto	u2001
  1360  0019B0  EFDC  F00C         	goto	u2000
  1361  0019B4                     u2001:
  1362  0019B4  EF07  F00D         	goto	l2269
  1363  0019B8                     u2000:
  1364  0019B8  C00A  FFF6         	movff	strncmp@r,tblptrl
  1365  0019BC  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  1366  0019C0                     	if	0	;tblptru may be non-zero
  1367  0019C0                     	endif
  1368  0019C0                     	if	0	;tblptru may be non-zero
  1369  0019C0                     	endif
  1370  0019C0  0008               	tblrd		*
  1371  0019C2  50F5               	movf	tablat,w,c
  1372  0019C4  0900               	iorlw	0
  1373  0019C6  B4D8               	btfsc	status,2,c
  1374  0019C8  EFE8  F00C         	goto	u2011
  1375  0019CC  EFEA  F00C         	goto	u2010
  1376  0019D0                     u2011:
  1377  0019D0  EF07  F00D         	goto	l2269
  1378  0019D4                     u2010:
  1379  0019D4  5005               	movf	strncmp@n^0,w,c
  1380  0019D6  1006               	iorwf	(strncmp@n+1)^0,w,c
  1381  0019D8  B4D8               	btfsc	status,2,c
  1382  0019DA  EFF1  F00C         	goto	u2021
  1383  0019DE  EFF3  F00C         	goto	u2020
  1384  0019E2                     u2021:
  1385  0019E2  EF07  F00D         	goto	l2269
  1386  0019E6                     u2020:
  1387  0019E6  C008  FFD9         	movff	strncmp@l,fsr2l
  1388  0019EA  C009  FFDA         	movff	strncmp@l+1,fsr2h
  1389  0019EE  50DF               	movf	indf2,w,c
  1390  0019F0  6E07               	movwf	??_strncmp^0,c
  1391  0019F2  C00A  FFF6         	movff	strncmp@r,tblptrl
  1392  0019F6  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  1393  0019FA                     	if	0	;tblptru may be non-zero
  1394  0019FA                     	endif
  1395  0019FA                     	if	0	;tblptru may be non-zero
  1396  0019FA                     	endif
  1397  0019FA  0008               	tblrd		*
  1398  0019FC  50F5               	movf	tablat,w,c
  1399  0019FE  1807               	xorwf	??_strncmp^0,w,c
  1400  001A00  B4D8               	btfsc	status,2,c
  1401  001A02  EF05  F00D         	goto	u2031
  1402  001A06  EF07  F00D         	goto	u2030
  1403  001A0A                     u2031:
  1404  001A0A  EFC9  F00C         	goto	l2259
  1405  001A0E                     u2030:
  1406  001A0E                     l2269:
  1407  001A0E  C008  FFD9         	movff	strncmp@l,fsr2l
  1408  001A12  C009  FFDA         	movff	strncmp@l+1,fsr2h
  1409  001A16  50DF               	movf	indf2,w,c
  1410  001A18  6E07               	movwf	??_strncmp^0,c
  1411  001A1A  C00A  FFF6         	movff	strncmp@r,tblptrl
  1412  001A1E  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  1413  001A22                     	if	0	;tblptru may be non-zero
  1414  001A22                     	endif
  1415  001A22                     	if	0	;tblptru may be non-zero
  1416  001A22                     	endif
  1417  001A22  0008               	tblrd		*
  1418  001A24  50F5               	movf	tablat,w,c
  1419  001A26  5C07               	subwf	??_strncmp^0,w,c
  1420  001A28  6E01               	movwf	?_strncmp^0,c
  1421  001A2A  6A02               	clrf	(?_strncmp+1)^0,c
  1422  001A2C  A0D8               	btfss	status,0,c
  1423  001A2E  0602               	decf	(?_strncmp+1)^0,f,c
  1424  001A30                     l1050:
  1425  001A30  0012               	return		;funcret
  1426  001A32                     __end_of_strncmp:
  1427                           	callstack 0
  1428                           
  1429 ;; *************** function _keypad_getkey *****************
  1430 ;; Defined at:
  1431 ;;		line 21 in file "KEYPAD_2.c"
  1432 ;; Parameters:    Size  Location     Type
  1433 ;;		None
  1434 ;; Auto vars:     Size  Location     Type
  1435 ;;  letras         16    0[COMRAM] unsigned char [4][4]
  1436 ;;  i               2   17[COMRAM] int 
  1437 ;;  valor           1   16[COMRAM] unsigned char 
  1438 ;; Return value:  Size  Location     Type
  1439 ;;                  1    wreg      unsigned char 
  1440 ;; Registers used:
  1441 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  1442 ;; Tracked objects:
  1443 ;;		On entry : 0/0
  1444 ;;		On exit  : 0/0
  1445 ;;		Unchanged: 0/0
  1446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1447 ;;      Params:         0       0       0       0       0       0       0       0       0
  1448 ;;      Locals:        19       0       0       0       0       0       0       0       0
  1449 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1450 ;;      Totals:        19       0       0       0       0       0       0       0       0
  1451 ;;Total ram usage:       19 bytes
  1452 ;; Hardware stack levels used: 1
  1453 ;; This function calls:
  1454 ;;		Nothing
  1455 ;; This function is called by:
  1456 ;;		_Security
  1457 ;; This function uses a non-reentrant model
  1458 ;;
  1459                           
  1460                           	psect	text4
  1461  000DD4                     __ptext4:
  1462                           	callstack 0
  1463  000DD4                     _keypad_getkey:
  1464                           	callstack 29
  1465  000DD4                     
  1466                           ;KEYPAD_2.c: 23: char letras[4][4]={ {'1','2','3','A'},
  1467  000DD4  EE20  F0CF         	lfsr	2,keypad_getkey@F3205
  1468  000DD8  EE10  F001         	lfsr	1,keypad_getkey@letras
  1469  000DDC  0E0F               	movlw	15
  1470  000DDE                     u1771:
  1471  000DDE  CFDB FFE3          	movff	plusw2,plusw1
  1472  000DE2  06E8               	decf	wreg,f,c
  1473  000DE4  E2FC               	bc	u1771
  1474  000DE6                     
  1475                           ;KEYPAD_2.c: 28: char valor=0;
  1476  000DE6  0E00               	movlw	0
  1477  000DE8  6E11               	movwf	keypad_getkey@valor^0,c
  1478  000DEA                     
  1479                           ;KEYPAD_2.c: 30: for(i=0;i<4;i++){
  1480  000DEA  0E00               	movlw	0
  1481  000DEC  6E13               	movwf	(keypad_getkey@i+1)^0,c
  1482  000DEE  0E00               	movlw	0
  1483  000DF0  6E12               	movwf	keypad_getkey@i^0,c
  1484  000DF2                     l2221:
  1485                           
  1486                           ;KEYPAD_2.c: 32:    if(i==0){
  1487  000DF2  5012               	movf	keypad_getkey@i^0,w,c
  1488  000DF4  1013               	iorwf	(keypad_getkey@i+1)^0,w,c
  1489  000DF6  A4D8               	btfss	status,2,c
  1490  000DF8  EF00  F007         	goto	u1781
  1491  000DFC  EF02  F007         	goto	u1780
  1492  000E00                     u1781:
  1493  000E00  EF34  F007         	goto	l2227
  1494  000E04                     u1780:
  1495  000E04                     
  1496                           ;KEYPAD_2.c: 34:       LATB = (1<<7)|(1<<6)|(1<<5)|(1<<4)|(1<<3)|(1<<2)|(1<<1)|(0<<0);
  1497  000E04  0EFE               	movlw	254
  1498  000E06  6E8A               	movwf	138,c	;volatile
  1499  000E08                     
  1500                           ;KEYPAD_2.c: 35:       _delay((unsigned long)((100)*(8000000/4000000.0)));
  1501  000E08  0E42               	movlw	66
  1502  000E0A                     u2177:
  1503  000E0A  2EE8               	decfsz	wreg,f,c
  1504  000E0C  D7FE               	bra	u2177
  1505  000E0E  D000               	nop2	
  1506                           
  1507                           ;KEYPAD_2.c: 36:       while (!(PORTB & (1<<4))){valor=letras[0][0];}
  1508  000E10  EF0C  F007         	goto	l170
  1509  000E14                     l171:
  1510  000E14  C001  F011         	movff	keypad_getkey@letras,keypad_getkey@valor
  1511  000E18                     l170:
  1512  000E18  A881               	btfss	129,4,c	;volatile
  1513  000E1A  EF11  F007         	goto	u1791
  1514  000E1E  EF13  F007         	goto	u1790
  1515  000E22                     u1791:
  1516  000E22  EF0A  F007         	goto	l171
  1517  000E26                     u1790:
  1518  000E26  EF17  F007         	goto	l173
  1519  000E2A                     l174:
  1520  000E2A  C002  F011         	movff	keypad_getkey@letras+1,keypad_getkey@valor
  1521  000E2E                     l173:
  1522  000E2E  AA81               	btfss	129,5,c	;volatile
  1523  000E30  EF1C  F007         	goto	u1801
  1524  000E34  EF1E  F007         	goto	u1800
  1525  000E38                     u1801:
  1526  000E38  EF15  F007         	goto	l174
  1527  000E3C                     u1800:
  1528  000E3C  EF22  F007         	goto	l176
  1529  000E40                     l177:
  1530  000E40  C003  F011         	movff	keypad_getkey@letras+2,keypad_getkey@valor
  1531  000E44                     l176:
  1532  000E44  AC81               	btfss	129,6,c	;volatile
  1533  000E46  EF27  F007         	goto	u1811
  1534  000E4A  EF29  F007         	goto	u1810
  1535  000E4E                     u1811:
  1536  000E4E  EF20  F007         	goto	l177
  1537  000E52                     u1810:
  1538  000E52  EF2D  F007         	goto	l179
  1539  000E56                     l180:
  1540  000E56  C004  F011         	movff	keypad_getkey@letras+3,keypad_getkey@valor
  1541  000E5A                     l179:
  1542  000E5A  AE81               	btfss	129,7,c	;volatile
  1543  000E5C  EF32  F007         	goto	u1821
  1544  000E60  EF34  F007         	goto	u1820
  1545  000E64                     u1821:
  1546  000E64  EF2B  F007         	goto	l180
  1547  000E68                     u1820:
  1548  000E68                     l2227:
  1549                           
  1550                           ;KEYPAD_2.c: 42:    if(i==1){
  1551  000E68  0412               	decf	keypad_getkey@i^0,w,c
  1552  000E6A  1013               	iorwf	(keypad_getkey@i+1)^0,w,c
  1553  000E6C  A4D8               	btfss	status,2,c
  1554  000E6E  EF3B  F007         	goto	u1831
  1555  000E72  EF3D  F007         	goto	u1830
  1556  000E76                     u1831:
  1557  000E76  EF6F  F007         	goto	l2233
  1558  000E7A                     u1830:
  1559  000E7A                     
  1560                           ;KEYPAD_2.c: 43:       LATB = (1<<7)|(1<<6)|(1<<5)|(1<<4)|(1<<3)|(1<<2)|(0<<1)|(1<<0);
  1561  000E7A  0EFD               	movlw	253
  1562  000E7C  6E8A               	movwf	138,c	;volatile
  1563  000E7E                     
  1564                           ;KEYPAD_2.c: 44:       _delay((unsigned long)((100)*(8000000/4000000.0)));
  1565  000E7E  0E42               	movlw	66
  1566  000E80                     u2187:
  1567  000E80  2EE8               	decfsz	wreg,f,c
  1568  000E82  D7FE               	bra	u2187
  1569  000E84  D000               	nop2	
  1570                           
  1571                           ;KEYPAD_2.c: 45:       while (!(PORTB & (1<<4))){valor=letras[1][0];}
  1572  000E86  EF47  F007         	goto	l183
  1573  000E8A                     l184:
  1574  000E8A  C005  F011         	movff	keypad_getkey@letras+4,keypad_getkey@valor
  1575  000E8E                     l183:
  1576  000E8E  A881               	btfss	129,4,c	;volatile
  1577  000E90  EF4C  F007         	goto	u1841
  1578  000E94  EF4E  F007         	goto	u1840
  1579  000E98                     u1841:
  1580  000E98  EF45  F007         	goto	l184
  1581  000E9C                     u1840:
  1582  000E9C  EF52  F007         	goto	l186
  1583  000EA0                     l187:
  1584  000EA0  C006  F011         	movff	keypad_getkey@letras+5,keypad_getkey@valor
  1585  000EA4                     l186:
  1586  000EA4  AA81               	btfss	129,5,c	;volatile
  1587  000EA6  EF57  F007         	goto	u1851
  1588  000EAA  EF59  F007         	goto	u1850
  1589  000EAE                     u1851:
  1590  000EAE  EF50  F007         	goto	l187
  1591  000EB2                     u1850:
  1592  000EB2  EF5D  F007         	goto	l189
  1593  000EB6                     l190:
  1594  000EB6  C007  F011         	movff	keypad_getkey@letras+6,keypad_getkey@valor
  1595  000EBA                     l189:
  1596  000EBA  AC81               	btfss	129,6,c	;volatile
  1597  000EBC  EF62  F007         	goto	u1861
  1598  000EC0  EF64  F007         	goto	u1860
  1599  000EC4                     u1861:
  1600  000EC4  EF5B  F007         	goto	l190
  1601  000EC8                     u1860:
  1602  000EC8  EF68  F007         	goto	l192
  1603  000ECC                     l193:
  1604  000ECC  C008  F011         	movff	keypad_getkey@letras+7,keypad_getkey@valor
  1605  000ED0                     l192:
  1606  000ED0  AE81               	btfss	129,7,c	;volatile
  1607  000ED2  EF6D  F007         	goto	u1871
  1608  000ED6  EF6F  F007         	goto	u1870
  1609  000EDA                     u1871:
  1610  000EDA  EF66  F007         	goto	l193
  1611  000EDE                     u1870:
  1612  000EDE                     l2233:
  1613                           
  1614                           ;KEYPAD_2.c: 51:    if(i==2){
  1615  000EDE  0E02               	movlw	2
  1616  000EE0  1812               	xorwf	keypad_getkey@i^0,w,c
  1617  000EE2  1013               	iorwf	(keypad_getkey@i+1)^0,w,c
  1618  000EE4  A4D8               	btfss	status,2,c
  1619  000EE6  EF77  F007         	goto	u1881
  1620  000EEA  EF79  F007         	goto	u1880
  1621  000EEE                     u1881:
  1622  000EEE  EFAB  F007         	goto	l2239
  1623  000EF2                     u1880:
  1624  000EF2                     
  1625                           ;KEYPAD_2.c: 52:       LATB = (1<<7)|(1<<6)|(1<<5)|(1<<4)|(1<<3)|(0<<2)|(1<<1)|(1<<0);
  1626  000EF2  0EFB               	movlw	251
  1627  000EF4  6E8A               	movwf	138,c	;volatile
  1628  000EF6                     
  1629                           ;KEYPAD_2.c: 53:       _delay((unsigned long)((100)*(8000000/4000000.0)));
  1630  000EF6  0E42               	movlw	66
  1631  000EF8                     u2197:
  1632  000EF8  2EE8               	decfsz	wreg,f,c
  1633  000EFA  D7FE               	bra	u2197
  1634  000EFC  D000               	nop2	
  1635                           
  1636                           ;KEYPAD_2.c: 54:       while (!(PORTB & (1<<4))){valor=letras[2][0];}
  1637  000EFE  EF83  F007         	goto	l196
  1638  000F02                     l197:
  1639  000F02  C009  F011         	movff	keypad_getkey@letras+8,keypad_getkey@valor
  1640  000F06                     l196:
  1641  000F06  A881               	btfss	129,4,c	;volatile
  1642  000F08  EF88  F007         	goto	u1891
  1643  000F0C  EF8A  F007         	goto	u1890
  1644  000F10                     u1891:
  1645  000F10  EF81  F007         	goto	l197
  1646  000F14                     u1890:
  1647  000F14  EF8E  F007         	goto	l199
  1648  000F18                     l200:
  1649  000F18  C00A  F011         	movff	keypad_getkey@letras+9,keypad_getkey@valor
  1650  000F1C                     l199:
  1651  000F1C  AA81               	btfss	129,5,c	;volatile
  1652  000F1E  EF93  F007         	goto	u1901
  1653  000F22  EF95  F007         	goto	u1900
  1654  000F26                     u1901:
  1655  000F26  EF8C  F007         	goto	l200
  1656  000F2A                     u1900:
  1657  000F2A  EF99  F007         	goto	l202
  1658  000F2E                     l203:
  1659  000F2E  C00B  F011         	movff	keypad_getkey@letras+10,keypad_getkey@valor
  1660  000F32                     l202:
  1661  000F32  AC81               	btfss	129,6,c	;volatile
  1662  000F34  EF9E  F007         	goto	u1911
  1663  000F38  EFA0  F007         	goto	u1910
  1664  000F3C                     u1911:
  1665  000F3C  EF97  F007         	goto	l203
  1666  000F40                     u1910:
  1667  000F40  EFA4  F007         	goto	l205
  1668  000F44                     l206:
  1669  000F44  C00C  F011         	movff	keypad_getkey@letras+11,keypad_getkey@valor
  1670  000F48                     l205:
  1671  000F48  AE81               	btfss	129,7,c	;volatile
  1672  000F4A  EFA9  F007         	goto	u1921
  1673  000F4E  EFAB  F007         	goto	u1920
  1674  000F52                     u1921:
  1675  000F52  EFA2  F007         	goto	l206
  1676  000F56                     u1920:
  1677  000F56                     l2239:
  1678                           
  1679                           ;KEYPAD_2.c: 60:    if(i==3){
  1680  000F56  0E03               	movlw	3
  1681  000F58  1812               	xorwf	keypad_getkey@i^0,w,c
  1682  000F5A  1013               	iorwf	(keypad_getkey@i+1)^0,w,c
  1683  000F5C  A4D8               	btfss	status,2,c
  1684  000F5E  EFB3  F007         	goto	u1931
  1685  000F62  EFB5  F007         	goto	u1930
  1686  000F66                     u1931:
  1687  000F66  EFE7  F007         	goto	l2245
  1688  000F6A                     u1930:
  1689  000F6A                     
  1690                           ;KEYPAD_2.c: 61:       LATB = (1<<7)|(1<<6)|(1<<5)|(1<<4)|(0<<3)|(1<<2)|(1<<1)|(1<<0);
  1691  000F6A  0EF7               	movlw	247
  1692  000F6C  6E8A               	movwf	138,c	;volatile
  1693  000F6E                     
  1694                           ;KEYPAD_2.c: 62:       _delay((unsigned long)((100)*(8000000/4000000.0)));
  1695  000F6E  0E42               	movlw	66
  1696  000F70                     u2207:
  1697  000F70  2EE8               	decfsz	wreg,f,c
  1698  000F72  D7FE               	bra	u2207
  1699  000F74  D000               	nop2	
  1700                           
  1701                           ;KEYPAD_2.c: 63:       while (!(PORTB & (1<<4))){valor=letras[3][0];}
  1702  000F76  EFBF  F007         	goto	l209
  1703  000F7A                     l210:
  1704  000F7A  C00D  F011         	movff	keypad_getkey@letras+12,keypad_getkey@valor
  1705  000F7E                     l209:
  1706  000F7E  A881               	btfss	129,4,c	;volatile
  1707  000F80  EFC4  F007         	goto	u1941
  1708  000F84  EFC6  F007         	goto	u1940
  1709  000F88                     u1941:
  1710  000F88  EFBD  F007         	goto	l210
  1711  000F8C                     u1940:
  1712  000F8C  EFCA  F007         	goto	l212
  1713  000F90                     l213:
  1714  000F90  C00E  F011         	movff	keypad_getkey@letras+13,keypad_getkey@valor
  1715  000F94                     l212:
  1716  000F94  AA81               	btfss	129,5,c	;volatile
  1717  000F96  EFCF  F007         	goto	u1951
  1718  000F9A  EFD1  F007         	goto	u1950
  1719  000F9E                     u1951:
  1720  000F9E  EFC8  F007         	goto	l213
  1721  000FA2                     u1950:
  1722  000FA2  EFD5  F007         	goto	l215
  1723  000FA6                     l216:
  1724  000FA6  C00F  F011         	movff	keypad_getkey@letras+14,keypad_getkey@valor
  1725  000FAA                     l215:
  1726  000FAA  AC81               	btfss	129,6,c	;volatile
  1727  000FAC  EFDA  F007         	goto	u1961
  1728  000FB0  EFDC  F007         	goto	u1960
  1729  000FB4                     u1961:
  1730  000FB4  EFD3  F007         	goto	l216
  1731  000FB8                     u1960:
  1732  000FB8  EFE0  F007         	goto	l218
  1733  000FBC                     l219:
  1734  000FBC  C010  F011         	movff	keypad_getkey@letras+15,keypad_getkey@valor
  1735  000FC0                     l218:
  1736  000FC0  AE81               	btfss	129,7,c	;volatile
  1737  000FC2  EFE5  F007         	goto	u1971
  1738  000FC6  EFE7  F007         	goto	u1970
  1739  000FCA                     u1971:
  1740  000FCA  EFDE  F007         	goto	l219
  1741  000FCE                     u1970:
  1742  000FCE                     l2245:
  1743                           
  1744                           ;KEYPAD_2.c: 68:    }
  1745  000FCE  4A12               	infsnz	keypad_getkey@i^0,f,c
  1746  000FD0  2A13               	incf	(keypad_getkey@i+1)^0,f,c
  1747  000FD2  BE13               	btfsc	(keypad_getkey@i+1)^0,7,c
  1748  000FD4  EFF5  F007         	goto	u1981
  1749  000FD8  5013               	movf	(keypad_getkey@i+1)^0,w,c
  1750  000FDA  E109               	bnz	u1980
  1751  000FDC  0E04               	movlw	4
  1752  000FDE  5C12               	subwf	keypad_getkey@i^0,w,c
  1753  000FE0  A0D8               	btfss	status,0,c
  1754  000FE2  EFF5  F007         	goto	u1981
  1755  000FE6  EFF7  F007         	goto	u1980
  1756  000FEA                     u1981:
  1757  000FEA  EFF9  F006         	goto	l2221
  1758  000FEE                     u1980:
  1759  000FEE                     
  1760                           ;KEYPAD_2.c: 70:    return valor;
  1761  000FEE  5011               	movf	keypad_getkey@valor^0,w,c
  1762  000FF0  0012               	return		;funcret
  1763  000FF2                     __end_of_keypad_getkey:
  1764                           	callstack 0
  1765                           
  1766 ;; *************** function _Photoresist *****************
  1767 ;; Defined at:
  1768 ;;		line 121 in file "Main.c"
  1769 ;; Parameters:    Size  Location     Type
  1770 ;;		None
  1771 ;; Auto vars:     Size  Location     Type
  1772 ;;		None
  1773 ;; Return value:  Size  Location     Type
  1774 ;;                  1    wreg      void 
  1775 ;; Registers used:
  1776 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1777 ;; Tracked objects:
  1778 ;;		On entry : 0/0
  1779 ;;		On exit  : 0/0
  1780 ;;		Unchanged: 0/0
  1781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1782 ;;      Params:         0       0       0       0       0       0       0       0       0
  1783 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1784 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1785 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1786 ;;Total ram usage:        2 bytes
  1787 ;; Hardware stack levels used: 1
  1788 ;; Hardware stack levels required when called: 8
  1789 ;; This function calls:
  1790 ;;		_LCD_Command
  1791 ;;		_LCD_Init
  1792 ;;		_LCD_String
  1793 ;;		_LCD_String_xy
  1794 ;;		___fltol
  1795 ;;		___xxtofl
  1796 ;;		_sprintf
  1797 ;; This function is called by:
  1798 ;;		_Security
  1799 ;; This function uses a non-reentrant model
  1800 ;;
  1801                           
  1802                           	psect	text5
  1803  001870                     __ptext5:
  1804                           	callstack 0
  1805  001870                     _Photoresist:
  1806                           	callstack 21
  1807  001870                     
  1808                           ;Main.c: 123:     OSCCONbits.IRCF = 0b111;
  1809  001870  0E70               	movlw	112
  1810  001872  12D3               	iorwf	211,f,c	;volatile
  1811                           
  1812                           ;Main.c: 124:     OSCCONbits.SCS = 0b10;
  1813  001874  50D3               	movf	211,w,c	;volatile
  1814  001876  0BFC               	andlw	-4
  1815  001878  0902               	iorlw	2
  1816  00187A  6ED3               	movwf	211,c	;volatile
  1817                           
  1818                           ;Main.c: 126:     TRISA = 0x01;
  1819  00187C  0E01               	movlw	1
  1820  00187E  6E92               	movwf	146,c	;volatile
  1821  001880                     
  1822                           ;Main.c: 128:     LCD_Init();
  1823  001880  EC80  F00F         	call	_LCD_Init	;wreg free
  1824  001884                     
  1825                           ;Main.c: 129:     LCD_Command(0xC0);
  1826  001884  0EC0               	movlw	192
  1827  001886  ECC0  F00E         	call	_LCD_Command
  1828                           
  1829                           ;Main.c: 132:     ADCON1bits.PCFG = 0b1110;
  1830  00188A  50C1               	movf	193,w,c	;volatile
  1831  00188C  0BF0               	andlw	-16
  1832  00188E  090E               	iorlw	14
  1833  001890  6EC1               	movwf	193,c	;volatile
  1834                           
  1835                           ;Main.c: 133:     ADCON1bits.VCFG = 0b00;
  1836  001892  0ECF               	movlw	-49
  1837  001894  16C1               	andwf	193,f,c	;volatile
  1838                           
  1839                           ;Main.c: 134:     ADCON0bits.CHS = 0b0000;
  1840  001896  0EC3               	movlw	-61
  1841  001898  16C2               	andwf	194,f,c	;volatile
  1842                           
  1843                           ;Main.c: 135:     ADCON2bits.ACQT = 0b010;
  1844  00189A  50C0               	movf	192,w,c	;volatile
  1845  00189C  0BC7               	andlw	-57
  1846  00189E  0910               	iorlw	16
  1847  0018A0  6EC0               	movwf	192,c	;volatile
  1848                           
  1849                           ;Main.c: 136:     ADCON2bits.ADCS = 0b001;
  1850  0018A2  50C0               	movf	192,w,c	;volatile
  1851  0018A4  0BF8               	andlw	-8
  1852  0018A6  0901               	iorlw	1
  1853  0018A8  6EC0               	movwf	192,c	;volatile
  1854  0018AA                     
  1855                           ;Main.c: 137:     ADCON2bits.ADFM = 1;
  1856  0018AA  8EC0               	bsf	192,7,c	;volatile
  1857  0018AC                     
  1858                           ;Main.c: 138:     ADCON0bits.ADON = 1;
  1859  0018AC  80C2               	bsf	194,0,c	;volatile
  1860  0018AE                     
  1861                           ;Main.c: 140:     ADCON0bits.GO_DONE = 1;
  1862  0018AE  82C2               	bsf	194,1,c	;volatile
  1863  0018B0                     l143:
  1864  0018B0  B2C2               	btfsc	194,1,c	;volatile
  1865  0018B2  EF5D  F00C         	goto	u2041
  1866  0018B6  EF5F  F00C         	goto	u2040
  1867  0018BA                     u2041:
  1868  0018BA  EF58  F00C         	goto	l143
  1869  0018BE                     u2040:
  1870  0018BE                     
  1871                           ;Main.c: 142:     value_adc = ADRESH;
  1872  0018BE  CFC4 F076          	movff	4036,_value_adc	;volatile
  1873  0018C2  0100               	movlb	0	; () banked
  1874  0018C4  6B77               	clrf	(_value_adc+1)& (0+255),b
  1875  0018C6                     
  1876                           ; BSR set to: 0
  1877                           ;Main.c: 143:     value_adc = (value_adc << 8) + ADRESL;
  1878  0018C6  5176               	movf	_value_adc& (0+255),w,b
  1879  0018C8  6E5E               	movwf	??_Photoresist^0,c
  1880  0018CA  50C3               	movf	195,w,c	;volatile
  1881  0018CC  6F76               	movwf	_value_adc& (0+255),b
  1882  0018CE  C05E  F077         	movff	??_Photoresist,_value_adc+1
  1883  0018D2                     
  1884                           ; BSR set to: 0
  1885                           ;Main.c: 144:     temp = value_adc;
  1886  0018D2  C076  F001         	movff	_value_adc,___xxtofl@val
  1887  0018D6  C077  F002         	movff	_value_adc+1,___xxtofl@val+1
  1888  0018DA  6A03               	clrf	(___xxtofl@val+2)^0,c
  1889  0018DC  6A04               	clrf	(___xxtofl@val+3)^0,c
  1890  0018DE  0E00               	movlw	0
  1891  0018E0  ECF9  F007         	call	___xxtofl
  1892  0018E4  C001  F06A         	movff	?___xxtofl,_temp
  1893  0018E8  C002  F06B         	movff	?___xxtofl+1,_temp+1
  1894  0018EC  C003  F06C         	movff	?___xxtofl+2,_temp+2
  1895  0018F0  C004  F06D         	movff	?___xxtofl+3,_temp+3
  1896  0018F4                     
  1897                           ;Main.c: 145:     sprintf(Temperature,"%d",(int)temp);
  1898  0018F4  0EA0               	movlw	low _Temperature
  1899  0018F6  6E58               	movwf	sprintf@s^0,c
  1900  0018F8  0E00               	movlw	high _Temperature
  1901  0018FA  6E59               	movwf	(sprintf@s+1)^0,c
  1902  0018FC  0E82               	movlw	low (STR_15+1)
  1903  0018FE  6E5A               	movwf	sprintf@fmt^0,c
  1904  001900  0E08               	movlw	high (STR_15+1)
  1905  001902  6E5B               	movwf	(sprintf@fmt+1)^0,c
  1906  001904  C06A  F001         	movff	_temp,___fltol@f1
  1907  001908  C06B  F002         	movff	_temp+1,___fltol@f1+1
  1908  00190C  C06C  F003         	movff	_temp+2,___fltol@f1+2
  1909  001910  C06D  F004         	movff	_temp+3,___fltol@f1+3
  1910  001914  ECB5  F00B         	call	___fltol	;wreg free
  1911  001918  C001  F05C         	movff	?___fltol,?_sprintf+4
  1912  00191C  C002  F05D         	movff	?___fltol+1,?_sprintf+5
  1913  001920  EC6F  F00E         	call	_sprintf	;wreg free
  1914  001924                     
  1915                           ;Main.c: 146:     LCD_String_xy(0,0,"Luz: ");
  1916  001924  0E00               	movlw	0
  1917  001926  6E05               	movwf	LCD_String_xy@pos^0,c
  1918  001928  0E6D               	movlw	low STR_10
  1919  00192A  6E06               	movwf	LCD_String_xy@msg^0,c
  1920  00192C  0E08               	movlw	high STR_10
  1921  00192E  6E07               	movwf	(LCD_String_xy@msg+1)^0,c
  1922  001930  0E00               	movlw	0
  1923  001932  EC2A  F00F         	call	_LCD_String_xy
  1924  001936                     
  1925                           ;Main.c: 147:     LCD_String(Temperature);
  1926  001936  0EA0               	movlw	low _Temperature
  1927  001938  6E03               	movwf	LCD_String@msg^0,c
  1928  00193A  0E00               	movlw	high _Temperature
  1929  00193C  6E04               	movwf	(LCD_String@msg+1)^0,c
  1930  00193E  EC12  F00E         	call	_LCD_String	;wreg free
  1931  001942                     
  1932                           ;Main.c: 148:     _delay((unsigned long)((2000)*(8000000/4000.0)));
  1933  001942  0E15               	movlw	21
  1934  001944  6E5F               	movwf	(??_Photoresist+1)^0,c
  1935  001946  0E4B               	movlw	75
  1936  001948  6E5E               	movwf	??_Photoresist^0,c
  1937  00194A  0EBE               	movlw	190
  1938  00194C                     u2217:
  1939  00194C  2EE8               	decfsz	wreg,f,c
  1940  00194E  D7FE               	bra	u2217
  1941  001950  2E5E               	decfsz	??_Photoresist^0,f,c
  1942  001952  D7FC               	bra	u2217
  1943  001954  2E5F               	decfsz	(??_Photoresist+1)^0,f,c
  1944  001956  D7FA               	bra	u2217
  1945  001958  D000               	nop2	
  1946  00195A  0012               	return		;funcret
  1947  00195C                     __end_of_Photoresist:
  1948                           	callstack 0
  1949                           
  1950 ;; *************** function ___xxtofl *****************
  1951 ;; Defined at:
  1952 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\xxtofl.c"
  1953 ;; Parameters:    Size  Location     Type
  1954 ;;  sign            1    wreg     unsigned char 
  1955 ;;  val             4    0[COMRAM] long 
  1956 ;; Auto vars:     Size  Location     Type
  1957 ;;  sign            1    8[COMRAM] unsigned char 
  1958 ;;  arg             4   10[COMRAM] unsigned long 
  1959 ;;  exp             1    9[COMRAM] unsigned char 
  1960 ;; Return value:  Size  Location     Type
  1961 ;;                  4    0[COMRAM] unsigned char 
  1962 ;; Registers used:
  1963 ;;		wreg, status,2, status,0
  1964 ;; Tracked objects:
  1965 ;;		On entry : 0/0
  1966 ;;		On exit  : 0/0
  1967 ;;		Unchanged: 0/0
  1968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1969 ;;      Params:         4       0       0       0       0       0       0       0       0
  1970 ;;      Locals:         6       0       0       0       0       0       0       0       0
  1971 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1972 ;;      Totals:        14       0       0       0       0       0       0       0       0
  1973 ;;Total ram usage:       14 bytes
  1974 ;; Hardware stack levels used: 1
  1975 ;; This function calls:
  1976 ;;		Nothing
  1977 ;; This function is called by:
  1978 ;;		_Photoresist
  1979 ;; This function uses a non-reentrant model
  1980 ;;
  1981                           
  1982                           	psect	text6
  1983  000FF2                     __ptext6:
  1984                           	callstack 0
  1985  000FF2                     ___xxtofl:
  1986                           	callstack 28
  1987                           
  1988                           ;incstack = 0
  1989                           ;___xxtofl@sign stored from wreg
  1990  000FF2  6E09               	movwf	___xxtofl@sign^0,c
  1991  000FF4  5009               	movf	___xxtofl@sign^0,w,c
  1992  000FF6  B4D8               	btfsc	status,2,c
  1993  000FF8  EF00  F008         	goto	u1671
  1994  000FFC  EF02  F008         	goto	u1670
  1995  001000                     u1671:
  1996  001000  EF24  F008         	goto	l915
  1997  001004                     u1670:
  1998  001004  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  1999  001006  EF09  F008         	goto	u1680
  2000  00100A  EF07  F008         	goto	u1681
  2001  00100E                     u1681:
  2002  00100E  EF24  F008         	goto	l915
  2003  001012                     u1680:
  2004  001012  C001  F005         	movff	___xxtofl@val,??___xxtofl
  2005  001016  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  2006  00101A  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  2007  00101E  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  2008  001022  1E05               	comf	??___xxtofl^0,f,c
  2009  001024  1E06               	comf	(??___xxtofl+1)^0,f,c
  2010  001026  1E07               	comf	(??___xxtofl+2)^0,f,c
  2011  001028  1E08               	comf	(??___xxtofl+3)^0,f,c
  2012  00102A  2A05               	incf	??___xxtofl^0,f,c
  2013  00102C  0E00               	movlw	0
  2014  00102E  2206               	addwfc	(??___xxtofl+1)^0,f,c
  2015  001030  2207               	addwfc	(??___xxtofl+2)^0,f,c
  2016  001032  2208               	addwfc	(??___xxtofl+3)^0,f,c
  2017  001034  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  2018  001038  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  2019  00103C  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  2020  001040  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  2021  001044  EF2C  F008         	goto	l2169
  2022  001048                     l915:
  2023  001048  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  2024  00104C  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  2025  001050  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  2026  001054  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  2027  001058                     l2169:
  2028  001058  5001               	movf	___xxtofl@val^0,w,c
  2029  00105A  1002               	iorwf	(___xxtofl@val+1)^0,w,c
  2030  00105C  1003               	iorwf	(___xxtofl@val+2)^0,w,c
  2031  00105E  1004               	iorwf	(___xxtofl@val+3)^0,w,c
  2032  001060  A4D8               	btfss	status,2,c
  2033  001062  EF35  F008         	goto	u1691
  2034  001066  EF37  F008         	goto	u1690
  2035  00106A                     u1691:
  2036  00106A  EF41  F008         	goto	l2175
  2037  00106E                     u1690:
  2038  00106E  0E00               	movlw	0
  2039  001070  6E01               	movwf	?___xxtofl^0,c
  2040  001072  0E00               	movlw	0
  2041  001074  6E02               	movwf	(?___xxtofl+1)^0,c
  2042  001076  0E00               	movlw	0
  2043  001078  6E03               	movwf	(?___xxtofl+2)^0,c
  2044  00107A  0E00               	movlw	0
  2045  00107C  6E04               	movwf	(?___xxtofl+3)^0,c
  2046  00107E  EFD2  F008         	goto	l918
  2047  001082                     l2175:
  2048  001082  0E96               	movlw	150
  2049  001084  6E0A               	movwf	___xxtofl@exp^0,c
  2050  001086  EF4B  F008         	goto	l2179
  2051  00108A                     l2177:
  2052  00108A  2A0A               	incf	___xxtofl@exp^0,f,c
  2053  00108C  90D8               	bcf	status,0,c
  2054  00108E  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  2055  001090  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  2056  001092  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  2057  001094  320B               	rrcf	___xxtofl@arg^0,f,c
  2058  001096                     l2179:
  2059  001096  0E00               	movlw	0
  2060  001098  140B               	andwf	___xxtofl@arg^0,w,c
  2061  00109A  6E05               	movwf	??___xxtofl^0,c
  2062  00109C  0E00               	movlw	0
  2063  00109E  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  2064  0010A0  6E06               	movwf	(??___xxtofl+1)^0,c
  2065  0010A2  0E00               	movlw	0
  2066  0010A4  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  2067  0010A6  6E07               	movwf	(??___xxtofl+2)^0,c
  2068  0010A8  0EFE               	movlw	254
  2069  0010AA  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  2070  0010AC  6E08               	movwf	(??___xxtofl+3)^0,c
  2071  0010AE  5005               	movf	??___xxtofl^0,w,c
  2072  0010B0  1006               	iorwf	(??___xxtofl+1)^0,w,c
  2073  0010B2  1007               	iorwf	(??___xxtofl+2)^0,w,c
  2074  0010B4  1008               	iorwf	(??___xxtofl+3)^0,w,c
  2075  0010B6  A4D8               	btfss	status,2,c
  2076  0010B8  EF60  F008         	goto	u1701
  2077  0010BC  EF62  F008         	goto	u1700
  2078  0010C0                     u1701:
  2079  0010C0  EF45  F008         	goto	l2177
  2080  0010C4                     u1700:
  2081  0010C4  EF70  F008         	goto	l922
  2082  0010C8                     l2181:
  2083  0010C8  2A0A               	incf	___xxtofl@exp^0,f,c
  2084  0010CA  0E01               	movlw	1
  2085  0010CC  260B               	addwf	___xxtofl@arg^0,f,c
  2086  0010CE  0E00               	movlw	0
  2087  0010D0  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
  2088  0010D2  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
  2089  0010D4  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
  2090  0010D6  90D8               	bcf	status,0,c
  2091  0010D8  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  2092  0010DA  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  2093  0010DC  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  2094  0010DE  320B               	rrcf	___xxtofl@arg^0,f,c
  2095  0010E0                     l922:
  2096  0010E0  0E00               	movlw	0
  2097  0010E2  140B               	andwf	___xxtofl@arg^0,w,c
  2098  0010E4  6E05               	movwf	??___xxtofl^0,c
  2099  0010E6  0E00               	movlw	0
  2100  0010E8  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  2101  0010EA  6E06               	movwf	(??___xxtofl+1)^0,c
  2102  0010EC  0E00               	movlw	0
  2103  0010EE  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  2104  0010F0  6E07               	movwf	(??___xxtofl+2)^0,c
  2105  0010F2  0EFF               	movlw	255
  2106  0010F4  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  2107  0010F6  6E08               	movwf	(??___xxtofl+3)^0,c
  2108  0010F8  5005               	movf	??___xxtofl^0,w,c
  2109  0010FA  1006               	iorwf	(??___xxtofl+1)^0,w,c
  2110  0010FC  1007               	iorwf	(??___xxtofl+2)^0,w,c
  2111  0010FE  1008               	iorwf	(??___xxtofl+3)^0,w,c
  2112  001100  A4D8               	btfss	status,2,c
  2113  001102  EF85  F008         	goto	u1711
  2114  001106  EF87  F008         	goto	u1710
  2115  00110A                     u1711:
  2116  00110A  EF64  F008         	goto	l2181
  2117  00110E                     u1710:
  2118  00110E  EF8F  F008         	goto	l2189
  2119  001112                     l2187:
  2120  001112  060A               	decf	___xxtofl@exp^0,f,c
  2121  001114  90D8               	bcf	status,0,c
  2122  001116  360B               	rlcf	___xxtofl@arg^0,f,c
  2123  001118  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
  2124  00111A  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
  2125  00111C  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
  2126  00111E                     l2189:
  2127  00111E  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
  2128  001120  EF94  F008         	goto	u1721
  2129  001124  EF96  F008         	goto	u1720
  2130  001128                     u1721:
  2131  001128  EF9E  F008         	goto	l929
  2132  00112C                     u1720:
  2133  00112C  0E02               	movlw	2
  2134  00112E  600A               	cpfslt	___xxtofl@exp^0,c
  2135  001130  EF9C  F008         	goto	u1731
  2136  001134  EF9E  F008         	goto	u1730
  2137  001138                     u1731:
  2138  001138  EF89  F008         	goto	l2187
  2139  00113C                     u1730:
  2140  00113C                     l929:
  2141  00113C  B00A               	btfsc	___xxtofl@exp^0,0,c
  2142  00113E  EFA3  F008         	goto	u1741
  2143  001142  EFA5  F008         	goto	u1740
  2144  001146                     u1741:
  2145  001146  EFA6  F008         	goto	l2195
  2146  00114A                     u1740:
  2147  00114A  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
  2148  00114C                     l2195:
  2149  00114C  90D8               	bcf	status,0,c
  2150  00114E  320A               	rrcf	___xxtofl@exp^0,f,c
  2151  001150  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  2152  001154  6A06               	clrf	(??___xxtofl+1)^0,c
  2153  001156  6A07               	clrf	(??___xxtofl+2)^0,c
  2154  001158  6A08               	clrf	(??___xxtofl+3)^0,c
  2155  00115A  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  2156  00115E  6A07               	clrf	(??___xxtofl+2)^0,c
  2157  001160  6A06               	clrf	(??___xxtofl+1)^0,c
  2158  001162  6A05               	clrf	??___xxtofl^0,c
  2159  001164  5005               	movf	??___xxtofl^0,w,c
  2160  001166  120B               	iorwf	___xxtofl@arg^0,f,c
  2161  001168  5006               	movf	(??___xxtofl+1)^0,w,c
  2162  00116A  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
  2163  00116C  5007               	movf	(??___xxtofl+2)^0,w,c
  2164  00116E  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
  2165  001170  5008               	movf	(??___xxtofl+3)^0,w,c
  2166  001172  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
  2167  001174  5009               	movf	___xxtofl@sign^0,w,c
  2168  001176  B4D8               	btfsc	status,2,c
  2169  001178  EFC0  F008         	goto	u1751
  2170  00117C  EFC2  F008         	goto	u1750
  2171  001180                     u1751:
  2172  001180  EFCA  F008         	goto	l2205
  2173  001184                     u1750:
  2174  001184  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  2175  001186  EFC9  F008         	goto	u1760
  2176  00118A  EFC7  F008         	goto	u1761
  2177  00118E                     u1761:
  2178  00118E  EFCA  F008         	goto	l2205
  2179  001192                     u1760:
  2180  001192  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
  2181  001194                     l2205:
  2182  001194  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  2183  001198  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  2184  00119C  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  2185  0011A0  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  2186  0011A4                     l918:
  2187  0011A4  0012               	return		;funcret
  2188  0011A6                     __end_of___xxtofl:
  2189                           	callstack 0
  2190                           
  2191 ;; *************** function ___fltol *****************
  2192 ;; Defined at:
  2193 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\fltol.c"
  2194 ;; Parameters:    Size  Location     Type
  2195 ;;  f1              4    0[COMRAM] unsigned char 
  2196 ;; Auto vars:     Size  Location     Type
  2197 ;;  exp1            1    9[COMRAM] unsigned char 
  2198 ;;  sign1           1    8[COMRAM] unsigned char 
  2199 ;; Return value:  Size  Location     Type
  2200 ;;                  4    0[COMRAM] long 
  2201 ;; Registers used:
  2202 ;;		wreg, status,2, status,0
  2203 ;; Tracked objects:
  2204 ;;		On entry : 0/0
  2205 ;;		On exit  : 0/0
  2206 ;;		Unchanged: 0/0
  2207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2208 ;;      Params:         4       0       0       0       0       0       0       0       0
  2209 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2210 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2211 ;;      Totals:        10       0       0       0       0       0       0       0       0
  2212 ;;Total ram usage:       10 bytes
  2213 ;; Hardware stack levels used: 1
  2214 ;; This function calls:
  2215 ;;		Nothing
  2216 ;; This function is called by:
  2217 ;;		_Photoresist
  2218 ;; This function uses a non-reentrant model
  2219 ;;
  2220                           
  2221                           	psect	text7
  2222  00176A                     __ptext7:
  2223                           	callstack 0
  2224  00176A                     ___fltol:
  2225                           	callstack 28
  2226  00176A  3403               	rlcf	(___fltol@f1+2)^0,w,c
  2227  00176C  3404               	rlcf	(___fltol@f1+3)^0,w,c
  2228  00176E  6E0A               	movwf	___fltol@exp1^0,c
  2229  001770  500A               	movf	___fltol@exp1^0,w,c
  2230  001772  A4D8               	btfss	status,2,c
  2231  001774  EFBE  F00B         	goto	u1601
  2232  001778  EFC0  F00B         	goto	u1600
  2233  00177C                     u1601:
  2234  00177C  EFCA  F00B         	goto	l2125
  2235  001780                     u1600:
  2236  001780                     l2121:
  2237  001780  0E00               	movlw	0
  2238  001782  6E01               	movwf	?___fltol^0,c
  2239  001784  0E00               	movlw	0
  2240  001786  6E02               	movwf	(?___fltol+1)^0,c
  2241  001788  0E00               	movlw	0
  2242  00178A  6E03               	movwf	(?___fltol+2)^0,c
  2243  00178C  0E00               	movlw	0
  2244  00178E  6E04               	movwf	(?___fltol+3)^0,c
  2245  001790  EF37  F00C         	goto	l557
  2246  001794                     l2125:
  2247  001794  C001  F005         	movff	___fltol@f1,??___fltol
  2248  001798  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  2249  00179C  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  2250  0017A0  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  2251  0017A4  0E20               	movlw	32
  2252  0017A6  EFDA  F00B         	goto	u1610
  2253  0017AA                     u1615:
  2254  0017AA  90D8               	bcf	status,0,c
  2255  0017AC  3208               	rrcf	(??___fltol+3)^0,f,c
  2256  0017AE  3207               	rrcf	(??___fltol+2)^0,f,c
  2257  0017B0  3206               	rrcf	(??___fltol+1)^0,f,c
  2258  0017B2  3205               	rrcf	??___fltol^0,f,c
  2259  0017B4                     u1610:
  2260  0017B4  2EE8               	decfsz	wreg,f,c
  2261  0017B6  EFD5  F00B         	goto	u1615
  2262  0017BA  5005               	movf	??___fltol^0,w,c
  2263  0017BC  6E09               	movwf	___fltol@sign1^0,c
  2264  0017BE  8E03               	bsf	(___fltol@f1+2)^0,7,c
  2265  0017C0  0EFF               	movlw	255
  2266  0017C2  1601               	andwf	___fltol@f1^0,f,c
  2267  0017C4  0EFF               	movlw	255
  2268  0017C6  1602               	andwf	(___fltol@f1+1)^0,f,c
  2269  0017C8  0EFF               	movlw	255
  2270  0017CA  1603               	andwf	(___fltol@f1+2)^0,f,c
  2271  0017CC  0E00               	movlw	0
  2272  0017CE  1604               	andwf	(___fltol@f1+3)^0,f,c
  2273  0017D0  0E96               	movlw	150
  2274  0017D2  5E0A               	subwf	___fltol@exp1^0,f,c
  2275  0017D4  BE0A               	btfsc	___fltol@exp1^0,7,c
  2276  0017D6  EFF1  F00B         	goto	u1620
  2277  0017DA  EFEF  F00B         	goto	u1621
  2278  0017DE                     u1621:
  2279  0017DE  EF07  F00C         	goto	l2145
  2280  0017E2                     u1620:
  2281  0017E2  500A               	movf	___fltol@exp1^0,w,c
  2282  0017E4  0A80               	xorlw	128
  2283  0017E6  0F97               	addlw	151
  2284  0017E8  B0D8               	btfsc	status,0,c
  2285  0017EA  EFF9  F00B         	goto	u1631
  2286  0017EE  EFFB  F00B         	goto	u1630
  2287  0017F2                     u1631:
  2288  0017F2  EFFD  F00B         	goto	l2141
  2289  0017F6                     u1630:
  2290  0017F6  EFC0  F00B         	goto	l2121
  2291  0017FA                     l2141:
  2292  0017FA  90D8               	bcf	status,0,c
  2293  0017FC  3204               	rrcf	(___fltol@f1+3)^0,f,c
  2294  0017FE  3203               	rrcf	(___fltol@f1+2)^0,f,c
  2295  001800  3202               	rrcf	(___fltol@f1+1)^0,f,c
  2296  001802  3201               	rrcf	___fltol@f1^0,f,c
  2297  001804  3E0A               	incfsz	___fltol@exp1^0,f,c
  2298  001806  EFFD  F00B         	goto	l2141
  2299  00180A  EF1F  F00C         	goto	l2155
  2300  00180E                     l2145:
  2301  00180E  0E1F               	movlw	31
  2302  001810  640A               	cpfsgt	___fltol@exp1^0,c
  2303  001812  EF0D  F00C         	goto	u1641
  2304  001816  EF0F  F00C         	goto	u1640
  2305  00181A                     u1641:
  2306  00181A  EF17  F00C         	goto	l2153
  2307  00181E                     u1640:
  2308  00181E  EFC0  F00B         	goto	l2121
  2309  001822                     l2151:
  2310  001822  90D8               	bcf	status,0,c
  2311  001824  3601               	rlcf	___fltol@f1^0,f,c
  2312  001826  3602               	rlcf	(___fltol@f1+1)^0,f,c
  2313  001828  3603               	rlcf	(___fltol@f1+2)^0,f,c
  2314  00182A  3604               	rlcf	(___fltol@f1+3)^0,f,c
  2315  00182C  060A               	decf	___fltol@exp1^0,f,c
  2316  00182E                     l2153:
  2317  00182E  500A               	movf	___fltol@exp1^0,w,c
  2318  001830  A4D8               	btfss	status,2,c
  2319  001832  EF1D  F00C         	goto	u1651
  2320  001836  EF1F  F00C         	goto	u1650
  2321  00183A                     u1651:
  2322  00183A  EF11  F00C         	goto	l2151
  2323  00183E                     u1650:
  2324  00183E                     l2155:
  2325  00183E  5009               	movf	___fltol@sign1^0,w,c
  2326  001840  B4D8               	btfsc	status,2,c
  2327  001842  EF25  F00C         	goto	u1661
  2328  001846  EF27  F00C         	goto	u1660
  2329  00184A                     u1661:
  2330  00184A  EF2F  F00C         	goto	l2159
  2331  00184E                     u1660:
  2332  00184E  1E04               	comf	(___fltol@f1+3)^0,f,c
  2333  001850  1E03               	comf	(___fltol@f1+2)^0,f,c
  2334  001852  1E02               	comf	(___fltol@f1+1)^0,f,c
  2335  001854  6C01               	negf	___fltol@f1^0,c
  2336  001856  0E00               	movlw	0
  2337  001858  2202               	addwfc	(___fltol@f1+1)^0,f,c
  2338  00185A  2203               	addwfc	(___fltol@f1+2)^0,f,c
  2339  00185C  2204               	addwfc	(___fltol@f1+3)^0,f,c
  2340  00185E                     l2159:
  2341  00185E  C001  F001         	movff	___fltol@f1,?___fltol
  2342  001862  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  2343  001866  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  2344  00186A  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  2345  00186E                     l557:
  2346  00186E  0012               	return		;funcret
  2347  001870                     __end_of___fltol:
  2348                           	callstack 0
  2349                           
  2350 ;; *************** function _LCD_Init *****************
  2351 ;; Defined at:
  2352 ;;		line 13 in file "LCD.c"
  2353 ;; Parameters:    Size  Location     Type
  2354 ;;		None
  2355 ;; Auto vars:     Size  Location     Type
  2356 ;;		None
  2357 ;; Return value:  Size  Location     Type
  2358 ;;                  1    wreg      void 
  2359 ;; Registers used:
  2360 ;;		wreg, status,2, status,0, cstack
  2361 ;; Tracked objects:
  2362 ;;		On entry : 0/0
  2363 ;;		On exit  : 0/0
  2364 ;;		Unchanged: 0/0
  2365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2366 ;;      Params:         0       0       0       0       0       0       0       0       0
  2367 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2368 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2369 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2370 ;;Total ram usage:        1 bytes
  2371 ;; Hardware stack levels used: 1
  2372 ;; Hardware stack levels required when called: 1
  2373 ;; This function calls:
  2374 ;;		_LCD_Command
  2375 ;; This function is called by:
  2376 ;;		_main
  2377 ;;		_Photoresist
  2378 ;; This function uses a non-reentrant model
  2379 ;;
  2380                           
  2381                           	psect	text8
  2382  001F00                     __ptext8:
  2383                           	callstack 0
  2384  001F00                     _LCD_Init:
  2385                           	callstack 27
  2386  001F00                     
  2387                           ;LCD.c: 15:     TRISD = 0;
  2388  001F00  0E00               	movlw	0
  2389  001F02  6E95               	movwf	149,c	;volatile
  2390  001F04                     
  2391                           ;LCD.c: 16:     _delay((unsigned long)((15)*(8000000/4000.0)));
  2392  001F04  0E27               	movlw	39
  2393  001F06  6E03               	movwf	??_LCD_Init^0,c
  2394  001F08  0EF5               	movlw	245
  2395  001F0A                     u2227:
  2396  001F0A  2EE8               	decfsz	wreg,f,c
  2397  001F0C  D7FE               	bra	u2227
  2398  001F0E  2E03               	decfsz	??_LCD_Init^0,f,c
  2399  001F10  D7FC               	bra	u2227
  2400  001F12  F000               	nop	
  2401  001F14                     
  2402                           ;LCD.c: 17:     LCD_Command(0x02);
  2403  001F14  0E02               	movlw	2
  2404  001F16  ECC0  F00E         	call	_LCD_Command
  2405  001F1A                     
  2406                           ;LCD.c: 18:     LCD_Command(0x28);
  2407  001F1A  0E28               	movlw	40
  2408  001F1C  ECC0  F00E         	call	_LCD_Command
  2409  001F20                     
  2410                           ;LCD.c: 19:     LCD_Command(0x01);
  2411  001F20  0E01               	movlw	1
  2412  001F22  ECC0  F00E         	call	_LCD_Command
  2413  001F26                     
  2414                           ;LCD.c: 20:     LCD_Command(0x0c);
  2415  001F26  0E0C               	movlw	12
  2416  001F28  ECC0  F00E         	call	_LCD_Command
  2417  001F2C                     
  2418                           ;LCD.c: 21:     LCD_Command(0x06);
  2419  001F2C  0E06               	movlw	6
  2420  001F2E  ECC0  F00E         	call	_LCD_Command
  2421  001F32  0012               	return		;funcret
  2422  001F34                     __end_of_LCD_Init:
  2423                           	callstack 0
  2424                           
  2425 ;; *************** function _Dht11 *****************
  2426 ;; Defined at:
  2427 ;;		line 151 in file "Main.c"
  2428 ;; Parameters:    Size  Location     Type
  2429 ;;		None
  2430 ;; Auto vars:     Size  Location     Type
  2431 ;;  value          10   13[BANK0 ] unsigned char [10]
  2432 ;;  T_Integral      1   26[BANK0 ] unsigned char 
  2433 ;;  T_Decimal       1   25[BANK0 ] unsigned char 
  2434 ;;  RH_Integral     1   24[BANK0 ] unsigned char 
  2435 ;;  RH_Decimal      1   23[BANK0 ] unsigned char 
  2436 ;;  Checksum        1    0        unsigned char 
  2437 ;; Return value:  Size  Location     Type
  2438 ;;                  1    wreg      void 
  2439 ;; Registers used:
  2440 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2441 ;; Tracked objects:
  2442 ;;		On entry : 0/0
  2443 ;;		On exit  : 0/0
  2444 ;;		Unchanged: 0/0
  2445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2446 ;;      Params:         0       0       0       0       0       0       0       0       0
  2447 ;;      Locals:         0      14       0       0       0       0       0       0       0
  2448 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2449 ;;      Totals:         2      14       0       0       0       0       0       0       0
  2450 ;;Total ram usage:       16 bytes
  2451 ;; Hardware stack levels used: 1
  2452 ;; Hardware stack levels required when called: 8
  2453 ;; This function calls:
  2454 ;;		_DHT11_CheckResponse
  2455 ;;		_DHT11_ReadData
  2456 ;;		_DHT11_Start
  2457 ;;		_LCD_Char
  2458 ;;		_LCD_Clear
  2459 ;;		_LCD_String
  2460 ;;		_LCD_String_xy
  2461 ;;		_sprintf
  2462 ;; This function is called by:
  2463 ;;		_Security
  2464 ;; This function uses a non-reentrant model
  2465 ;;
  2466                           
  2467                           	psect	text9
  2468  001646                     __ptext9:
  2469                           	callstack 0
  2470  001646                     _Dht11:
  2471                           	callstack 21
  2472  001646                     
  2473                           ;Main.c: 152:     char RH_Decimal,RH_Integral,T_Decimal,T_Integral;;Main.c: 153:     cha
      +                          r Checksum;;Main.c: 154:     char value[10];;Main.c: 156:     DHT11_Start();
  2474  001646  ECC2  F00F         	call	_DHT11_Start	;wreg free
  2475  00164A                     
  2476                           ;Main.c: 157:     DHT11_CheckResponse();
  2477  00164A  EC9A  F00F         	call	_DHT11_CheckResponse	;wreg free
  2478  00164E                     
  2479                           ;Main.c: 160:     RH_Integral = DHT11_ReadData();
  2480  00164E  EC41  F00E         	call	_DHT11_ReadData	;wreg free
  2481  001652  0100               	movlb	0	; () banked
  2482  001654  6FCA               	movwf	Dht11@RH_Integral& (0+255),b
  2483  001656                     
  2484                           ; BSR set to: 0
  2485                           ;Main.c: 161:     RH_Decimal = DHT11_ReadData();
  2486  001656  EC41  F00E         	call	_DHT11_ReadData	;wreg free
  2487  00165A  0100               	movlb	0	; () banked
  2488  00165C  6FC9               	movwf	Dht11@RH_Decimal& (0+255),b
  2489  00165E                     
  2490                           ; BSR set to: 0
  2491                           ;Main.c: 162:     T_Integral = DHT11_ReadData();
  2492  00165E  EC41  F00E         	call	_DHT11_ReadData	;wreg free
  2493  001662  0100               	movlb	0	; () banked
  2494  001664  6FCC               	movwf	Dht11@T_Integral& (0+255),b
  2495  001666                     
  2496                           ; BSR set to: 0
  2497                           ;Main.c: 163:     T_Decimal = DHT11_ReadData();
  2498  001666  EC41  F00E         	call	_DHT11_ReadData	;wreg free
  2499  00166A  0100               	movlb	0	; () banked
  2500  00166C  6FCB               	movwf	Dht11@T_Decimal& (0+255),b
  2501  00166E                     
  2502                           ; BSR set to: 0
  2503  00166E  EC41  F00E         	call	_DHT11_ReadData	;wreg free
  2504  001672                     
  2505                           ;Main.c: 165:     LCD_Clear();
  2506  001672  ECD2  F00F         	call	_LCD_Clear	;wreg free
  2507  001676                     
  2508                           ;Main.c: 167:     sprintf(value,"%d",RH_Integral);
  2509  001676  0EBF               	movlw	low Dht11@value
  2510  001678  6E58               	movwf	sprintf@s^0,c
  2511  00167A  0E00               	movlw	high Dht11@value
  2512  00167C  6E59               	movwf	(sprintf@s+1)^0,c
  2513  00167E  0E82               	movlw	low (STR_15+1)
  2514  001680  6E5A               	movwf	sprintf@fmt^0,c
  2515  001682  0E08               	movlw	high (STR_15+1)
  2516  001684  6E5B               	movwf	(sprintf@fmt+1)^0,c
  2517  001686  C0CA  F05C         	movff	Dht11@RH_Integral,?_sprintf+4
  2518  00168A  6A5D               	clrf	(?_sprintf+5)^0,c
  2519  00168C  EC6F  F00E         	call	_sprintf	;wreg free
  2520  001690                     
  2521                           ;Main.c: 168:     LCD_String_xy(1,4,value);
  2522  001690  0E04               	movlw	4
  2523  001692  6E05               	movwf	LCD_String_xy@pos^0,c
  2524  001694  0EBF               	movlw	low Dht11@value
  2525  001696  6E06               	movwf	LCD_String_xy@msg^0,c
  2526  001698  0E00               	movlw	high Dht11@value
  2527  00169A  6E07               	movwf	(LCD_String_xy@msg+1)^0,c
  2528  00169C  0E01               	movlw	1
  2529  00169E  EC2A  F00F         	call	_LCD_String_xy
  2530  0016A2                     
  2531                           ;Main.c: 169:     sprintf(value,".%d ",RH_Decimal);
  2532  0016A2  0EBF               	movlw	low Dht11@value
  2533  0016A4  6E58               	movwf	sprintf@s^0,c
  2534  0016A6  0E00               	movlw	high Dht11@value
  2535  0016A8  6E59               	movwf	(sprintf@s+1)^0,c
  2536  0016AA  0E73               	movlw	low STR_12
  2537  0016AC  6E5A               	movwf	sprintf@fmt^0,c
  2538  0016AE  0E08               	movlw	high STR_12
  2539  0016B0  6E5B               	movwf	(sprintf@fmt+1)^0,c
  2540  0016B2  C0C9  F05C         	movff	Dht11@RH_Decimal,?_sprintf+4
  2541  0016B6  6A5D               	clrf	(?_sprintf+5)^0,c
  2542  0016B8  EC6F  F00E         	call	_sprintf	;wreg free
  2543  0016BC                     
  2544                           ;Main.c: 170:     LCD_String(value);
  2545  0016BC  0EBF               	movlw	low Dht11@value
  2546  0016BE  6E03               	movwf	LCD_String@msg^0,c
  2547  0016C0  0E00               	movlw	high Dht11@value
  2548  0016C2  6E04               	movwf	(LCD_String@msg+1)^0,c
  2549  0016C4  EC12  F00E         	call	_LCD_String	;wreg free
  2550  0016C8                     
  2551                           ;Main.c: 171:     LCD_Char('%');
  2552  0016C8  0E25               	movlw	37
  2553  0016CA  EC98  F00E         	call	_LCD_Char
  2554  0016CE                     
  2555                           ;Main.c: 172:     LCD_String_xy(1,0,"Hr:");
  2556  0016CE  0E00               	movlw	0
  2557  0016D0  6E05               	movwf	LCD_String_xy@pos^0,c
  2558  0016D2  0E7D               	movlw	low STR_13
  2559  0016D4  6E06               	movwf	LCD_String_xy@msg^0,c
  2560  0016D6  0E08               	movlw	high STR_13
  2561  0016D8  6E07               	movwf	(LCD_String_xy@msg+1)^0,c
  2562  0016DA  0E01               	movlw	1
  2563  0016DC  EC2A  F00F         	call	_LCD_String_xy
  2564  0016E0                     
  2565                           ;Main.c: 175:     sprintf(value,"%d",T_Integral);
  2566  0016E0  0EBF               	movlw	low Dht11@value
  2567  0016E2  6E58               	movwf	sprintf@s^0,c
  2568  0016E4  0E00               	movlw	high Dht11@value
  2569  0016E6  6E59               	movwf	(sprintf@s+1)^0,c
  2570  0016E8  0E82               	movlw	low (STR_15+1)
  2571  0016EA  6E5A               	movwf	sprintf@fmt^0,c
  2572  0016EC  0E08               	movlw	high (STR_15+1)
  2573  0016EE  6E5B               	movwf	(sprintf@fmt+1)^0,c
  2574  0016F0  C0CC  F05C         	movff	Dht11@T_Integral,?_sprintf+4
  2575  0016F4  6A5D               	clrf	(?_sprintf+5)^0,c
  2576  0016F6  EC6F  F00E         	call	_sprintf	;wreg free
  2577  0016FA                     
  2578                           ;Main.c: 176:     LCD_String_xy(2,5,value);
  2579  0016FA  0E05               	movlw	5
  2580  0016FC  6E05               	movwf	LCD_String_xy@pos^0,c
  2581  0016FE  0EBF               	movlw	low Dht11@value
  2582  001700  6E06               	movwf	LCD_String_xy@msg^0,c
  2583  001702  0E00               	movlw	high Dht11@value
  2584  001704  6E07               	movwf	(LCD_String_xy@msg+1)^0,c
  2585  001706  0E02               	movlw	2
  2586  001708  EC2A  F00F         	call	_LCD_String_xy
  2587  00170C                     
  2588                           ;Main.c: 177:     sprintf(value,".%d",T_Decimal);
  2589  00170C  0EBF               	movlw	low Dht11@value
  2590  00170E  6E58               	movwf	sprintf@s^0,c
  2591  001710  0E00               	movlw	high Dht11@value
  2592  001712  6E59               	movwf	(sprintf@s+1)^0,c
  2593  001714  0E81               	movlw	low STR_15
  2594  001716  6E5A               	movwf	sprintf@fmt^0,c
  2595  001718  0E08               	movlw	high STR_15
  2596  00171A  6E5B               	movwf	(sprintf@fmt+1)^0,c
  2597  00171C  C0CB  F05C         	movff	Dht11@T_Decimal,?_sprintf+4
  2598  001720  6A5D               	clrf	(?_sprintf+5)^0,c
  2599  001722  EC6F  F00E         	call	_sprintf	;wreg free
  2600  001726                     
  2601                           ;Main.c: 178:     LCD_String(value);
  2602  001726  0EBF               	movlw	low Dht11@value
  2603  001728  6E03               	movwf	LCD_String@msg^0,c
  2604  00172A  0E00               	movlw	high Dht11@value
  2605  00172C  6E04               	movwf	(LCD_String@msg+1)^0,c
  2606  00172E  EC12  F00E         	call	_LCD_String	;wreg free
  2607  001732                     
  2608                           ;Main.c: 179:     LCD_Char(0xdf);
  2609  001732  0EDF               	movlw	223
  2610  001734  EC98  F00E         	call	_LCD_Char
  2611  001738                     
  2612                           ;Main.c: 180:     LCD_Char('C');
  2613  001738  0E43               	movlw	67
  2614  00173A  EC98  F00E         	call	_LCD_Char
  2615  00173E                     
  2616                           ;Main.c: 181:     LCD_String_xy(2,0,"Tem:");
  2617  00173E  0E00               	movlw	0
  2618  001740  6E05               	movwf	LCD_String_xy@pos^0,c
  2619  001742  0E78               	movlw	low STR_16
  2620  001744  6E06               	movwf	LCD_String_xy@msg^0,c
  2621  001746  0E08               	movlw	high STR_16
  2622  001748  6E07               	movwf	(LCD_String_xy@msg+1)^0,c
  2623  00174A  0E02               	movlw	2
  2624  00174C  EC2A  F00F         	call	_LCD_String_xy
  2625  001750                     
  2626                           ;Main.c: 183:     _delay((unsigned long)((2000)*(8000000/4000.0)));
  2627  001750  0E15               	movlw	21
  2628  001752  6E5F               	movwf	(??_Dht11+1)^0,c
  2629  001754  0E4B               	movlw	75
  2630  001756  6E5E               	movwf	??_Dht11^0,c
  2631  001758  0EBE               	movlw	190
  2632  00175A                     u2237:
  2633  00175A  2EE8               	decfsz	wreg,f,c
  2634  00175C  D7FE               	bra	u2237
  2635  00175E  2E5E               	decfsz	??_Dht11^0,f,c
  2636  001760  D7FC               	bra	u2237
  2637  001762  2E5F               	decfsz	(??_Dht11+1)^0,f,c
  2638  001764  D7FA               	bra	u2237
  2639  001766  D000               	nop2	
  2640  001768  0012               	return		;funcret
  2641  00176A                     __end_of_Dht11:
  2642                           	callstack 0
  2643                           
  2644 ;; *************** function _sprintf *****************
  2645 ;; Defined at:
  2646 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nf_sprintf.c"
  2647 ;; Parameters:    Size  Location     Type
  2648 ;;  s               2   87[COMRAM] PTR unsigned char 
  2649 ;;		 -> Dht11@value(10), Temperature(10), buffer(3), 
  2650 ;;  fmt             2   89[COMRAM] PTR const unsigned char 
  2651 ;;		 -> STR_15(4), STR_14(3), STR_12(5), STR_11(3), 
  2652 ;;		 -> STR_9(3), STR_7(4), 
  2653 ;; Auto vars:     Size  Location     Type
  2654 ;;  f              11    2[BANK0 ] struct _IO_FILE
  2655 ;;  ap              2    0[BANK0 ] PTR void [1]
  2656 ;;		 -> ?_sprintf(2), 
  2657 ;;  ret             2    0        int 
  2658 ;; Return value:  Size  Location     Type
  2659 ;;                  2   87[COMRAM] int 
  2660 ;; Registers used:
  2661 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2662 ;; Tracked objects:
  2663 ;;		On entry : 0/0
  2664 ;;		On exit  : 0/0
  2665 ;;		Unchanged: 0/0
  2666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2667 ;;      Params:         6       0       0       0       0       0       0       0       0
  2668 ;;      Locals:         0      13       0       0       0       0       0       0       0
  2669 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2670 ;;      Totals:         6      13       0       0       0       0       0       0       0
  2671 ;;Total ram usage:       19 bytes
  2672 ;; Hardware stack levels used: 1
  2673 ;; Hardware stack levels required when called: 7
  2674 ;; This function calls:
  2675 ;;		_vfprintf
  2676 ;; This function is called by:
  2677 ;;		_Security
  2678 ;;		_Photoresist
  2679 ;;		_Dht11
  2680 ;; This function uses a non-reentrant model
  2681 ;;
  2682                           
  2683                           	psect	text10
  2684  001CDE                     __ptext10:
  2685                           	callstack 0
  2686  001CDE                     _sprintf:
  2687                           	callstack 22
  2688  001CDE  0E5C               	movlw	low (?_sprintf+4)
  2689  001CE0  0100               	movlb	0	; () banked
  2690  001CE2  6FB2               	movwf	sprintf@ap& (0+255),b
  2691  001CE4  0E00               	movlw	high (?_sprintf+4)
  2692  001CE6  6FB3               	movwf	(sprintf@ap+1)& (0+255),b
  2693  001CE8  C058  F0B4         	movff	sprintf@s,sprintf@f
  2694  001CEC  C059  F0B5         	movff	sprintf@s+1,sprintf@f+1
  2695  001CF0                     
  2696                           ; BSR set to: 0
  2697  001CF0  0E00               	movlw	0
  2698  001CF2  6FB8               	movwf	(sprintf@f+4)& (0+255),b
  2699  001CF4  0E00               	movlw	0
  2700  001CF6  6FB7               	movwf	(sprintf@f+3)& (0+255),b
  2701  001CF8                     
  2702                           ; BSR set to: 0
  2703  001CF8  0E00               	movlw	0
  2704  001CFA  6FBE               	movwf	(sprintf@f+10)& (0+255),b
  2705  001CFC  0E00               	movlw	0
  2706  001CFE  6FBD               	movwf	(sprintf@f+9)& (0+255),b
  2707  001D00                     
  2708                           ; BSR set to: 0
  2709  001D00  0EB4               	movlw	low sprintf@f
  2710  001D02  6E50               	movwf	vfprintf@fp^0,c
  2711  001D04  0E00               	movlw	high sprintf@f
  2712  001D06  6E51               	movwf	(vfprintf@fp+1)^0,c
  2713  001D08  C05A  F052         	movff	sprintf@fmt,vfprintf@fmt
  2714  001D0C  C05B  F053         	movff	sprintf@fmt+1,vfprintf@fmt+1
  2715  001D10  0EB2               	movlw	low sprintf@ap
  2716  001D12  6E54               	movwf	vfprintf@ap^0,c
  2717  001D14  0E00               	movlw	high sprintf@ap
  2718  001D16  6E55               	movwf	(vfprintf@ap+1)^0,c
  2719  001D18  ECE1  F00D         	call	_vfprintf	;wreg free
  2720  001D1C  0100               	movlb	0	; () banked
  2721  001D1E  51B7               	movf	(sprintf@f+3)& (0+255),w,b
  2722  001D20  2458               	addwf	sprintf@s^0,w,c
  2723  001D22  6ED9               	movwf	fsr2l,c
  2724  001D24  51B8               	movf	(sprintf@f+4)& (0+255),w,b
  2725  001D26  2059               	addwfc	(sprintf@s+1)^0,w,c
  2726  001D28  6EDA               	movwf	fsr2h,c
  2727  001D2A  0E00               	movlw	0
  2728  001D2C  6EDF               	movwf	indf2,c
  2729  001D2E                     
  2730                           ; BSR set to: 0
  2731  001D2E  0012               	return		;funcret
  2732  001D30                     __end_of_sprintf:
  2733                           	callstack 0
  2734                           
  2735 ;; *************** function _vfprintf *****************
  2736 ;; Defined at:
  2737 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  2738 ;; Parameters:    Size  Location     Type
  2739 ;;  fp              2   79[COMRAM] PTR struct _IO_FILE
  2740 ;;		 -> sprintf@f(11), 
  2741 ;;  fmt             2   81[COMRAM] PTR const unsigned char 
  2742 ;;		 -> STR_15(4), STR_14(3), STR_12(5), STR_11(3), 
  2743 ;;		 -> STR_9(3), STR_7(4), 
  2744 ;;  ap              2   83[COMRAM] PTR PTR void 
  2745 ;;		 -> sprintf@ap(2), 
  2746 ;; Auto vars:     Size  Location     Type
  2747 ;;  cfmt            2   85[COMRAM] PTR unsigned char 
  2748 ;;		 -> STR_15(4), STR_14(3), STR_12(5), STR_11(3), 
  2749 ;;		 -> STR_9(3), STR_7(4), 
  2750 ;; Return value:  Size  Location     Type
  2751 ;;                  2   79[COMRAM] int 
  2752 ;; Registers used:
  2753 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2754 ;; Tracked objects:
  2755 ;;		On entry : 0/0
  2756 ;;		On exit  : 0/0
  2757 ;;		Unchanged: 0/0
  2758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2759 ;;      Params:         6       0       0       0       0       0       0       0       0
  2760 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2761 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2762 ;;      Totals:         8       0       0       0       0       0       0       0       0
  2763 ;;Total ram usage:        8 bytes
  2764 ;; Hardware stack levels used: 1
  2765 ;; Hardware stack levels required when called: 6
  2766 ;; This function calls:
  2767 ;;		_vfpfcnvrt
  2768 ;; This function is called by:
  2769 ;;		_sprintf
  2770 ;; This function uses a non-reentrant model
  2771 ;;
  2772                           
  2773                           	psect	text11
  2774  001BC2                     __ptext11:
  2775                           	callstack 0
  2776  001BC2                     _vfprintf:
  2777                           	callstack 22
  2778  001BC2                     
  2779                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.36\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  2780  001BC2  C052  F056         	movff	vfprintf@fmt,vfprintf@cfmt
  2781  001BC6  C053  F057         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2782  001BCA                     
  2783                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  2784  001BCA  0E00               	movlw	0
  2785  001BCC  0100               	movlb	0	; () banked
  2786  001BCE  6F6F               	movwf	(_nout+1)& (0+255),b
  2787  001BD0  0E00               	movlw	0
  2788  001BD2  6F6E               	movwf	_nout& (0+255),b
  2789                           
  2790                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  2791  001BD4  EFFF  F00D         	goto	l2041
  2792  001BD8                     l2039:
  2793                           
  2794                           ; BSR set to: 0
  2795                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  2796  001BD8  C050  F040         	movff	vfprintf@fp,vfpfcnvrt@fp
  2797  001BDC  C051  F041         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2798  001BE0  0E56               	movlw	low vfprintf@cfmt
  2799  001BE2  6E42               	movwf	vfpfcnvrt@fmt^0,c
  2800  001BE4  0E00               	movlw	high vfprintf@cfmt
  2801  001BE6  6E43               	movwf	(vfpfcnvrt@fmt+1)^0,c
  2802  001BE8  C054  F044         	movff	vfprintf@ap,vfpfcnvrt@ap
  2803  001BEC  C055  F045         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2804  001BF0  ECD3  F008         	call	_vfpfcnvrt	;wreg free
  2805  001BF4  5040               	movf	?_vfpfcnvrt^0,w,c
  2806  001BF6  0100               	movlb	0	; () banked
  2807  001BF8  276E               	addwf	_nout& (0+255),f,b
  2808  001BFA  5041               	movf	(?_vfpfcnvrt+1)^0,w,c
  2809  001BFC  236F               	addwfc	(_nout+1)& (0+255),f,b
  2810  001BFE                     l2041:
  2811                           
  2812                           ; BSR set to: 0
  2813                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  2814  001BFE  C056  FFF6         	movff	vfprintf@cfmt,tblptrl
  2815  001C02  C057  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2816  001C06                     	if	0	;tblptru may be non-zero
  2817  001C06                     	endif
  2818  001C06                     	if	0	;tblptru may be non-zero
  2819  001C06                     	endif
  2820  001C06  0008               	tblrd		*
  2821  001C08  50F5               	movf	tablat,w,c
  2822  001C0A  0900               	iorlw	0
  2823  001C0C  A4D8               	btfss	status,2,c
  2824  001C0E  EF0B  F00E         	goto	u1511
  2825  001C12  EF0D  F00E         	goto	u1510
  2826  001C16                     u1511:
  2827  001C16  EFEC  F00D         	goto	l2039
  2828  001C1A                     u1510:
  2829  001C1A                     
  2830                           ; BSR set to: 0
  2831                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  2832  001C1A  C06E  F050         	movff	_nout,?_vfprintf
  2833  001C1E  C06F  F051         	movff	_nout+1,?_vfprintf+1
  2834  001C22                     
  2835                           ; BSR set to: 0
  2836  001C22  0012               	return		;funcret
  2837  001C24                     __end_of_vfprintf:
  2838                           	callstack 0
  2839                           
  2840 ;; *************** function _vfpfcnvrt *****************
  2841 ;; Defined at:
  2842 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  2843 ;; Parameters:    Size  Location     Type
  2844 ;;  fp              2   63[COMRAM] PTR struct _IO_FILE
  2845 ;;		 -> sprintf@f(11), 
  2846 ;;  fmt             2   65[COMRAM] PTR PTR unsigned char 
  2847 ;;		 -> vfprintf@cfmt(2), 
  2848 ;;  ap              2   67[COMRAM] PTR PTR void 
  2849 ;;		 -> sprintf@ap(2), 
  2850 ;; Auto vars:     Size  Location     Type
  2851 ;;  ll              8   71[COMRAM] long long 
  2852 ;;  llu             8    0        unsigned long long 
  2853 ;;  f               4    0        unsigned long long 
  2854 ;;  vp              3    0        PTR void 
  2855 ;;  ct              3    0        unsigned char [3]
  2856 ;;  cp              3    0        PTR unsigned char 
  2857 ;;  i               2    0        int 
  2858 ;;  done            2    0        int 
  2859 ;;  c               1    0        unsigned char 
  2860 ;; Return value:  Size  Location     Type
  2861 ;;                  2   63[COMRAM] int 
  2862 ;; Registers used:
  2863 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2864 ;; Tracked objects:
  2865 ;;		On entry : 0/0
  2866 ;;		On exit  : 0/0
  2867 ;;		Unchanged: 0/0
  2868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2869 ;;      Params:         6       0       0       0       0       0       0       0       0
  2870 ;;      Locals:         8       0       0       0       0       0       0       0       0
  2871 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2872 ;;      Totals:        16       0       0       0       0       0       0       0       0
  2873 ;;Total ram usage:       16 bytes
  2874 ;; Hardware stack levels used: 1
  2875 ;; Hardware stack levels required when called: 5
  2876 ;; This function calls:
  2877 ;;		_dtoa
  2878 ;;		_fputc
  2879 ;; This function is called by:
  2880 ;;		_vfprintf
  2881 ;; This function uses a non-reentrant model
  2882 ;;
  2883                           
  2884                           	psect	text12
  2885  0011A6                     __ptext12:
  2886                           	callstack 0
  2887  0011A6                     _vfpfcnvrt:
  2888                           	callstack 22
  2889  0011A6                     
  2890                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.36\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.36\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.36\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          6\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  2891  0011A6  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2892  0011AA  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2893  0011AE  CFDE FFF6          	movff	postinc2,tblptrl
  2894  0011B2  CFDD FFF7          	movff	postdec2,tblptrh
  2895  0011B6                     	if	0	;tblptru may be non-zero
  2896  0011B6                     	endif
  2897  0011B6                     	if	0	;tblptru may be non-zero
  2898  0011B6                     	endif
  2899  0011B6  0008               	tblrd		*
  2900  0011B8  50F5               	movf	tablat,w,c
  2901  0011BA  0A25               	xorlw	37
  2902  0011BC  A4D8               	btfss	status,2,c
  2903  0011BE  EFE3  F008         	goto	u1441
  2904  0011C2  EFE5  F008         	goto	u1440
  2905  0011C6                     u1441:
  2906  0011C6  EF91  F009         	goto	l1999
  2907  0011CA                     u1440:
  2908  0011CA                     
  2909                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  2910  0011CA  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2911  0011CE  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2912  0011D2  2ADE               	incf	postinc2,f,c
  2913  0011D4  0E00               	movlw	0
  2914  0011D6  22DD               	addwfc	postdec2,f,c
  2915  0011D8                     
  2916                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  2917  0011D8  0E00               	movlw	0
  2918  0011DA  0100               	movlb	0	; () banked
  2919  0011DC  6F71               	movwf	(_width+1)& (0+255),b
  2920  0011DE  0E00               	movlw	0
  2921  0011E0  6F70               	movwf	_width& (0+255),b
  2922  0011E2  C070  F074         	movff	_width,_flags
  2923  0011E6  C071  F075         	movff	_width+1,_flags+1
  2924  0011EA                     
  2925                           ; BSR set to: 0
  2926                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  2927  0011EA  6972               	setf	_prec& (0+255),b
  2928  0011EC  6973               	setf	(_prec+1)& (0+255),b
  2929  0011EE                     
  2930                           ; BSR set to: 0
  2931                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  2932  0011EE  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2933  0011F2  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2934  0011F6  CFDE FFF6          	movff	postinc2,tblptrl
  2935  0011FA  CFDD FFF7          	movff	postdec2,tblptrh
  2936  0011FE                     	if	0	;tblptru may be non-zero
  2937  0011FE                     	endif
  2938  0011FE                     	if	0	;tblptru may be non-zero
  2939  0011FE                     	endif
  2940  0011FE  0008               	tblrd		*
  2941  001200  50F5               	movf	tablat,w,c
  2942  001202  0A64               	xorlw	100
  2943  001204  B4D8               	btfsc	status,2,c
  2944  001206  EF07  F009         	goto	u1451
  2945  00120A  EF09  F009         	goto	u1450
  2946  00120E                     u1451:
  2947  00120E  EF1B  F009         	goto	l1977
  2948  001212                     u1450:
  2949  001212                     
  2950                           ; BSR set to: 0
  2951  001212  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2952  001216  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2953  00121A  CFDE FFF6          	movff	postinc2,tblptrl
  2954  00121E  CFDD FFF7          	movff	postdec2,tblptrh
  2955  001222                     	if	0	;tblptru may be non-zero
  2956  001222                     	endif
  2957  001222                     	if	0	;tblptru may be non-zero
  2958  001222                     	endif
  2959  001222  0008               	tblrd		*
  2960  001224  50F5               	movf	tablat,w,c
  2961  001226  0A69               	xorlw	105
  2962  001228  A4D8               	btfss	status,2,c
  2963  00122A  EF19  F009         	goto	u1461
  2964  00122E  EF1B  F009         	goto	u1460
  2965  001232                     u1461:
  2966  001232  EF5B  F009         	goto	l1983
  2967  001236                     u1460:
  2968  001236                     l1977:
  2969                           
  2970                           ; BSR set to: 0
  2971                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  2972  001236  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2973  00123A  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2974  00123E  2ADE               	incf	postinc2,f,c
  2975  001240  0E00               	movlw	0
  2976  001242  22DD               	addwfc	postdec2,f,c
  2977                           
  2978                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  2979  001244  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2980  001248  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2981  00124C  CFDF F046          	movff	indf2,??_vfpfcnvrt
  2982  001250  0E02               	movlw	2
  2983  001252  26DE               	addwf	postinc2,f,c
  2984  001254  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  2985  001258  0E00               	movlw	0
  2986  00125A  22DD               	addwfc	postdec2,f,c
  2987  00125C  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2988  001260  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2989  001264  CFDE F048          	movff	postinc2,vfpfcnvrt@ll
  2990  001268  CFDD F049          	movff	postdec2,vfpfcnvrt@ll+1
  2991  00126C  0E00               	movlw	0
  2992  00126E  BE49               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
  2993  001270  0EFF               	movlw	-1
  2994  001272  6E4A               	movwf	(vfpfcnvrt@ll+2)^0,c
  2995  001274  6E4B               	movwf	(vfpfcnvrt@ll+3)^0,c
  2996  001276  6E4C               	movwf	(vfpfcnvrt@ll+4)^0,c
  2997  001278  6E4D               	movwf	(vfpfcnvrt@ll+5)^0,c
  2998  00127A  6E4E               	movwf	(vfpfcnvrt@ll+6)^0,c
  2999  00127C  6E4F               	movwf	(vfpfcnvrt@ll+7)^0,c
  3000  00127E                     
  3001                           ; BSR set to: 0
  3002                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  3003  00127E  C040  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  3004  001282  C041  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  3005  001286  C048  F01E         	movff	vfpfcnvrt@ll,dtoa@d
  3006  00128A  C049  F01F         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  3007  00128E  C04A  F020         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  3008  001292  C04B  F021         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  3009  001296  C04C  F022         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  3010  00129A  C04D  F023         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  3011  00129E  C04E  F024         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  3012  0012A2  C04F  F025         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  3013  0012A6  EC43  F004         	call	_dtoa	;wreg free
  3014  0012AA  C01C  F040         	movff	?_dtoa,?_vfpfcnvrt
  3015  0012AE  C01D  F041         	movff	?_dtoa+1,?_vfpfcnvrt+1
  3016  0012B2  EFAC  F009         	goto	l1003
  3017  0012B6                     l1983:
  3018                           
  3019                           ; BSR set to: 0
  3020                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  3021  0012B6  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3022  0012BA  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3023  0012BE  CFDE FFF6          	movff	postinc2,tblptrl
  3024  0012C2  CFDD FFF7          	movff	postdec2,tblptrh
  3025  0012C6                     	if	0	;tblptru may be non-zero
  3026  0012C6                     	endif
  3027  0012C6                     	if	0	;tblptru may be non-zero
  3028  0012C6                     	endif
  3029  0012C6  0008               	tblrd		*
  3030  0012C8  50F5               	movf	tablat,w,c
  3031  0012CA  0A25               	xorlw	37
  3032  0012CC  A4D8               	btfss	status,2,c
  3033  0012CE  EF6B  F009         	goto	u1471
  3034  0012D2  EF6D  F009         	goto	u1470
  3035  0012D6                     u1471:
  3036  0012D6  EF84  F009         	goto	l1993
  3037  0012DA                     u1470:
  3038  0012DA                     
  3039                           ; BSR set to: 0
  3040                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  3041  0012DA  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3042  0012DE  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3043  0012E2  2ADE               	incf	postinc2,f,c
  3044  0012E4  0E00               	movlw	0
  3045  0012E6  22DD               	addwfc	postdec2,f,c
  3046  0012E8                     
  3047                           ; BSR set to: 0
  3048                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  3049  0012E8  0E00               	movlw	0
  3050  0012EA  6E02               	movwf	(fputc@c+1)^0,c
  3051  0012EC  0E25               	movlw	37
  3052  0012EE  6E01               	movwf	fputc@c^0,c
  3053  0012F0  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  3054  0012F4  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3055  0012F8  EC19  F00D         	call	_fputc	;wreg free
  3056  0012FC                     l1989:
  3057                           
  3058                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  3059  0012FC  0E00               	movlw	0
  3060  0012FE  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  3061  001300  0E01               	movlw	1
  3062  001302  6E40               	movwf	?_vfpfcnvrt^0,c
  3063  001304  EFAC  F009         	goto	l1003
  3064  001308                     l1993:
  3065                           
  3066                           ; BSR set to: 0
  3067                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  3068  001308  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3069  00130C  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3070  001310  2ADE               	incf	postinc2,f,c
  3071  001312  0E00               	movlw	0
  3072  001314  22DD               	addwfc	postdec2,f,c
  3073  001316                     
  3074                           ; BSR set to: 0
  3075                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  3076  001316  0E00               	movlw	0
  3077  001318  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  3078  00131A  0E00               	movlw	0
  3079  00131C  6E40               	movwf	?_vfpfcnvrt^0,c
  3080  00131E  EFAC  F009         	goto	l1003
  3081  001322                     l1999:
  3082                           
  3083                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  3084  001322  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3085  001326  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3086  00132A  CFDE FFF6          	movff	postinc2,tblptrl
  3087  00132E  CFDD FFF7          	movff	postdec2,tblptrh
  3088  001332                     	if	0	;tblptru may be non-zero
  3089  001332                     	endif
  3090  001332                     	if	0	;tblptru may be non-zero
  3091  001332                     	endif
  3092  001332  0008               	tblrd		*
  3093  001334  50F5               	movf	tablat,w,c
  3094  001336  6E01               	movwf	fputc@c^0,c
  3095  001338  6A02               	clrf	(fputc@c+1)^0,c
  3096  00133A  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  3097  00133E  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3098  001342  EC19  F00D         	call	_fputc	;wreg free
  3099  001346                     
  3100                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  3101  001346  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3102  00134A  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3103  00134E  2ADE               	incf	postinc2,f,c
  3104  001350  0E00               	movlw	0
  3105  001352  22DD               	addwfc	postdec2,f,c
  3106  001354  EF7E  F009         	goto	l1989
  3107  001358                     l1003:
  3108  001358  0012               	return		;funcret
  3109  00135A                     __end_of_vfpfcnvrt:
  3110                           	callstack 0
  3111                           
  3112 ;; *************** function _dtoa *****************
  3113 ;; Defined at:
  3114 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  3115 ;; Parameters:    Size  Location     Type
  3116 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  3117 ;;		 -> sprintf@f(11), 
  3118 ;;  d               8   29[COMRAM] long long 
  3119 ;; Auto vars:     Size  Location     Type
  3120 ;;  n               8   53[COMRAM] long long 
  3121 ;;  i               2   61[COMRAM] int 
  3122 ;;  s               2   51[COMRAM] int 
  3123 ;;  w               2   49[COMRAM] int 
  3124 ;;  p               2   47[COMRAM] int 
  3125 ;; Return value:  Size  Location     Type
  3126 ;;                  2   27[COMRAM] int 
  3127 ;; Registers used:
  3128 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3129 ;; Tracked objects:
  3130 ;;		On entry : 0/0
  3131 ;;		On exit  : 0/0
  3132 ;;		Unchanged: 0/0
  3133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3134 ;;      Params:        10       0       0       0       0       0       0       0       0
  3135 ;;      Locals:        18       0       0       0       0       0       0       0       0
  3136 ;;      Temps:          8       0       0       0       0       0       0       0       0
  3137 ;;      Totals:        36       0       0       0       0       0       0       0       0
  3138 ;;Total ram usage:       36 bytes
  3139 ;; Hardware stack levels used: 1
  3140 ;; Hardware stack levels required when called: 4
  3141 ;; This function calls:
  3142 ;;		___aodiv
  3143 ;;		___aomod
  3144 ;;		_abs
  3145 ;;		_pad
  3146 ;; This function is called by:
  3147 ;;		_vfpfcnvrt
  3148 ;; This function uses a non-reentrant model
  3149 ;;
  3150                           
  3151                           	psect	text13
  3152  000886                     __ptext13:
  3153                           	callstack 0
  3154  000886                     _dtoa:
  3155                           	callstack 22
  3156  000886                     
  3157                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  3158  000886  C01E  F036         	movff	dtoa@d,dtoa@n
  3159  00088A  C01F  F037         	movff	dtoa@d+1,dtoa@n+1
  3160  00088E  C020  F038         	movff	dtoa@d+2,dtoa@n+2
  3161  000892  C021  F039         	movff	dtoa@d+3,dtoa@n+3
  3162  000896  C022  F03A         	movff	dtoa@d+4,dtoa@n+4
  3163  00089A  C023  F03B         	movff	dtoa@d+5,dtoa@n+5
  3164  00089E  C024  F03C         	movff	dtoa@d+6,dtoa@n+6
  3165  0008A2  C025  F03D         	movff	dtoa@d+7,dtoa@n+7
  3166  0008A6                     
  3167                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  3168  0008A6  BE3D               	btfsc	(dtoa@n+7)^0,7,c
  3169  0008A8  EF58  F004         	goto	u1291
  3170  0008AC  EF5B  F004         	goto	u1290
  3171  0008B0                     u1291:
  3172  0008B0  0E01               	movlw	1
  3173  0008B2  EF5C  F004         	goto	u1300
  3174  0008B6                     u1290:
  3175  0008B6  0E00               	movlw	0
  3176  0008B8                     u1300:
  3177  0008B8  6E34               	movwf	dtoa@s^0,c
  3178  0008BA  6A35               	clrf	(dtoa@s+1)^0,c
  3179                           
  3180                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  3181  0008BC  5034               	movf	dtoa@s^0,w,c
  3182  0008BE  1035               	iorwf	(dtoa@s+1)^0,w,c
  3183  0008C0  B4D8               	btfsc	status,2,c
  3184  0008C2  EF65  F004         	goto	u1311
  3185  0008C6  EF67  F004         	goto	u1310
  3186  0008CA                     u1311:
  3187  0008CA  EF77  F004         	goto	l1889
  3188  0008CE                     u1310:
  3189  0008CE                     
  3190                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  3191  0008CE  1E3D               	comf	(dtoa@n+7)^0,f,c
  3192  0008D0  1E3C               	comf	(dtoa@n+6)^0,f,c
  3193  0008D2  1E3B               	comf	(dtoa@n+5)^0,f,c
  3194  0008D4  1E3A               	comf	(dtoa@n+4)^0,f,c
  3195  0008D6  1E39               	comf	(dtoa@n+3)^0,f,c
  3196  0008D8  1E38               	comf	(dtoa@n+2)^0,f,c
  3197  0008DA  1E37               	comf	(dtoa@n+1)^0,f,c
  3198  0008DC  6C36               	negf	dtoa@n^0,c
  3199  0008DE  0E00               	movlw	0
  3200  0008E0  2237               	addwfc	(dtoa@n+1)^0,f,c
  3201  0008E2  2238               	addwfc	(dtoa@n+2)^0,f,c
  3202  0008E4  2239               	addwfc	(dtoa@n+3)^0,f,c
  3203  0008E6  223A               	addwfc	(dtoa@n+4)^0,f,c
  3204  0008E8  223B               	addwfc	(dtoa@n+5)^0,f,c
  3205  0008EA  223C               	addwfc	(dtoa@n+6)^0,f,c
  3206  0008EC  223D               	addwfc	(dtoa@n+7)^0,f,c
  3207  0008EE                     l1889:
  3208                           
  3209                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  3210  0008EE  0100               	movlb	0	; () banked
  3211  0008F0  BF73               	btfsc	(_prec+1)& (0+255),7,b
  3212  0008F2  EF7D  F004         	goto	u1321
  3213  0008F6  EF7F  F004         	goto	u1320
  3214  0008FA                     u1321:
  3215  0008FA  EF80  F004         	goto	l1893
  3216  0008FE                     u1320:
  3217  0008FE                     
  3218                           ; BSR set to: 0
  3219                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  3220  0008FE  9374               	bcf	_flags& (0+255),1,b
  3221  000900                     l1893:
  3222                           
  3223                           ; BSR set to: 0
  3224                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  3225  000900  BF73               	btfsc	(_prec+1)& (0+255),7,b
  3226  000902  EF8D  F004         	goto	u1330
  3227  000906  5173               	movf	(_prec+1)& (0+255),w,b
  3228  000908  E106               	bnz	u1331
  3229  00090A  0572               	decf	_prec& (0+255),w,b
  3230  00090C  B0D8               	btfsc	status,0,c
  3231  00090E  EF8B  F004         	goto	u1331
  3232  000912  EF8D  F004         	goto	u1330
  3233  000916                     u1331:
  3234  000916  EF93  F004         	goto	l976
  3235  00091A                     u1330:
  3236  00091A                     
  3237                           ; BSR set to: 0
  3238  00091A  0E00               	movlw	0
  3239  00091C  6E31               	movwf	(dtoa@p+1)^0,c
  3240  00091E  0E01               	movlw	1
  3241  000920  6E30               	movwf	dtoa@p^0,c
  3242  000922  EF97  F004         	goto	l978
  3243  000926                     l976:
  3244                           
  3245                           ; BSR set to: 0
  3246  000926  C072  F030         	movff	_prec,dtoa@p
  3247  00092A  C073  F031         	movff	_prec+1,dtoa@p+1
  3248  00092E                     l978:
  3249                           
  3250                           ; BSR set to: 0
  3251                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  3252  00092E  C070  F032         	movff	_width,dtoa@w
  3253  000932  C071  F033         	movff	_width+1,dtoa@w+1
  3254  000936                     
  3255                           ; BSR set to: 0
  3256                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  3257  000936  5034               	movf	dtoa@s^0,w,c
  3258  000938  1035               	iorwf	(dtoa@s+1)^0,w,c
  3259  00093A  A4D8               	btfss	status,2,c
  3260  00093C  EFA2  F004         	goto	u1341
  3261  000940  EFA4  F004         	goto	u1340
  3262  000944                     u1341:
  3263  000944  EFAB  F004         	goto	l1901
  3264  000948                     u1340:
  3265  000948                     
  3266                           ; BSR set to: 0
  3267  000948  A574               	btfss	_flags& (0+255),2,b
  3268  00094A  EFA9  F004         	goto	u1351
  3269  00094E  EFAB  F004         	goto	u1350
  3270  000952                     u1351:
  3271  000952  EFAE  F004         	goto	l1903
  3272  000956                     u1350:
  3273  000956                     l1901:
  3274                           
  3275                           ; BSR set to: 0
  3276                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 306:         --w;
  3277  000956  0632               	decf	dtoa@w^0,f,c
  3278  000958  A0D8               	btfss	status,0,c
  3279  00095A  0633               	decf	(dtoa@w+1)^0,f,c
  3280  00095C                     l1903:
  3281                           
  3282                           ; BSR set to: 0
  3283                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  3284  00095C  0E00               	movlw	0
  3285  00095E  6E3F               	movwf	(dtoa@i+1)^0,c
  3286  000960  0E1F               	movlw	31
  3287  000962  6E3E               	movwf	dtoa@i^0,c
  3288  000964                     
  3289                           ; BSR set to: 0
  3290                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  3291  000964  0E00               	movlw	0
  3292  000966  6F9F               	movwf	(_dbuf+31)& (0+255),b
  3293                           
  3294                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3295  000968  EF32  F005         	goto	l1917
  3296  00096C                     l1907:
  3297                           
  3298                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 313:         --i;
  3299  00096C  063E               	decf	dtoa@i^0,f,c
  3300  00096E  A0D8               	btfss	status,0,c
  3301  000970  063F               	decf	(dtoa@i+1)^0,f,c
  3302  000972                     
  3303                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  3304  000972  0E80               	movlw	low _dbuf
  3305  000974  243E               	addwf	dtoa@i^0,w,c
  3306  000976  6ED9               	movwf	fsr2l,c
  3307  000978  0E00               	movlw	high _dbuf
  3308  00097A  203F               	addwfc	(dtoa@i+1)^0,w,c
  3309  00097C  6EDA               	movwf	fsr2h,c
  3310  00097E  C036  F001         	movff	dtoa@n,___aomod@dividend
  3311  000982  C037  F002         	movff	dtoa@n+1,___aomod@dividend+1
  3312  000986  C038  F003         	movff	dtoa@n+2,___aomod@dividend+2
  3313  00098A  C039  F004         	movff	dtoa@n+3,___aomod@dividend+3
  3314  00098E  C03A  F005         	movff	dtoa@n+4,___aomod@dividend+4
  3315  000992  C03B  F006         	movff	dtoa@n+5,___aomod@dividend+5
  3316  000996  C03C  F007         	movff	dtoa@n+6,___aomod@dividend+6
  3317  00099A  C03D  F008         	movff	dtoa@n+7,___aomod@dividend+7
  3318  00099E  0E0A               	movlw	10
  3319  0009A0  6E09               	movwf	___aomod@divisor^0,c
  3320  0009A2  0E00               	movlw	0
  3321  0009A4  6E0A               	movwf	(___aomod@divisor+1)^0,c
  3322  0009A6  0E00               	movlw	0
  3323  0009A8  6E0B               	movwf	(___aomod@divisor+2)^0,c
  3324  0009AA  0E00               	movlw	0
  3325  0009AC  6E0C               	movwf	(___aomod@divisor+3)^0,c
  3326  0009AE  0E00               	movlw	0
  3327  0009B0  6E0D               	movwf	(___aomod@divisor+4)^0,c
  3328  0009B2  0E00               	movlw	0
  3329  0009B4  6E0E               	movwf	(___aomod@divisor+5)^0,c
  3330  0009B6  0E00               	movlw	0
  3331  0009B8  6E0F               	movwf	(___aomod@divisor+6)^0,c
  3332  0009BA  0E00               	movlw	0
  3333  0009BC  6E10               	movwf	(___aomod@divisor+7)^0,c
  3334  0009BE  EC71  F00A         	call	___aomod	;wreg free
  3335  0009C2  C001  F026         	movff	?___aomod,??_dtoa
  3336  0009C6  C002  F027         	movff	?___aomod+1,??_dtoa+1
  3337  0009CA  C003  F028         	movff	?___aomod+2,??_dtoa+2
  3338  0009CE  C004  F029         	movff	?___aomod+3,??_dtoa+3
  3339  0009D2  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  3340  0009D6  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  3341  0009DA  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  3342  0009DE  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  3343  0009E2  C026  F013         	movff	??_dtoa,abs@a
  3344  0009E6  C028  F014         	movff	??_dtoa+2,abs@a+1
  3345  0009EA  EC0A  F00F         	call	_abs	;wreg free
  3346  0009EE  5013               	movf	?_abs^0,w,c
  3347  0009F0  0F30               	addlw	48
  3348  0009F2  6EDF               	movwf	indf2,c
  3349  0009F4                     
  3350                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 315:         --p;
  3351  0009F4  0630               	decf	dtoa@p^0,f,c
  3352  0009F6  A0D8               	btfss	status,0,c
  3353  0009F8  0631               	decf	(dtoa@p+1)^0,f,c
  3354  0009FA                     
  3355                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 316:         --w;
  3356  0009FA  0632               	decf	dtoa@w^0,f,c
  3357  0009FC  A0D8               	btfss	status,0,c
  3358  0009FE  0633               	decf	(dtoa@w+1)^0,f,c
  3359  000A00                     
  3360                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  3361  000A00  C036  F001         	movff	dtoa@n,___aodiv@dividend
  3362  000A04  C037  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  3363  000A08  C038  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  3364  000A0C  C039  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  3365  000A10  C03A  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  3366  000A14  C03B  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  3367  000A18  C03C  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  3368  000A1C  C03D  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  3369  000A20  0E0A               	movlw	10
  3370  000A22  6E09               	movwf	___aodiv@divisor^0,c
  3371  000A24  0E00               	movlw	0
  3372  000A26  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  3373  000A28  0E00               	movlw	0
  3374  000A2A  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  3375  000A2C  0E00               	movlw	0
  3376  000A2E  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  3377  000A30  0E00               	movlw	0
  3378  000A32  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  3379  000A34  0E00               	movlw	0
  3380  000A36  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  3381  000A38  0E00               	movlw	0
  3382  000A3A  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  3383  000A3C  0E00               	movlw	0
  3384  000A3E  6E10               	movwf	(___aodiv@divisor+7)^0,c
  3385  000A40  ECAD  F009         	call	___aodiv	;wreg free
  3386  000A44  C001  F036         	movff	?___aodiv,dtoa@n
  3387  000A48  C002  F037         	movff	?___aodiv+1,dtoa@n+1
  3388  000A4C  C003  F038         	movff	?___aodiv+2,dtoa@n+2
  3389  000A50  C004  F039         	movff	?___aodiv+3,dtoa@n+3
  3390  000A54  C005  F03A         	movff	?___aodiv+4,dtoa@n+4
  3391  000A58  C006  F03B         	movff	?___aodiv+5,dtoa@n+5
  3392  000A5C  C007  F03C         	movff	?___aodiv+6,dtoa@n+6
  3393  000A60  C008  F03D         	movff	?___aodiv+7,dtoa@n+7
  3394  000A64                     l1917:
  3395                           
  3396                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3397  000A64  BE3F               	btfsc	(dtoa@i+1)^0,7,c
  3398  000A66  EF3D  F005         	goto	u1361
  3399  000A6A  503F               	movf	(dtoa@i+1)^0,w,c
  3400  000A6C  E108               	bnz	u1360
  3401  000A6E  043E               	decf	dtoa@i^0,w,c
  3402  000A70  A0D8               	btfss	status,0,c
  3403  000A72  EF3D  F005         	goto	u1361
  3404  000A76  EF3F  F005         	goto	u1360
  3405  000A7A                     u1361:
  3406  000A7A  EF70  F005         	goto	l1927
  3407  000A7E                     u1360:
  3408  000A7E  5036               	movf	dtoa@n^0,w,c
  3409  000A80  1037               	iorwf	(dtoa@n+1)^0,w,c
  3410  000A82  1038               	iorwf	(dtoa@n+2)^0,w,c
  3411  000A84  1039               	iorwf	(dtoa@n+3)^0,w,c
  3412  000A86  103A               	iorwf	(dtoa@n+4)^0,w,c
  3413  000A88  103B               	iorwf	(dtoa@n+5)^0,w,c
  3414  000A8A  103C               	iorwf	(dtoa@n+6)^0,w,c
  3415  000A8C  103D               	iorwf	(dtoa@n+7)^0,w,c
  3416  000A8E  A4D8               	btfss	status,2,c
  3417  000A90  EF4C  F005         	goto	u1371
  3418  000A94  EF4E  F005         	goto	u1370
  3419  000A98                     u1371:
  3420  000A98  EFB6  F004         	goto	l1907
  3421  000A9C                     u1370:
  3422  000A9C  BE31               	btfsc	(dtoa@p+1)^0,7,c
  3423  000A9E  EF5B  F005         	goto	u1380
  3424  000AA2  5031               	movf	(dtoa@p+1)^0,w,c
  3425  000AA4  E106               	bnz	u1381
  3426  000AA6  0430               	decf	dtoa@p^0,w,c
  3427  000AA8  B0D8               	btfsc	status,0,c
  3428  000AAA  EF59  F005         	goto	u1381
  3429  000AAE  EF5B  F005         	goto	u1380
  3430  000AB2                     u1381:
  3431  000AB2  EFB6  F004         	goto	l1907
  3432  000AB6                     u1380:
  3433  000AB6  BE33               	btfsc	(dtoa@w+1)^0,7,c
  3434  000AB8  EF66  F005         	goto	u1391
  3435  000ABC  5033               	movf	(dtoa@w+1)^0,w,c
  3436  000ABE  E108               	bnz	u1390
  3437  000AC0  0432               	decf	dtoa@w^0,w,c
  3438  000AC2  A0D8               	btfss	status,0,c
  3439  000AC4  EF66  F005         	goto	u1391
  3440  000AC8  EF68  F005         	goto	u1390
  3441  000ACC                     u1391:
  3442  000ACC  EF70  F005         	goto	l1927
  3443  000AD0                     u1390:
  3444  000AD0  0100               	movlb	0	; () banked
  3445  000AD2  B374               	btfsc	_flags& (0+255),1,b
  3446  000AD4  EF6E  F005         	goto	u1401
  3447  000AD8  EF70  F005         	goto	u1400
  3448  000ADC                     u1401:
  3449  000ADC  EFB6  F004         	goto	l1907
  3450  000AE0                     u1400:
  3451  000AE0                     l1927:
  3452                           
  3453                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  3454  000AE0  5034               	movf	dtoa@s^0,w,c
  3455  000AE2  1035               	iorwf	(dtoa@s+1)^0,w,c
  3456  000AE4  A4D8               	btfss	status,2,c
  3457  000AE6  EF77  F005         	goto	u1411
  3458  000AEA  EF79  F005         	goto	u1410
  3459  000AEE                     u1411:
  3460  000AEE  EF81  F005         	goto	l1931
  3461  000AF2                     u1410:
  3462  000AF2  0100               	movlb	0	; () banked
  3463  000AF4  A574               	btfss	_flags& (0+255),2,b
  3464  000AF6  EF7F  F005         	goto	u1421
  3465  000AFA  EF81  F005         	goto	u1420
  3466  000AFE                     u1421:
  3467  000AFE  EF9F  F005         	goto	l1941
  3468  000B02                     u1420:
  3469  000B02                     l1931:
  3470                           
  3471                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 322:         --i;
  3472  000B02  063E               	decf	dtoa@i^0,f,c
  3473  000B04  A0D8               	btfss	status,0,c
  3474  000B06  063F               	decf	(dtoa@i+1)^0,f,c
  3475  000B08                     
  3476                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  3477  000B08  5034               	movf	dtoa@s^0,w,c
  3478  000B0A  1035               	iorwf	(dtoa@s+1)^0,w,c
  3479  000B0C  A4D8               	btfss	status,2,c
  3480  000B0E  EF8B  F005         	goto	u1431
  3481  000B12  EF8D  F005         	goto	u1430
  3482  000B16                     u1431:
  3483  000B16  EF93  F005         	goto	l1937
  3484  000B1A                     u1430:
  3485  000B1A  0E00               	movlw	0
  3486  000B1C  6E2F               	movwf	(_dtoa$1041+1)^0,c
  3487  000B1E  0E2B               	movlw	43
  3488  000B20  6E2E               	movwf	_dtoa$1041^0,c
  3489  000B22  EF97  F005         	goto	l1939
  3490  000B26                     l1937:
  3491  000B26  0E00               	movlw	0
  3492  000B28  6E2F               	movwf	(_dtoa$1041+1)^0,c
  3493  000B2A  0E2D               	movlw	45
  3494  000B2C  6E2E               	movwf	_dtoa$1041^0,c
  3495  000B2E                     l1939:
  3496  000B2E  0E80               	movlw	low _dbuf
  3497  000B30  243E               	addwf	dtoa@i^0,w,c
  3498  000B32  6ED9               	movwf	fsr2l,c
  3499  000B34  0E00               	movlw	high _dbuf
  3500  000B36  203F               	addwfc	(dtoa@i+1)^0,w,c
  3501  000B38  6EDA               	movwf	fsr2h,c
  3502  000B3A  C02E  FFDF         	movff	_dtoa$1041,indf2
  3503  000B3E                     l1941:
  3504                           
  3505                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  3506  000B3E  C01C  F011         	movff	dtoa@fp,pad@fp
  3507  000B42  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  3508  000B46  0E80               	movlw	low _dbuf
  3509  000B48  243E               	addwf	dtoa@i^0,w,c
  3510  000B4A  6E13               	movwf	pad@buf^0,c
  3511  000B4C  0E00               	movlw	high _dbuf
  3512  000B4E  203F               	addwfc	(dtoa@i+1)^0,w,c
  3513  000B50  6E14               	movwf	(pad@buf+1)^0,c
  3514  000B52  C032  F015         	movff	dtoa@w,pad@p
  3515  000B56  C033  F016         	movff	dtoa@w+1,pad@p+1
  3516  000B5A  EC7E  F00D         	call	_pad	;wreg free
  3517  000B5E  C011  F01C         	movff	?_pad,?_dtoa
  3518  000B62  C012  F01D         	movff	?_pad+1,?_dtoa+1
  3519  000B66  0012               	return		;funcret
  3520  000B68                     __end_of_dtoa:
  3521                           	callstack 0
  3522                           
  3523 ;; *************** function _pad *****************
  3524 ;; Defined at:
  3525 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  3526 ;; Parameters:    Size  Location     Type
  3527 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  3528 ;;		 -> sprintf@f(11), 
  3529 ;;  buf             2   18[COMRAM] PTR unsigned char 
  3530 ;;		 -> dbuf(32), 
  3531 ;;  p               2   20[COMRAM] int 
  3532 ;; Auto vars:     Size  Location     Type
  3533 ;;  w               2   25[COMRAM] int 
  3534 ;;  i               2   23[COMRAM] int 
  3535 ;; Return value:  Size  Location     Type
  3536 ;;                  2   16[COMRAM] int 
  3537 ;; Registers used:
  3538 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3539 ;; Tracked objects:
  3540 ;;		On entry : 0/0
  3541 ;;		On exit  : 0/0
  3542 ;;		Unchanged: 0/0
  3543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3544 ;;      Params:         6       0       0       0       0       0       0       0       0
  3545 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3546 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3547 ;;      Totals:        11       0       0       0       0       0       0       0       0
  3548 ;;Total ram usage:       11 bytes
  3549 ;; Hardware stack levels used: 1
  3550 ;; Hardware stack levels required when called: 3
  3551 ;; This function calls:
  3552 ;;		_fputc
  3553 ;;		_fputs
  3554 ;;		_strlen
  3555 ;; This function is called by:
  3556 ;;		_dtoa
  3557 ;; This function uses a non-reentrant model
  3558 ;;
  3559                           
  3560                           	psect	text14
  3561  001AFC                     __ptext14:
  3562                           	callstack 0
  3563  001AFC                     _pad:
  3564                           	callstack 22
  3565  001AFC                     
  3566                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  3567  001AFC  0100               	movlb	0	; () banked
  3568  001AFE  A174               	btfss	_flags& (0+255),0,b
  3569  001B00  EF84  F00D         	goto	u1241
  3570  001B04  EF86  F00D         	goto	u1240
  3571  001B08                     u1241:
  3572  001B08  EF90  F00D         	goto	l1861
  3573  001B0C                     u1240:
  3574  001B0C                     
  3575                           ; BSR set to: 0
  3576                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  3577  001B0C  C013  F00A         	movff	pad@buf,fputs@s
  3578  001B10  C014  F00B         	movff	pad@buf+1,fputs@s+1
  3579  001B14  C011  F00C         	movff	pad@fp,fputs@fp
  3580  001B18  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  3581  001B1C  ECE8  F00E         	call	_fputs	;wreg free
  3582  001B20                     l1861:
  3583                           
  3584                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  3585  001B20  BE16               	btfsc	(pad@p+1)^0,7,c
  3586  001B22  EF95  F00D         	goto	u1251
  3587  001B26  EF97  F00D         	goto	u1250
  3588  001B2A                     u1251:
  3589  001B2A  EF9D  F00D         	goto	l1865
  3590  001B2E                     u1250:
  3591  001B2E  C015  F01A         	movff	pad@p,pad@w
  3592  001B32  C016  F01B         	movff	pad@p+1,pad@w+1
  3593  001B36  EFA1  F00D         	goto	l965
  3594  001B3A                     l1865:
  3595  001B3A  0E00               	movlw	0
  3596  001B3C  6E1B               	movwf	(pad@w+1)^0,c
  3597  001B3E  0E00               	movlw	0
  3598  001B40  6E1A               	movwf	pad@w^0,c
  3599  001B42                     l965:
  3600                           
  3601                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  3602  001B42  0E00               	movlw	0
  3603  001B44  6E19               	movwf	(pad@i+1)^0,c
  3604  001B46  0E00               	movlw	0
  3605  001B48  6E18               	movwf	pad@i^0,c
  3606                           
  3607                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  3608  001B4A  EFB3  F00D         	goto	l1871
  3609  001B4E                     l1867:
  3610                           
  3611                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  3612  001B4E  0E00               	movlw	0
  3613  001B50  6E02               	movwf	(fputc@c+1)^0,c
  3614  001B52  0E20               	movlw	32
  3615  001B54  6E01               	movwf	fputc@c^0,c
  3616  001B56  C011  F003         	movff	pad@fp,fputc@fp
  3617  001B5A  C012  F004         	movff	pad@fp+1,fputc@fp+1
  3618  001B5E  EC19  F00D         	call	_fputc	;wreg free
  3619  001B62                     
  3620                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 86:         ++i;
  3621  001B62  4A18               	infsnz	pad@i^0,f,c
  3622  001B64  2A19               	incf	(pad@i+1)^0,f,c
  3623  001B66                     l1871:
  3624                           
  3625                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  3626  001B66  501A               	movf	pad@w^0,w,c
  3627  001B68  5C18               	subwf	pad@i^0,w,c
  3628  001B6A  5019               	movf	(pad@i+1)^0,w,c
  3629  001B6C  0A80               	xorlw	128
  3630  001B6E  6E17               	movwf	??_pad^0,c
  3631  001B70  501B               	movf	(pad@w+1)^0,w,c
  3632  001B72  0A80               	xorlw	128
  3633  001B74  5817               	subwfb	??_pad^0,w,c
  3634  001B76  A0D8               	btfss	status,0,c
  3635  001B78  EFC0  F00D         	goto	u1261
  3636  001B7C  EFC2  F00D         	goto	u1260
  3637  001B80                     u1261:
  3638  001B80  EFA7  F00D         	goto	l1867
  3639  001B84                     u1260:
  3640  001B84                     
  3641                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  3642  001B84  0100               	movlb	0	; () banked
  3643  001B86  B174               	btfsc	_flags& (0+255),0,b
  3644  001B88  EFC8  F00D         	goto	u1271
  3645  001B8C  EFCA  F00D         	goto	u1270
  3646  001B90                     u1271:
  3647  001B90  EFD4  F00D         	goto	l1875
  3648  001B94                     u1270:
  3649  001B94                     
  3650                           ; BSR set to: 0
  3651                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  3652  001B94  C013  F00A         	movff	pad@buf,fputs@s
  3653  001B98  C014  F00B         	movff	pad@buf+1,fputs@s+1
  3654  001B9C  C011  F00C         	movff	pad@fp,fputs@fp
  3655  001BA0  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  3656  001BA4  ECE8  F00E         	call	_fputs	;wreg free
  3657  001BA8                     l1875:
  3658                           
  3659                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  3660  001BA8  C013  F001         	movff	pad@buf,strlen@s
  3661  001BAC  C014  F002         	movff	pad@buf+1,strlen@s+1
  3662  001BB0  EC65  F00F         	call	_strlen	;wreg free
  3663  001BB4  501A               	movf	pad@w^0,w,c
  3664  001BB6  2401               	addwf	?_strlen^0,w,c
  3665  001BB8  6E11               	movwf	?_pad^0,c
  3666  001BBA  501B               	movf	(pad@w+1)^0,w,c
  3667  001BBC  2002               	addwfc	(?_strlen+1)^0,w,c
  3668  001BBE  6E12               	movwf	(?_pad+1)^0,c
  3669  001BC0  0012               	return		;funcret
  3670  001BC2                     __end_of_pad:
  3671                           	callstack 0
  3672                           
  3673 ;; *************** function _strlen *****************
  3674 ;; Defined at:
  3675 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\strlen.c"
  3676 ;; Parameters:    Size  Location     Type
  3677 ;;  s               2    0[COMRAM] PTR const unsigned char 
  3678 ;;		 -> dbuf(32), 
  3679 ;; Auto vars:     Size  Location     Type
  3680 ;;  a               2    2[COMRAM] PTR const unsigned char 
  3681 ;;		 -> dbuf(32), 
  3682 ;; Return value:  Size  Location     Type
  3683 ;;                  2    0[COMRAM] unsigned int 
  3684 ;; Registers used:
  3685 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3686 ;; Tracked objects:
  3687 ;;		On entry : 0/0
  3688 ;;		On exit  : 0/0
  3689 ;;		Unchanged: 0/0
  3690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3691 ;;      Params:         2       0       0       0       0       0       0       0       0
  3692 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3693 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3694 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3695 ;;Total ram usage:        4 bytes
  3696 ;; Hardware stack levels used: 1
  3697 ;; This function calls:
  3698 ;;		Nothing
  3699 ;; This function is called by:
  3700 ;;		_pad
  3701 ;; This function uses a non-reentrant model
  3702 ;;
  3703                           
  3704                           	psect	text15
  3705  001ECA                     __ptext15:
  3706                           	callstack 0
  3707  001ECA                     _strlen:
  3708                           	callstack 24
  3709  001ECA  C001  F003         	movff	strlen@s,strlen@a
  3710  001ECE  C002  F004         	movff	strlen@s+1,strlen@a+1
  3711  001ED2  EF6D  F00F         	goto	l1771
  3712  001ED6                     l1769:
  3713  001ED6  4A01               	infsnz	strlen@s^0,f,c
  3714  001ED8  2A02               	incf	(strlen@s+1)^0,f,c
  3715  001EDA                     l1771:
  3716  001EDA  C001  FFD9         	movff	strlen@s,fsr2l
  3717  001EDE  C002  FFDA         	movff	strlen@s+1,fsr2h
  3718  001EE2  50DF               	movf	indf2,w,c
  3719  001EE4  A4D8               	btfss	status,2,c
  3720  001EE6  EF77  F00F         	goto	u1101
  3721  001EEA  EF79  F00F         	goto	u1100
  3722  001EEE                     u1101:
  3723  001EEE  EF6B  F00F         	goto	l1769
  3724  001EF2                     u1100:
  3725  001EF2  5003               	movf	strlen@a^0,w,c
  3726  001EF4  5C01               	subwf	strlen@s^0,w,c
  3727  001EF6  6E01               	movwf	?_strlen^0,c
  3728  001EF8  5004               	movf	(strlen@a+1)^0,w,c
  3729  001EFA  5802               	subwfb	(strlen@s+1)^0,w,c
  3730  001EFC  6E02               	movwf	(?_strlen+1)^0,c
  3731  001EFE  0012               	return		;funcret
  3732  001F00                     __end_of_strlen:
  3733                           	callstack 0
  3734                           
  3735 ;; *************** function _fputs *****************
  3736 ;; Defined at:
  3737 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nf_fputs.c"
  3738 ;; Parameters:    Size  Location     Type
  3739 ;;  s               2    9[COMRAM] PTR const unsigned char 
  3740 ;;		 -> dbuf(32), 
  3741 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  3742 ;;		 -> sprintf@f(11), 
  3743 ;; Auto vars:     Size  Location     Type
  3744 ;;  i               2   14[COMRAM] int 
  3745 ;;  c               1   13[COMRAM] unsigned char 
  3746 ;; Return value:  Size  Location     Type
  3747 ;;                  2    9[COMRAM] int 
  3748 ;; Registers used:
  3749 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3750 ;; Tracked objects:
  3751 ;;		On entry : 0/0
  3752 ;;		On exit  : 0/0
  3753 ;;		Unchanged: 0/0
  3754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3755 ;;      Params:         4       0       0       0       0       0       0       0       0
  3756 ;;      Locals:         3       0       0       0       0       0       0       0       0
  3757 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3758 ;;      Totals:         7       0       0       0       0       0       0       0       0
  3759 ;;Total ram usage:        7 bytes
  3760 ;; Hardware stack levels used: 1
  3761 ;; Hardware stack levels required when called: 2
  3762 ;; This function calls:
  3763 ;;		_fputc
  3764 ;; This function is called by:
  3765 ;;		_pad
  3766 ;; This function uses a non-reentrant model
  3767 ;;
  3768                           
  3769                           	psect	text16
  3770  001DD0                     __ptext16:
  3771                           	callstack 0
  3772  001DD0                     _fputs:
  3773                           	callstack 22
  3774  001DD0  0E00               	movlw	0
  3775  001DD2  6E10               	movwf	(fputs@i+1)^0,c
  3776  001DD4  0E00               	movlw	0
  3777  001DD6  6E0F               	movwf	fputs@i^0,c
  3778  001DD8  EFF9  F00E         	goto	l1765
  3779  001DDC                     l1761:
  3780  001DDC  C00E  F001         	movff	fputs@c,fputc@c
  3781  001DE0  6A02               	clrf	(fputc@c+1)^0,c
  3782  001DE2  C00C  F003         	movff	fputs@fp,fputc@fp
  3783  001DE6  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  3784  001DEA  EC19  F00D         	call	_fputc	;wreg free
  3785  001DEE  4A0F               	infsnz	fputs@i^0,f,c
  3786  001DF0  2A10               	incf	(fputs@i+1)^0,f,c
  3787  001DF2                     l1765:
  3788  001DF2  500F               	movf	fputs@i^0,w,c
  3789  001DF4  240A               	addwf	fputs@s^0,w,c
  3790  001DF6  6ED9               	movwf	fsr2l,c
  3791  001DF8  5010               	movf	(fputs@i+1)^0,w,c
  3792  001DFA  200B               	addwfc	(fputs@s+1)^0,w,c
  3793  001DFC  6EDA               	movwf	fsr2h,c
  3794  001DFE  50DF               	movf	indf2,w,c
  3795  001E00  6E0E               	movwf	fputs@c^0,c
  3796  001E02  500E               	movf	fputs@c^0,w,c
  3797  001E04  A4D8               	btfss	status,2,c
  3798  001E06  EF07  F00F         	goto	u1091
  3799  001E0A  EF09  F00F         	goto	u1090
  3800  001E0E                     u1091:
  3801  001E0E  EFEE  F00E         	goto	l1761
  3802  001E12                     u1090:
  3803  001E12  0012               	return		;funcret
  3804  001E14                     __end_of_fputs:
  3805                           	callstack 0
  3806                           
  3807 ;; *************** function _fputc *****************
  3808 ;; Defined at:
  3809 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nf_fputc.c"
  3810 ;; Parameters:    Size  Location     Type
  3811 ;;  c               2    0[COMRAM] int 
  3812 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  3813 ;;		 -> sprintf@f(11), 
  3814 ;; Auto vars:     Size  Location     Type
  3815 ;;		None
  3816 ;; Return value:  Size  Location     Type
  3817 ;;                  2    0[COMRAM] int 
  3818 ;; Registers used:
  3819 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3820 ;; Tracked objects:
  3821 ;;		On entry : 0/0
  3822 ;;		On exit  : 0/0
  3823 ;;		Unchanged: 0/0
  3824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3825 ;;      Params:         4       0       0       0       0       0       0       0       0
  3826 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3827 ;;      Temps:          5       0       0       0       0       0       0       0       0
  3828 ;;      Totals:         9       0       0       0       0       0       0       0       0
  3829 ;;Total ram usage:        9 bytes
  3830 ;; Hardware stack levels used: 1
  3831 ;; Hardware stack levels required when called: 1
  3832 ;; This function calls:
  3833 ;;		_putch
  3834 ;; This function is called by:
  3835 ;;		_pad
  3836 ;;		_vfpfcnvrt
  3837 ;;		_fputs
  3838 ;; This function uses a non-reentrant model
  3839 ;;
  3840                           
  3841                           	psect	text17
  3842  001A32                     __ptext17:
  3843                           	callstack 0
  3844  001A32                     _fputc:
  3845                           	callstack 25
  3846  001A32  5003               	movf	fputc@fp^0,w,c
  3847  001A34  1004               	iorwf	(fputc@fp+1)^0,w,c
  3848  001A36  B4D8               	btfsc	status,2,c
  3849  001A38  EF20  F00D         	goto	u1051
  3850  001A3C  EF22  F00D         	goto	u1050
  3851  001A40                     u1051:
  3852  001A40  EF2B  F00D         	goto	l1749
  3853  001A44                     u1050:
  3854  001A44  5003               	movf	fputc@fp^0,w,c
  3855  001A46  1004               	iorwf	(fputc@fp+1)^0,w,c
  3856  001A48  A4D8               	btfss	status,2,c
  3857  001A4A  EF29  F00D         	goto	u1061
  3858  001A4E  EF2B  F00D         	goto	u1060
  3859  001A52                     u1061:
  3860  001A52  EF30  F00D         	goto	l1751
  3861  001A56                     u1060:
  3862  001A56                     l1749:
  3863  001A56  5001               	movf	fputc@c^0,w,c
  3864  001A58  ECEC  F00F         	call	_putch
  3865  001A5C  EF7D  F00D         	goto	l1029
  3866  001A60                     l1751:
  3867  001A60  EE20 F009          	lfsr	2,9
  3868  001A64  5003               	movf	fputc@fp^0,w,c
  3869  001A66  26D9               	addwf	fsr2l,f,c
  3870  001A68  5004               	movf	(fputc@fp+1)^0,w,c
  3871  001A6A  22DA               	addwfc	fsr2h,f,c
  3872  001A6C  50DE               	movf	postinc2,w,c
  3873  001A6E  10DE               	iorwf	postinc2,w,c
  3874  001A70  B4D8               	btfsc	status,2,c
  3875  001A72  EF3D  F00D         	goto	u1071
  3876  001A76  EF3F  F00D         	goto	u1070
  3877  001A7A                     u1071:
  3878  001A7A  EF5A  F00D         	goto	l1755
  3879  001A7E                     u1070:
  3880  001A7E  EE20 F009          	lfsr	2,9
  3881  001A82  5003               	movf	fputc@fp^0,w,c
  3882  001A84  26D9               	addwf	fsr2l,f,c
  3883  001A86  5004               	movf	(fputc@fp+1)^0,w,c
  3884  001A88  22DA               	addwfc	fsr2h,f,c
  3885  001A8A  EE10 F003          	lfsr	1,3
  3886  001A8E  5003               	movf	fputc@fp^0,w,c
  3887  001A90  26E1               	addwf	fsr1l,f,c
  3888  001A92  5004               	movf	(fputc@fp+1)^0,w,c
  3889  001A94  22E2               	addwfc	fsr1h,f,c
  3890  001A96  50DE               	movf	postinc2,w,c
  3891  001A98  5CE6               	subwf	postinc1,w,c
  3892  001A9A  50E6               	movf	postinc1,w,c
  3893  001A9C  0A80               	xorlw	128
  3894  001A9E  6E09               	movwf	(??_fputc+4)^0,c
  3895  001AA0  50DE               	movf	postinc2,w,c
  3896  001AA2  0A80               	xorlw	128
  3897  001AA4  5809               	subwfb	(??_fputc+4)^0,w,c
  3898  001AA6  B0D8               	btfsc	status,0,c
  3899  001AA8  EF58  F00D         	goto	u1081
  3900  001AAC  EF5A  F00D         	goto	u1080
  3901  001AB0                     u1081:
  3902  001AB0  EF7D  F00D         	goto	l1029
  3903  001AB4                     u1080:
  3904  001AB4                     l1755:
  3905  001AB4  EE20 F003          	lfsr	2,3
  3906  001AB8  5003               	movf	fputc@fp^0,w,c
  3907  001ABA  26D9               	addwf	fsr2l,f,c
  3908  001ABC  5004               	movf	(fputc@fp+1)^0,w,c
  3909  001ABE  22DA               	addwfc	fsr2h,f,c
  3910  001AC0  CFDE F005          	movff	postinc2,??_fputc
  3911  001AC4  CFDD F006          	movff	postdec2,??_fputc+1
  3912  001AC8  C003  FFD9         	movff	fputc@fp,fsr2l
  3913  001ACC  C004  FFDA         	movff	fputc@fp+1,fsr2h
  3914  001AD0  CFDE F007          	movff	postinc2,??_fputc+2
  3915  001AD4  CFDD F008          	movff	postdec2,??_fputc+3
  3916  001AD8  5005               	movf	??_fputc^0,w,c
  3917  001ADA  2407               	addwf	(??_fputc+2)^0,w,c
  3918  001ADC  6ED9               	movwf	fsr2l,c
  3919  001ADE  5006               	movf	(??_fputc+1)^0,w,c
  3920  001AE0  2008               	addwfc	(??_fputc+3)^0,w,c
  3921  001AE2  6EDA               	movwf	fsr2h,c
  3922  001AE4  C001  FFDF         	movff	fputc@c,indf2
  3923  001AE8  EE20 F003          	lfsr	2,3
  3924  001AEC  5003               	movf	fputc@fp^0,w,c
  3925  001AEE  26D9               	addwf	fsr2l,f,c
  3926  001AF0  5004               	movf	(fputc@fp+1)^0,w,c
  3927  001AF2  22DA               	addwfc	fsr2h,f,c
  3928  001AF4  2ADE               	incf	postinc2,f,c
  3929  001AF6  0E00               	movlw	0
  3930  001AF8  22DD               	addwfc	postdec2,f,c
  3931  001AFA                     l1029:
  3932  001AFA  0012               	return		;funcret
  3933  001AFC                     __end_of_fputc:
  3934                           	callstack 0
  3935                           
  3936 ;; *************** function _putch *****************
  3937 ;; Defined at:
  3938 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\putch.c"
  3939 ;; Parameters:    Size  Location     Type
  3940 ;;  c               1    wreg     unsigned char 
  3941 ;; Auto vars:     Size  Location     Type
  3942 ;;  c               1    0[COMRAM] unsigned char 
  3943 ;; Return value:  Size  Location     Type
  3944 ;;                  1    wreg      void 
  3945 ;; Registers used:
  3946 ;;		wreg
  3947 ;; Tracked objects:
  3948 ;;		On entry : 0/0
  3949 ;;		On exit  : 0/0
  3950 ;;		Unchanged: 0/0
  3951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3952 ;;      Params:         0       0       0       0       0       0       0       0       0
  3953 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3954 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3955 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3956 ;;Total ram usage:        0 bytes
  3957 ;; Hardware stack levels used: 1
  3958 ;; This function calls:
  3959 ;;		Nothing
  3960 ;; This function is called by:
  3961 ;;		_fputc
  3962 ;; This function uses a non-reentrant model
  3963 ;;
  3964                           
  3965                           	psect	text18
  3966  001FD8                     __ptext18:
  3967                           	callstack 0
  3968  001FD8                     _putch:
  3969                           	callstack 25
  3970  001FD8  0012               	return		;funcret
  3971  001FDA                     __end_of_putch:
  3972                           	callstack 0
  3973                           
  3974 ;; *************** function _abs *****************
  3975 ;; Defined at:
  3976 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\abs.c"
  3977 ;; Parameters:    Size  Location     Type
  3978 ;;  a               2   18[COMRAM] int 
  3979 ;; Auto vars:     Size  Location     Type
  3980 ;;		None
  3981 ;; Return value:  Size  Location     Type
  3982 ;;                  2   18[COMRAM] int 
  3983 ;; Registers used:
  3984 ;;		wreg, status,2, status,0
  3985 ;; Tracked objects:
  3986 ;;		On entry : 0/0
  3987 ;;		On exit  : 0/0
  3988 ;;		Unchanged: 0/0
  3989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3990 ;;      Params:         2       0       0       0       0       0       0       0       0
  3991 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3992 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3993 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3994 ;;Total ram usage:        4 bytes
  3995 ;; Hardware stack levels used: 1
  3996 ;; This function calls:
  3997 ;;		Nothing
  3998 ;; This function is called by:
  3999 ;;		_dtoa
  4000 ;; This function uses a non-reentrant model
  4001 ;;
  4002                           
  4003                           	psect	text19
  4004  001E14                     __ptext19:
  4005                           	callstack 0
  4006  001E14                     _abs:
  4007                           	callstack 25
  4008  001E14  BE14               	btfsc	(abs@a+1)^0,7,c
  4009  001E16  EF17  F00F         	goto	u1280
  4010  001E1A  5014               	movf	(abs@a+1)^0,w,c
  4011  001E1C  E106               	bnz	u1281
  4012  001E1E  0413               	decf	abs@a^0,w,c
  4013  001E20  B0D8               	btfsc	status,0,c
  4014  001E22  EF15  F00F         	goto	u1281
  4015  001E26  EF17  F00F         	goto	u1280
  4016  001E2A                     u1281:
  4017  001E2A  EF25  F00F         	goto	l1014
  4018  001E2E                     u1280:
  4019  001E2E  C013  F015         	movff	abs@a,??_abs
  4020  001E32  C014  F016         	movff	abs@a+1,??_abs+1
  4021  001E36  1E15               	comf	??_abs^0,f,c
  4022  001E38  1E16               	comf	(??_abs+1)^0,f,c
  4023  001E3A  4A15               	infsnz	??_abs^0,f,c
  4024  001E3C  2A16               	incf	(??_abs+1)^0,f,c
  4025  001E3E  C015  F013         	movff	??_abs,?_abs
  4026  001E42  C016  F014         	movff	??_abs+1,?_abs+1
  4027  001E46  EF29  F00F         	goto	l1017
  4028  001E4A                     l1014:
  4029  001E4A  C013  F013         	movff	abs@a,?_abs
  4030  001E4E  C014  F014         	movff	abs@a+1,?_abs+1
  4031  001E52                     l1017:
  4032  001E52  0012               	return		;funcret
  4033  001E54                     __end_of_abs:
  4034                           	callstack 0
  4035                           
  4036 ;; *************** function ___aomod *****************
  4037 ;; Defined at:
  4038 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\aomod.c"
  4039 ;; Parameters:    Size  Location     Type
  4040 ;;  dividend        8    0[COMRAM] long long 
  4041 ;;  divisor         8    8[COMRAM] long long 
  4042 ;; Auto vars:     Size  Location     Type
  4043 ;;  sign            1   17[COMRAM] unsigned char 
  4044 ;;  counter         1   16[COMRAM] unsigned char 
  4045 ;; Return value:  Size  Location     Type
  4046 ;;                  8    0[COMRAM] long long 
  4047 ;; Registers used:
  4048 ;;		wreg, status,2, status,0
  4049 ;; Tracked objects:
  4050 ;;		On entry : 0/0
  4051 ;;		On exit  : 0/0
  4052 ;;		Unchanged: 0/0
  4053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4054 ;;      Params:        16       0       0       0       0       0       0       0       0
  4055 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4056 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4057 ;;      Totals:        18       0       0       0       0       0       0       0       0
  4058 ;;Total ram usage:       18 bytes
  4059 ;; Hardware stack levels used: 1
  4060 ;; This function calls:
  4061 ;;		Nothing
  4062 ;; This function is called by:
  4063 ;;		_dtoa
  4064 ;; This function uses a non-reentrant model
  4065 ;;
  4066                           
  4067                           	psect	text20
  4068  0014E2                     __ptext20:
  4069                           	callstack 0
  4070  0014E2                     ___aomod:
  4071                           	callstack 25
  4072  0014E2  0E00               	movlw	0
  4073  0014E4  6E12               	movwf	___aomod@sign^0,c
  4074  0014E6  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  4075  0014E8  EF7A  F00A         	goto	u1180
  4076  0014EC  EF78  F00A         	goto	u1181
  4077  0014F0                     u1181:
  4078  0014F0  EF8C  F00A         	goto	l1829
  4079  0014F4                     u1180:
  4080  0014F4  1E08               	comf	(___aomod@dividend+7)^0,f,c
  4081  0014F6  1E07               	comf	(___aomod@dividend+6)^0,f,c
  4082  0014F8  1E06               	comf	(___aomod@dividend+5)^0,f,c
  4083  0014FA  1E05               	comf	(___aomod@dividend+4)^0,f,c
  4084  0014FC  1E04               	comf	(___aomod@dividend+3)^0,f,c
  4085  0014FE  1E03               	comf	(___aomod@dividend+2)^0,f,c
  4086  001500  1E02               	comf	(___aomod@dividend+1)^0,f,c
  4087  001502  6C01               	negf	___aomod@dividend^0,c
  4088  001504  0E00               	movlw	0
  4089  001506  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  4090  001508  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  4091  00150A  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  4092  00150C  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  4093  00150E  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  4094  001510  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  4095  001512  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  4096  001514  0E01               	movlw	1
  4097  001516  6E12               	movwf	___aomod@sign^0,c
  4098  001518                     l1829:
  4099  001518  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  4100  00151A  EF93  F00A         	goto	u1190
  4101  00151E  EF91  F00A         	goto	u1191
  4102  001522                     u1191:
  4103  001522  EFA3  F00A         	goto	l1833
  4104  001526                     u1190:
  4105  001526  1E10               	comf	(___aomod@divisor+7)^0,f,c
  4106  001528  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  4107  00152A  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  4108  00152C  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  4109  00152E  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  4110  001530  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  4111  001532  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  4112  001534  6C09               	negf	___aomod@divisor^0,c
  4113  001536  0E00               	movlw	0
  4114  001538  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  4115  00153A  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  4116  00153C  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  4117  00153E  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  4118  001540  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  4119  001542  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  4120  001544  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  4121  001546                     l1833:
  4122  001546  5009               	movf	___aomod@divisor^0,w,c
  4123  001548  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  4124  00154A  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  4125  00154C  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  4126  00154E  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  4127  001550  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  4128  001552  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  4129  001554  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  4130  001556  B4D8               	btfsc	status,2,c
  4131  001558  EFB0  F00A         	goto	u1201
  4132  00155C  EFB2  F00A         	goto	u1200
  4133  001560                     u1201:
  4134  001560  EFFA  F00A         	goto	l1849
  4135  001564                     u1200:
  4136  001564  0E01               	movlw	1
  4137  001566  6E11               	movwf	___aomod@counter^0,c
  4138  001568  EFC0  F00A         	goto	l1839
  4139  00156C                     l1837:
  4140  00156C  90D8               	bcf	status,0,c
  4141  00156E  3609               	rlcf	___aomod@divisor^0,f,c
  4142  001570  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  4143  001572  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  4144  001574  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  4145  001576  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  4146  001578  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  4147  00157A  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  4148  00157C  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  4149  00157E  2A11               	incf	___aomod@counter^0,f,c
  4150  001580                     l1839:
  4151  001580  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  4152  001582  EFC5  F00A         	goto	u1211
  4153  001586  EFC7  F00A         	goto	u1210
  4154  00158A                     u1211:
  4155  00158A  EFB6  F00A         	goto	l1837
  4156  00158E                     u1210:
  4157  00158E                     l1841:
  4158  00158E  5009               	movf	___aomod@divisor^0,w,c
  4159  001590  5C01               	subwf	___aomod@dividend^0,w,c
  4160  001592  500A               	movf	(___aomod@divisor+1)^0,w,c
  4161  001594  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  4162  001596  500B               	movf	(___aomod@divisor+2)^0,w,c
  4163  001598  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  4164  00159A  500C               	movf	(___aomod@divisor+3)^0,w,c
  4165  00159C  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  4166  00159E  500D               	movf	(___aomod@divisor+4)^0,w,c
  4167  0015A0  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  4168  0015A2  500E               	movf	(___aomod@divisor+5)^0,w,c
  4169  0015A4  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  4170  0015A6  500F               	movf	(___aomod@divisor+6)^0,w,c
  4171  0015A8  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  4172  0015AA  5010               	movf	(___aomod@divisor+7)^0,w,c
  4173  0015AC  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  4174  0015AE  A0D8               	btfss	status,0,c
  4175  0015B0  EFDC  F00A         	goto	u1221
  4176  0015B4  EFDE  F00A         	goto	u1220
  4177  0015B8                     u1221:
  4178  0015B8  EFEE  F00A         	goto	l1845
  4179  0015BC                     u1220:
  4180  0015BC  5009               	movf	___aomod@divisor^0,w,c
  4181  0015BE  5E01               	subwf	___aomod@dividend^0,f,c
  4182  0015C0  500A               	movf	(___aomod@divisor+1)^0,w,c
  4183  0015C2  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  4184  0015C4  500B               	movf	(___aomod@divisor+2)^0,w,c
  4185  0015C6  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  4186  0015C8  500C               	movf	(___aomod@divisor+3)^0,w,c
  4187  0015CA  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  4188  0015CC  500D               	movf	(___aomod@divisor+4)^0,w,c
  4189  0015CE  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  4190  0015D0  500E               	movf	(___aomod@divisor+5)^0,w,c
  4191  0015D2  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  4192  0015D4  500F               	movf	(___aomod@divisor+6)^0,w,c
  4193  0015D6  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  4194  0015D8  5010               	movf	(___aomod@divisor+7)^0,w,c
  4195  0015DA  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  4196  0015DC                     l1845:
  4197  0015DC  90D8               	bcf	status,0,c
  4198  0015DE  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  4199  0015E0  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  4200  0015E2  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  4201  0015E4  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  4202  0015E6  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  4203  0015E8  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  4204  0015EA  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  4205  0015EC  3209               	rrcf	___aomod@divisor^0,f,c
  4206  0015EE  2E11               	decfsz	___aomod@counter^0,f,c
  4207  0015F0  EFC7  F00A         	goto	l1841
  4208  0015F4                     l1849:
  4209  0015F4  5012               	movf	___aomod@sign^0,w,c
  4210  0015F6  B4D8               	btfsc	status,2,c
  4211  0015F8  EF00  F00B         	goto	u1231
  4212  0015FC  EF02  F00B         	goto	u1230
  4213  001600                     u1231:
  4214  001600  EF12  F00B         	goto	l1853
  4215  001604                     u1230:
  4216  001604  1E08               	comf	(___aomod@dividend+7)^0,f,c
  4217  001606  1E07               	comf	(___aomod@dividend+6)^0,f,c
  4218  001608  1E06               	comf	(___aomod@dividend+5)^0,f,c
  4219  00160A  1E05               	comf	(___aomod@dividend+4)^0,f,c
  4220  00160C  1E04               	comf	(___aomod@dividend+3)^0,f,c
  4221  00160E  1E03               	comf	(___aomod@dividend+2)^0,f,c
  4222  001610  1E02               	comf	(___aomod@dividend+1)^0,f,c
  4223  001612  6C01               	negf	___aomod@dividend^0,c
  4224  001614  0E00               	movlw	0
  4225  001616  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  4226  001618  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  4227  00161A  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  4228  00161C  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  4229  00161E  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  4230  001620  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  4231  001622  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  4232  001624                     l1853:
  4233  001624  C001  F001         	movff	___aomod@dividend,?___aomod
  4234  001628  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  4235  00162C  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  4236  001630  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  4237  001634  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  4238  001638  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  4239  00163C  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  4240  001640  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  4241  001644  0012               	return		;funcret
  4242  001646                     __end_of___aomod:
  4243                           	callstack 0
  4244                           
  4245 ;; *************** function ___aodiv *****************
  4246 ;; Defined at:
  4247 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\aodiv.c"
  4248 ;; Parameters:    Size  Location     Type
  4249 ;;  dividend        8    0[COMRAM] long long 
  4250 ;;  divisor         8    8[COMRAM] long long 
  4251 ;; Auto vars:     Size  Location     Type
  4252 ;;  quotient        8   18[COMRAM] long long 
  4253 ;;  sign            1   17[COMRAM] unsigned char 
  4254 ;;  counter         1   16[COMRAM] unsigned char 
  4255 ;; Return value:  Size  Location     Type
  4256 ;;                  8    0[COMRAM] long long 
  4257 ;; Registers used:
  4258 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4259 ;; Tracked objects:
  4260 ;;		On entry : 0/0
  4261 ;;		On exit  : 0/0
  4262 ;;		Unchanged: 0/0
  4263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4264 ;;      Params:        16       0       0       0       0       0       0       0       0
  4265 ;;      Locals:        10       0       0       0       0       0       0       0       0
  4266 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4267 ;;      Totals:        26       0       0       0       0       0       0       0       0
  4268 ;;Total ram usage:       26 bytes
  4269 ;; Hardware stack levels used: 1
  4270 ;; This function calls:
  4271 ;;		Nothing
  4272 ;; This function is called by:
  4273 ;;		_dtoa
  4274 ;; This function uses a non-reentrant model
  4275 ;;
  4276                           
  4277                           	psect	text21
  4278  00135A                     __ptext21:
  4279                           	callstack 0
  4280  00135A                     ___aodiv:
  4281                           	callstack 25
  4282  00135A  0E00               	movlw	0
  4283  00135C  6E12               	movwf	___aodiv@sign^0,c
  4284  00135E  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  4285  001360  EFB6  F009         	goto	u1110
  4286  001364  EFB4  F009         	goto	u1111
  4287  001368                     u1111:
  4288  001368  EFC8  F009         	goto	l1785
  4289  00136C                     u1110:
  4290  00136C  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  4291  00136E  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  4292  001370  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  4293  001372  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  4294  001374  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  4295  001376  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  4296  001378  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  4297  00137A  6C09               	negf	___aodiv@divisor^0,c
  4298  00137C  0E00               	movlw	0
  4299  00137E  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  4300  001380  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  4301  001382  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  4302  001384  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  4303  001386  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  4304  001388  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  4305  00138A  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  4306  00138C  0E01               	movlw	1
  4307  00138E  6E12               	movwf	___aodiv@sign^0,c
  4308  001390                     l1785:
  4309  001390  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  4310  001392  EFCF  F009         	goto	u1120
  4311  001396  EFCD  F009         	goto	u1121
  4312  00139A                     u1121:
  4313  00139A  EFE1  F009         	goto	l1791
  4314  00139E                     u1120:
  4315  00139E  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  4316  0013A0  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  4317  0013A2  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  4318  0013A4  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  4319  0013A6  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  4320  0013A8  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  4321  0013AA  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  4322  0013AC  6C01               	negf	___aodiv@dividend^0,c
  4323  0013AE  0E00               	movlw	0
  4324  0013B0  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  4325  0013B2  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  4326  0013B4  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  4327  0013B6  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  4328  0013B8  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  4329  0013BA  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  4330  0013BC  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  4331  0013BE  0E01               	movlw	1
  4332  0013C0  1A12               	xorwf	___aodiv@sign^0,f,c
  4333  0013C2                     l1791:
  4334  0013C2  EE20  F013         	lfsr	2,___aodiv@quotient
  4335  0013C6  0E07               	movlw	7
  4336  0013C8                     u1131:
  4337  0013C8  6ADE               	clrf	postinc2,c
  4338  0013CA  06E8               	decf	wreg,f,c
  4339  0013CC  E2FD               	bc	u1131
  4340  0013CE  5009               	movf	___aodiv@divisor^0,w,c
  4341  0013D0  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  4342  0013D2  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  4343  0013D4  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  4344  0013D6  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  4345  0013D8  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  4346  0013DA  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  4347  0013DC  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  4348  0013DE  B4D8               	btfsc	status,2,c
  4349  0013E0  EFF4  F009         	goto	u1141
  4350  0013E4  EFF6  F009         	goto	u1140
  4351  0013E8                     u1141:
  4352  0013E8  EF48  F00A         	goto	l1813
  4353  0013EC                     u1140:
  4354  0013EC  0E01               	movlw	1
  4355  0013EE  6E11               	movwf	___aodiv@counter^0,c
  4356  0013F0  EF04  F00A         	goto	l1799
  4357  0013F4                     l1797:
  4358  0013F4  90D8               	bcf	status,0,c
  4359  0013F6  3609               	rlcf	___aodiv@divisor^0,f,c
  4360  0013F8  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  4361  0013FA  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  4362  0013FC  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  4363  0013FE  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  4364  001400  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  4365  001402  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  4366  001404  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  4367  001406  2A11               	incf	___aodiv@counter^0,f,c
  4368  001408                     l1799:
  4369  001408  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  4370  00140A  EF09  F00A         	goto	u1151
  4371  00140E  EF0B  F00A         	goto	u1150
  4372  001412                     u1151:
  4373  001412  EFFA  F009         	goto	l1797
  4374  001416                     u1150:
  4375  001416                     l1801:
  4376  001416  90D8               	bcf	status,0,c
  4377  001418  3613               	rlcf	___aodiv@quotient^0,f,c
  4378  00141A  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  4379  00141C  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  4380  00141E  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  4381  001420  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  4382  001422  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  4383  001424  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  4384  001426  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  4385  001428  5009               	movf	___aodiv@divisor^0,w,c
  4386  00142A  5C01               	subwf	___aodiv@dividend^0,w,c
  4387  00142C  500A               	movf	(___aodiv@divisor+1)^0,w,c
  4388  00142E  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  4389  001430  500B               	movf	(___aodiv@divisor+2)^0,w,c
  4390  001432  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  4391  001434  500C               	movf	(___aodiv@divisor+3)^0,w,c
  4392  001436  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  4393  001438  500D               	movf	(___aodiv@divisor+4)^0,w,c
  4394  00143A  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  4395  00143C  500E               	movf	(___aodiv@divisor+5)^0,w,c
  4396  00143E  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  4397  001440  500F               	movf	(___aodiv@divisor+6)^0,w,c
  4398  001442  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  4399  001444  5010               	movf	(___aodiv@divisor+7)^0,w,c
  4400  001446  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  4401  001448  A0D8               	btfss	status,0,c
  4402  00144A  EF29  F00A         	goto	u1161
  4403  00144E  EF2B  F00A         	goto	u1160
  4404  001452                     u1161:
  4405  001452  EF3C  F00A         	goto	l1809
  4406  001456                     u1160:
  4407  001456  5009               	movf	___aodiv@divisor^0,w,c
  4408  001458  5E01               	subwf	___aodiv@dividend^0,f,c
  4409  00145A  500A               	movf	(___aodiv@divisor+1)^0,w,c
  4410  00145C  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  4411  00145E  500B               	movf	(___aodiv@divisor+2)^0,w,c
  4412  001460  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  4413  001462  500C               	movf	(___aodiv@divisor+3)^0,w,c
  4414  001464  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  4415  001466  500D               	movf	(___aodiv@divisor+4)^0,w,c
  4416  001468  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  4417  00146A  500E               	movf	(___aodiv@divisor+5)^0,w,c
  4418  00146C  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  4419  00146E  500F               	movf	(___aodiv@divisor+6)^0,w,c
  4420  001470  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  4421  001472  5010               	movf	(___aodiv@divisor+7)^0,w,c
  4422  001474  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  4423  001476  8013               	bsf	___aodiv@quotient^0,0,c
  4424  001478                     l1809:
  4425  001478  90D8               	bcf	status,0,c
  4426  00147A  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  4427  00147C  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  4428  00147E  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  4429  001480  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  4430  001482  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  4431  001484  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  4432  001486  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  4433  001488  3209               	rrcf	___aodiv@divisor^0,f,c
  4434  00148A  2E11               	decfsz	___aodiv@counter^0,f,c
  4435  00148C  EF0B  F00A         	goto	l1801
  4436  001490                     l1813:
  4437  001490  5012               	movf	___aodiv@sign^0,w,c
  4438  001492  B4D8               	btfsc	status,2,c
  4439  001494  EF4E  F00A         	goto	u1171
  4440  001498  EF50  F00A         	goto	u1170
  4441  00149C                     u1171:
  4442  00149C  EF60  F00A         	goto	l1817
  4443  0014A0                     u1170:
  4444  0014A0  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  4445  0014A2  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  4446  0014A4  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  4447  0014A6  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  4448  0014A8  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  4449  0014AA  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  4450  0014AC  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  4451  0014AE  6C13               	negf	___aodiv@quotient^0,c
  4452  0014B0  0E00               	movlw	0
  4453  0014B2  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  4454  0014B4  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  4455  0014B6  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  4456  0014B8  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  4457  0014BA  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  4458  0014BC  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  4459  0014BE  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  4460  0014C0                     l1817:
  4461  0014C0  C013  F001         	movff	___aodiv@quotient,?___aodiv
  4462  0014C4  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  4463  0014C8  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  4464  0014CC  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  4465  0014D0  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  4466  0014D4  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  4467  0014D8  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  4468  0014DC  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  4469  0014E0  0012               	return		;funcret
  4470  0014E2                     __end_of___aodiv:
  4471                           	callstack 0
  4472                           
  4473 ;; *************** function _LCD_String_xy *****************
  4474 ;; Defined at:
  4475 ;;		line 64 in file "LCD.c"
  4476 ;; Parameters:    Size  Location     Type
  4477 ;;  row             1    wreg     unsigned char 
  4478 ;;  pos             1    4[COMRAM] unsigned char 
  4479 ;;  msg             2    5[COMRAM] PTR const unsigned char 
  4480 ;;		 -> STR_16(5), STR_13(4), Dht11@value(10), STR_10(6), 
  4481 ;;		 -> STR_8(10), STR_6(16), STR_5(15), STR_4(15), 
  4482 ;;		 -> STR_3(14), STR_2(17), STR_1(16), 
  4483 ;; Auto vars:     Size  Location     Type
  4484 ;;  row             1    7[COMRAM] unsigned char 
  4485 ;;  location        1    8[COMRAM] unsigned char 
  4486 ;; Return value:  Size  Location     Type
  4487 ;;                  1    wreg      void 
  4488 ;; Registers used:
  4489 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4490 ;; Tracked objects:
  4491 ;;		On entry : 0/0
  4492 ;;		On exit  : 0/0
  4493 ;;		Unchanged: 0/0
  4494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4495 ;;      Params:         3       0       0       0       0       0       0       0       0
  4496 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4497 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4498 ;;      Totals:         5       0       0       0       0       0       0       0       0
  4499 ;;Total ram usage:        5 bytes
  4500 ;; Hardware stack levels used: 1
  4501 ;; Hardware stack levels required when called: 2
  4502 ;; This function calls:
  4503 ;;		_LCD_Command
  4504 ;;		_LCD_String
  4505 ;; This function is called by:
  4506 ;;		_Security
  4507 ;;		_Photoresist
  4508 ;;		_Dht11
  4509 ;; This function uses a non-reentrant model
  4510 ;;
  4511                           
  4512                           	psect	text22
  4513  001E54                     __ptext22:
  4514                           	callstack 0
  4515  001E54                     _LCD_String_xy:
  4516                           	callstack 26
  4517                           
  4518                           ;incstack = 0
  4519                           ;LCD_String_xy@row stored from wreg
  4520  001E54  6E08               	movwf	LCD_String_xy@row^0,c
  4521  001E56                     
  4522                           ;LCD.c: 67:     if(row<=1)
  4523  001E56  0E02               	movlw	2
  4524  001E58  6008               	cpfslt	LCD_String_xy@row^0,c
  4525  001E5A  EF31  F00F         	goto	u1521
  4526  001E5E  EF33  F00F         	goto	u1520
  4527  001E62                     u1521:
  4528  001E62  EF3C  F00F         	goto	l2065
  4529  001E66                     u1520:
  4530  001E66                     
  4531                           ;LCD.c: 68:     {;LCD.c: 69:         location=(0x80) | ((pos) & 0x0f);
  4532  001E66  5005               	movf	LCD_String_xy@pos^0,w,c
  4533  001E68  0B0F               	andlw	15
  4534  001E6A  0980               	iorlw	128
  4535  001E6C  6E09               	movwf	LCD_String_xy@location^0,c
  4536  001E6E                     
  4537                           ;LCD.c: 70:         LCD_Command(location);
  4538  001E6E  5009               	movf	LCD_String_xy@location^0,w,c
  4539  001E70  ECC0  F00E         	call	_LCD_Command
  4540                           
  4541                           ;LCD.c: 71:     }
  4542  001E74  EF43  F00F         	goto	l2069
  4543  001E78                     l2065:
  4544                           
  4545                           ;LCD.c: 73:     {;LCD.c: 74:         location=(0xC0) | ((pos) & 0x0f);
  4546  001E78  5005               	movf	LCD_String_xy@pos^0,w,c
  4547  001E7A  0B0F               	andlw	15
  4548  001E7C  09C0               	iorlw	192
  4549  001E7E  6E09               	movwf	LCD_String_xy@location^0,c
  4550  001E80                     
  4551                           ;LCD.c: 75:         LCD_Command(location);
  4552  001E80  5009               	movf	LCD_String_xy@location^0,w,c
  4553  001E82  ECC0  F00E         	call	_LCD_Command
  4554  001E86                     l2069:
  4555                           
  4556                           ;LCD.c: 79:     LCD_String(msg);
  4557  001E86  C006  F003         	movff	LCD_String_xy@msg,LCD_String@msg
  4558  001E8A  C007  F004         	movff	LCD_String_xy@msg+1,LCD_String@msg+1
  4559  001E8E  EC12  F00E         	call	_LCD_String	;wreg free
  4560  001E92  0012               	return		;funcret
  4561  001E94                     __end_of_LCD_String_xy:
  4562                           	callstack 0
  4563                           
  4564 ;; *************** function _LCD_String *****************
  4565 ;; Defined at:
  4566 ;;		line 54 in file "LCD.c"
  4567 ;; Parameters:    Size  Location     Type
  4568 ;;  msg             2    2[COMRAM] PTR const unsigned char 
  4569 ;;		 -> STR_16(5), STR_13(4), Dht11@value(10), STR_10(6), 
  4570 ;;		 -> Temperature(10), STR_8(10), buffer(3), STR_6(16), 
  4571 ;;		 -> STR_5(15), STR_4(15), STR_3(14), STR_2(17), 
  4572 ;;		 -> STR_1(16), 
  4573 ;; Auto vars:     Size  Location     Type
  4574 ;;		None
  4575 ;; Return value:  Size  Location     Type
  4576 ;;                  1    wreg      void 
  4577 ;; Registers used:
  4578 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4579 ;; Tracked objects:
  4580 ;;		On entry : 0/0
  4581 ;;		On exit  : 0/0
  4582 ;;		Unchanged: 0/0
  4583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4584 ;;      Params:         2       0       0       0       0       0       0       0       0
  4585 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4586 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4587 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4588 ;;Total ram usage:        2 bytes
  4589 ;; Hardware stack levels used: 1
  4590 ;; Hardware stack levels required when called: 1
  4591 ;; This function calls:
  4592 ;;		_LCD_Char
  4593 ;; This function is called by:
  4594 ;;		_LCD_String_xy
  4595 ;;		_Security
  4596 ;;		_Photoresist
  4597 ;;		_Dht11
  4598 ;; This function uses a non-reentrant model
  4599 ;;
  4600                           
  4601                           	psect	text23
  4602  001C24                     __ptext23:
  4603                           	callstack 0
  4604  001C24                     _LCD_String:
  4605                           	callstack 26
  4606  001C24                     
  4607                           ;LCD.c: 54: void LCD_String(const char *msg);LCD.c: 55: {;LCD.c: 56:  while((*msg)!=0)
  4608  001C24  EF28  F00E         	goto	l2033
  4609  001C28                     l2029:
  4610                           
  4611                           ;LCD.c: 57:  {;LCD.c: 58:    LCD_Char(*msg);
  4612  001C28  C003  FFF6         	movff	LCD_String@msg,tblptrl
  4613  001C2C  C004  FFF7         	movff	LCD_String@msg+1,tblptrh
  4614  001C30  6AF8               	clrf	tblptru,c
  4615  001C32  0E07               	movlw	(high __ramtop+-1)
  4616  001C34  64F7               	cpfsgt	tblptrh,c
  4617  001C36  D003               	bra	u1487
  4618  001C38  0008               	tblrd		*
  4619  001C3A  50F5               	movf	tablat,w,c
  4620  001C3C  D005               	bra	u1480
  4621  001C3E                     u1487:
  4622  001C3E  CFF6 FFE1          	movff	tblptrl,fsr1l
  4623  001C42  CFF7 FFE2          	movff	tblptrh,fsr1h
  4624  001C46  50E7               	movf	indf1,w,c
  4625  001C48                     u1480:
  4626  001C48  EC98  F00E         	call	_LCD_Char
  4627  001C4C                     
  4628                           ;LCD.c: 59:    msg++;
  4629  001C4C  4A03               	infsnz	LCD_String@msg^0,f,c
  4630  001C4E  2A04               	incf	(LCD_String@msg+1)^0,f,c
  4631  001C50                     l2033:
  4632                           
  4633                           ;LCD.c: 56:  while((*msg)!=0)
  4634  001C50  C003  FFF6         	movff	LCD_String@msg,tblptrl
  4635  001C54  C004  FFF7         	movff	LCD_String@msg+1,tblptrh
  4636  001C58  6AF8               	clrf	tblptru,c
  4637  001C5A  0E07               	movlw	(high __ramtop+-1)
  4638  001C5C  64F7               	cpfsgt	tblptrh,c
  4639  001C5E  D003               	bra	u1497
  4640  001C60  0008               	tblrd		*
  4641  001C62  50F5               	movf	tablat,w,c
  4642  001C64  D005               	bra	u1490
  4643  001C66                     u1497:
  4644  001C66  CFF6 FFE1          	movff	tblptrl,fsr1l
  4645  001C6A  CFF7 FFE2          	movff	tblptrh,fsr1h
  4646  001C6E  50E7               	movf	indf1,w,c
  4647  001C70                     u1490:
  4648  001C70  0900               	iorlw	0
  4649  001C72  A4D8               	btfss	status,2,c
  4650  001C74  EF3E  F00E         	goto	u1501
  4651  001C78  EF40  F00E         	goto	u1500
  4652  001C7C                     u1501:
  4653  001C7C  EF14  F00E         	goto	l2029
  4654  001C80                     u1500:
  4655  001C80  0012               	return		;funcret
  4656  001C82                     __end_of_LCD_String:
  4657                           	callstack 0
  4658                           
  4659 ;; *************** function _LCD_Char *****************
  4660 ;; Defined at:
  4661 ;;		line 39 in file "LCD.c"
  4662 ;; Parameters:    Size  Location     Type
  4663 ;;  dat             1    wreg     unsigned char 
  4664 ;; Auto vars:     Size  Location     Type
  4665 ;;  dat             1    1[COMRAM] unsigned char 
  4666 ;; Return value:  Size  Location     Type
  4667 ;;                  1    wreg      void 
  4668 ;; Registers used:
  4669 ;;		wreg, status,2, status,0
  4670 ;; Tracked objects:
  4671 ;;		On entry : 0/0
  4672 ;;		On exit  : 0/0
  4673 ;;		Unchanged: 0/0
  4674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4675 ;;      Params:         0       0       0       0       0       0       0       0       0
  4676 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4677 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4678 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4679 ;;Total ram usage:        2 bytes
  4680 ;; Hardware stack levels used: 1
  4681 ;; This function calls:
  4682 ;;		Nothing
  4683 ;; This function is called by:
  4684 ;;		_LCD_String
  4685 ;;		_Security
  4686 ;;		_Dht11
  4687 ;; This function uses a non-reentrant model
  4688 ;;
  4689                           
  4690                           	psect	text24
  4691  001D30                     __ptext24:
  4692                           	callstack 0
  4693  001D30                     _LCD_Char:
  4694                           	callstack 26
  4695                           
  4696                           ;incstack = 0
  4697                           ;LCD_Char@dat stored from wreg
  4698  001D30  6E02               	movwf	LCD_Char@dat^0,c
  4699  001D32                     
  4700                           ;LCD.c: 39: void LCD_Char(unsigned char dat);LCD.c: 40: {;LCD.c: 41:  LATD = (char)((LAT
      +                          D & 0x0f) | (0xF0 & dat));
  4701  001D32  C002  F001         	movff	LCD_Char@dat,??_LCD_Char
  4702  001D36  0EF0               	movlw	240
  4703  001D38  1601               	andwf	??_LCD_Char^0,f,c
  4704  001D3A  508C               	movf	140,w,c	;volatile
  4705  001D3C  0B0F               	andlw	15
  4706  001D3E  1001               	iorwf	??_LCD_Char^0,w,c
  4707  001D40  6E8C               	movwf	140,c	;volatile
  4708  001D42                     
  4709                           ;LCD.c: 42:  LATD0 = 1;
  4710  001D42  808C               	bsf	3980,0,c	;volatile
  4711  001D44                     
  4712                           ;LCD.c: 43:  LATD1 = 1;
  4713  001D44  828C               	bsf	3980,1,c	;volatile
  4714  001D46                     
  4715                           ;LCD.c: 44:  __nop();
  4716  001D46  F000               	nop	
  4717  001D48                     
  4718                           ;LCD.c: 45:  LATD1 = 0;
  4719  001D48  928C               	bcf	3980,1,c	;volatile
  4720  001D4A                     
  4721                           ;LCD.c: 46:  _delay((unsigned long)((1)*(8000000/4000.0)));
  4722  001D4A  0E03               	movlw	3
  4723  001D4C  6E01               	movwf	??_LCD_Char^0,c
  4724  001D4E  0E98               	movlw	152
  4725  001D50                     u2247:
  4726  001D50  2EE8               	decfsz	wreg,f,c
  4727  001D52  D7FE               	bra	u2247
  4728  001D54  2E01               	decfsz	??_LCD_Char^0,f,c
  4729  001D56  D7FC               	bra	u2247
  4730  001D58                     
  4731                           ;LCD.c: 47:     LATD = (char)((LATD & 0x0f) | (dat<<4));
  4732  001D58  C002  F001         	movff	LCD_Char@dat,??_LCD_Char
  4733  001D5C  3A01               	swapf	??_LCD_Char^0,f,c
  4734  001D5E  0EF0               	movlw	240
  4735  001D60  1601               	andwf	??_LCD_Char^0,f,c
  4736  001D62  508C               	movf	140,w,c	;volatile
  4737  001D64  0B0F               	andlw	15
  4738  001D66  1001               	iorwf	??_LCD_Char^0,w,c
  4739  001D68  6E8C               	movwf	140,c	;volatile
  4740  001D6A                     
  4741                           ;LCD.c: 48:  LATD1 = 1;
  4742  001D6A  828C               	bsf	3980,1,c	;volatile
  4743  001D6C                     
  4744                           ;LCD.c: 49:  __nop();
  4745  001D6C  F000               	nop	
  4746  001D6E                     
  4747                           ;LCD.c: 50:  LATD1 = 0;
  4748  001D6E  928C               	bcf	3980,1,c	;volatile
  4749                           
  4750                           ;LCD.c: 51:  _delay((unsigned long)((3)*(8000000/4000.0)));
  4751  001D70  0E08               	movlw	8
  4752  001D72  6E01               	movwf	??_LCD_Char^0,c
  4753  001D74  0ECA               	movlw	202
  4754  001D76                     u2257:
  4755  001D76  2EE8               	decfsz	wreg,f,c
  4756  001D78  D7FE               	bra	u2257
  4757  001D7A  2E01               	decfsz	??_LCD_Char^0,f,c
  4758  001D7C  D7FC               	bra	u2257
  4759  001D7E  0012               	return		;funcret
  4760  001D80                     __end_of_LCD_Char:
  4761                           	callstack 0
  4762                           
  4763 ;; *************** function _LCD_Clear *****************
  4764 ;; Defined at:
  4765 ;;		line 82 in file "LCD.c"
  4766 ;; Parameters:    Size  Location     Type
  4767 ;;		None
  4768 ;; Auto vars:     Size  Location     Type
  4769 ;;		None
  4770 ;; Return value:  Size  Location     Type
  4771 ;;                  1    wreg      void 
  4772 ;; Registers used:
  4773 ;;		wreg, status,2, status,0, cstack
  4774 ;; Tracked objects:
  4775 ;;		On entry : 0/0
  4776 ;;		On exit  : 0/0
  4777 ;;		Unchanged: 0/0
  4778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4779 ;;      Params:         0       0       0       0       0       0       0       0       0
  4780 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4781 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4782 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4783 ;;Total ram usage:        1 bytes
  4784 ;; Hardware stack levels used: 1
  4785 ;; Hardware stack levels required when called: 1
  4786 ;; This function calls:
  4787 ;;		_LCD_Command
  4788 ;; This function is called by:
  4789 ;;		_Security
  4790 ;;		_Dht11
  4791 ;; This function uses a non-reentrant model
  4792 ;;
  4793                           
  4794                           	psect	text25
  4795  001FA4                     __ptext25:
  4796                           	callstack 0
  4797  001FA4                     _LCD_Clear:
  4798                           	callstack 28
  4799  001FA4                     
  4800                           ;LCD.c: 84:     LCD_Command(0x01);
  4801  001FA4  0E01               	movlw	1
  4802  001FA6  ECC0  F00E         	call	_LCD_Command
  4803  001FAA                     
  4804                           ;LCD.c: 85:     _delay((unsigned long)((3)*(8000000/4000.0)));
  4805  001FAA  0E08               	movlw	8
  4806  001FAC  6E03               	movwf	??_LCD_Clear^0,c
  4807  001FAE  0ECA               	movlw	202
  4808  001FB0                     u2267:
  4809  001FB0  2EE8               	decfsz	wreg,f,c
  4810  001FB2  D7FE               	bra	u2267
  4811  001FB4  2E03               	decfsz	??_LCD_Clear^0,f,c
  4812  001FB6  D7FC               	bra	u2267
  4813  001FB8  0012               	return		;funcret
  4814  001FBA                     __end_of_LCD_Clear:
  4815                           	callstack 0
  4816                           
  4817 ;; *************** function _LCD_Command *****************
  4818 ;; Defined at:
  4819 ;;		line 24 in file "LCD.c"
  4820 ;; Parameters:    Size  Location     Type
  4821 ;;  cmd             1    wreg     unsigned char 
  4822 ;; Auto vars:     Size  Location     Type
  4823 ;;  cmd             1    1[COMRAM] unsigned char 
  4824 ;; Return value:  Size  Location     Type
  4825 ;;                  1    wreg      void 
  4826 ;; Registers used:
  4827 ;;		wreg, status,2, status,0
  4828 ;; Tracked objects:
  4829 ;;		On entry : 0/0
  4830 ;;		On exit  : 0/0
  4831 ;;		Unchanged: 0/0
  4832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4833 ;;      Params:         0       0       0       0       0       0       0       0       0
  4834 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4835 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4836 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4837 ;;Total ram usage:        2 bytes
  4838 ;; Hardware stack levels used: 1
  4839 ;; This function calls:
  4840 ;;		Nothing
  4841 ;; This function is called by:
  4842 ;;		_LCD_Init
  4843 ;;		_LCD_String_xy
  4844 ;;		_LCD_Clear
  4845 ;;		_Security
  4846 ;;		_Photoresist
  4847 ;; This function uses a non-reentrant model
  4848 ;;
  4849                           
  4850                           	psect	text26
  4851  001D80                     __ptext26:
  4852                           	callstack 0
  4853  001D80                     _LCD_Command:
  4854                           	callstack 27
  4855                           
  4856                           ;incstack = 0
  4857                           ;LCD_Command@cmd stored from wreg
  4858  001D80  6E02               	movwf	LCD_Command@cmd^0,c
  4859  001D82                     
  4860                           ;LCD.c: 24: void LCD_Command(unsigned char cmd );LCD.c: 25: {;LCD.c: 26:  LATD = (LATD &
      +                           0x0f) |(0xF0 & cmd);
  4861  001D82  C002  F001         	movff	LCD_Command@cmd,??_LCD_Command
  4862  001D86  0EF0               	movlw	240
  4863  001D88  1601               	andwf	??_LCD_Command^0,f,c
  4864  001D8A  508C               	movf	140,w,c	;volatile
  4865  001D8C  0B0F               	andlw	15
  4866  001D8E  1001               	iorwf	??_LCD_Command^0,w,c
  4867  001D90  6E8C               	movwf	140,c	;volatile
  4868  001D92                     
  4869                           ;LCD.c: 27:  LATD0 = 0;
  4870  001D92  908C               	bcf	3980,0,c	;volatile
  4871  001D94                     
  4872                           ;LCD.c: 28:  LATD1 = 1;
  4873  001D94  828C               	bsf	3980,1,c	;volatile
  4874  001D96                     
  4875                           ;LCD.c: 29:  __nop();
  4876  001D96  F000               	nop	
  4877  001D98                     
  4878                           ;LCD.c: 30:  LATD1 = 0;
  4879  001D98  928C               	bcf	3980,1,c	;volatile
  4880  001D9A                     
  4881                           ;LCD.c: 31:  _delay((unsigned long)((1)*(8000000/4000.0)));
  4882  001D9A  0E03               	movlw	3
  4883  001D9C  6E01               	movwf	??_LCD_Command^0,c
  4884  001D9E  0E98               	movlw	152
  4885  001DA0                     u2277:
  4886  001DA0  2EE8               	decfsz	wreg,f,c
  4887  001DA2  D7FE               	bra	u2277
  4888  001DA4  2E01               	decfsz	??_LCD_Command^0,f,c
  4889  001DA6  D7FC               	bra	u2277
  4890  001DA8                     
  4891                           ;LCD.c: 32:     LATD = (char)((LATD & 0x0f) | (cmd<<4));
  4892  001DA8  C002  F001         	movff	LCD_Command@cmd,??_LCD_Command
  4893  001DAC  3A01               	swapf	??_LCD_Command^0,f,c
  4894  001DAE  0EF0               	movlw	240
  4895  001DB0  1601               	andwf	??_LCD_Command^0,f,c
  4896  001DB2  508C               	movf	140,w,c	;volatile
  4897  001DB4  0B0F               	andlw	15
  4898  001DB6  1001               	iorwf	??_LCD_Command^0,w,c
  4899  001DB8  6E8C               	movwf	140,c	;volatile
  4900  001DBA                     
  4901                           ;LCD.c: 33:  LATD1 = 1;
  4902  001DBA  828C               	bsf	3980,1,c	;volatile
  4903  001DBC                     
  4904                           ;LCD.c: 34:  __nop();
  4905  001DBC  F000               	nop	
  4906  001DBE                     
  4907                           ;LCD.c: 35:  LATD1 = 0;
  4908  001DBE  928C               	bcf	3980,1,c	;volatile
  4909                           
  4910                           ;LCD.c: 36:  _delay((unsigned long)((3)*(8000000/4000.0)));
  4911  001DC0  0E08               	movlw	8
  4912  001DC2  6E01               	movwf	??_LCD_Command^0,c
  4913  001DC4  0ECA               	movlw	202
  4914  001DC6                     u2287:
  4915  001DC6  2EE8               	decfsz	wreg,f,c
  4916  001DC8  D7FE               	bra	u2287
  4917  001DCA  2E01               	decfsz	??_LCD_Command^0,f,c
  4918  001DCC  D7FC               	bra	u2287
  4919  001DCE  0012               	return		;funcret
  4920  001DD0                     __end_of_LCD_Command:
  4921                           	callstack 0
  4922                           
  4923 ;; *************** function _DHT11_Start *****************
  4924 ;; Defined at:
  4925 ;;		line 20 in file "dht11.c"
  4926 ;; Parameters:    Size  Location     Type
  4927 ;;		None
  4928 ;; Auto vars:     Size  Location     Type
  4929 ;;		None
  4930 ;; Return value:  Size  Location     Type
  4931 ;;                  1    wreg      void 
  4932 ;; Registers used:
  4933 ;;		wreg
  4934 ;; Tracked objects:
  4935 ;;		On entry : 0/0
  4936 ;;		On exit  : 0/0
  4937 ;;		Unchanged: 0/0
  4938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4939 ;;      Params:         0       0       0       0       0       0       0       0       0
  4940 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4941 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4942 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4943 ;;Total ram usage:        1 bytes
  4944 ;; Hardware stack levels used: 1
  4945 ;; This function calls:
  4946 ;;		Nothing
  4947 ;; This function is called by:
  4948 ;;		_Dht11
  4949 ;; This function uses a non-reentrant model
  4950 ;;
  4951                           
  4952                           	psect	text27
  4953  001F84                     __ptext27:
  4954                           	callstack 0
  4955  001F84                     _DHT11_Start:
  4956                           	callstack 28
  4957  001F84                     
  4958                           ;dht11.c: 22:     TRISAbits.RA1 = 0;
  4959  001F84  9292               	bcf	146,1,c	;volatile
  4960                           
  4961                           ;dht11.c: 23:     LATA1 = 0;
  4962  001F86  9289               	bcf	3977,1,c	;volatile
  4963  001F88                     
  4964                           ;dht11.c: 24:     _delay((unsigned long)((18)*(8000000/4000.0)));
  4965  001F88  0E2F               	movlw	47
  4966  001F8A  6E01               	movwf	??_DHT11_Start^0,c
  4967  001F8C  0EC0               	movlw	192
  4968  001F8E                     u2297:
  4969  001F8E  2EE8               	decfsz	wreg,f,c
  4970  001F90  D7FE               	bra	u2297
  4971  001F92  2E01               	decfsz	??_DHT11_Start^0,f,c
  4972  001F94  D7FC               	bra	u2297
  4973  001F96                     
  4974                           ;dht11.c: 25:     LATA1 = 1;
  4975  001F96  8289               	bsf	3977,1,c	;volatile
  4976                           
  4977                           ;dht11.c: 26:     _delay((unsigned long)((20)*(8000000/4000000.0)));
  4978  001F98  0E0D               	movlw	13
  4979  001F9A                     u2307:
  4980  001F9A  2EE8               	decfsz	wreg,f,c
  4981  001F9C  D7FE               	bra	u2307
  4982  001F9E  F000               	nop	
  4983  001FA0                     
  4984                           ;dht11.c: 27:     TRISAbits.RA1 = 1;
  4985  001FA0  8292               	bsf	146,1,c	;volatile
  4986  001FA2  0012               	return		;funcret
  4987  001FA4                     __end_of_DHT11_Start:
  4988                           	callstack 0
  4989                           
  4990 ;; *************** function _DHT11_ReadData *****************
  4991 ;; Defined at:
  4992 ;;		line 4 in file "dht11.c"
  4993 ;; Parameters:    Size  Location     Type
  4994 ;;		None
  4995 ;; Auto vars:     Size  Location     Type
  4996 ;;  data            1    1[COMRAM] unsigned char 
  4997 ;;  i               1    0[COMRAM] unsigned char 
  4998 ;; Return value:  Size  Location     Type
  4999 ;;                  1    wreg      unsigned char 
  5000 ;; Registers used:
  5001 ;;		wreg, status,2, status,0
  5002 ;; Tracked objects:
  5003 ;;		On entry : 0/0
  5004 ;;		On exit  : 0/0
  5005 ;;		Unchanged: 0/0
  5006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5007 ;;      Params:         0       0       0       0       0       0       0       0       0
  5008 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5009 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5010 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5011 ;;Total ram usage:        2 bytes
  5012 ;; Hardware stack levels used: 1
  5013 ;; This function calls:
  5014 ;;		Nothing
  5015 ;; This function is called by:
  5016 ;;		_Dht11
  5017 ;; This function uses a non-reentrant model
  5018 ;;
  5019                           
  5020                           	psect	text28
  5021  001C82                     __ptext28:
  5022                           	callstack 0
  5023  001C82                     _DHT11_ReadData:
  5024                           	callstack 28
  5025  001C82                     
  5026                           ;dht11.c: 6:   char i,data = 0;
  5027  001C82  0E00               	movlw	0
  5028  001C84  6E02               	movwf	DHT11_ReadData@data^0,c
  5029                           
  5030                           ;dht11.c: 7:     for(i=0;i<8;i++)
  5031  001C86  0E00               	movlw	0
  5032  001C88  6E01               	movwf	DHT11_ReadData@i^0,c
  5033  001C8A                     l234:
  5034  001C8A  A280               	btfss	128,1,c	;volatile
  5035  001C8C  EF4A  F00E         	goto	u1561
  5036  001C90  EF4C  F00E         	goto	u1560
  5037  001C94                     u1561:
  5038  001C94  EF45  F00E         	goto	l234
  5039  001C98                     u1560:
  5040  001C98                     
  5041                           ;dht11.c: 10:         _delay((unsigned long)((30)*(8000000/4000000.0)));
  5042  001C98  0E14               	movlw	20
  5043  001C9A                     u2317:
  5044  001C9A  2EE8               	decfsz	wreg,f,c
  5045  001C9C  D7FE               	bra	u2317
  5046  001C9E                     
  5047                           ;dht11.c: 11:         if(PORTAbits.RA1 & 1)
  5048  001C9E  A280               	btfss	128,1,c	;volatile
  5049  001CA0  EF54  F00E         	goto	u1571
  5050  001CA4  EF56  F00E         	goto	u1570
  5051  001CA8                     u1571:
  5052  001CA8  EF5A  F00E         	goto	l2109
  5053  001CAC                     u1570:
  5054  001CAC                     
  5055                           ;dht11.c: 12:           data = (char)((data<<1) | 1);
  5056  001CAC  80D8               	bsf	status,0,c
  5057  001CAE  3602               	rlcf	DHT11_ReadData@data^0,f,c
  5058  001CB0  EF5D  F00E         	goto	l239
  5059  001CB4                     l2109:
  5060                           
  5061                           ;dht11.c: 14:           data = (char)(data<<1);
  5062  001CB4  5002               	movf	DHT11_ReadData@data^0,w,c
  5063  001CB6  2402               	addwf	DHT11_ReadData@data^0,w,c
  5064  001CB8  6E02               	movwf	DHT11_ReadData@data^0,c
  5065  001CBA                     l239:
  5066  001CBA  B280               	btfsc	128,1,c	;volatile
  5067  001CBC  EF62  F00E         	goto	u1581
  5068  001CC0  EF64  F00E         	goto	u1580
  5069  001CC4                     u1581:
  5070  001CC4  EF5D  F00E         	goto	l239
  5071  001CC8                     u1580:
  5072  001CC8                     
  5073                           ;dht11.c: 16:     }
  5074  001CC8  2A01               	incf	DHT11_ReadData@i^0,f,c
  5075  001CCA  0E07               	movlw	7
  5076  001CCC  6401               	cpfsgt	DHT11_ReadData@i^0,c
  5077  001CCE  EF6B  F00E         	goto	u1591
  5078  001CD2  EF6D  F00E         	goto	u1590
  5079  001CD6                     u1591:
  5080  001CD6  EF45  F00E         	goto	l234
  5081  001CDA                     u1590:
  5082  001CDA                     
  5083                           ;dht11.c: 17:   return data;
  5084  001CDA  5002               	movf	DHT11_ReadData@data^0,w,c
  5085  001CDC  0012               	return		;funcret
  5086  001CDE                     __end_of_DHT11_ReadData:
  5087                           	callstack 0
  5088                           
  5089 ;; *************** function _DHT11_CheckResponse *****************
  5090 ;; Defined at:
  5091 ;;		line 31 in file "dht11.c"
  5092 ;; Parameters:    Size  Location     Type
  5093 ;;		None
  5094 ;; Auto vars:     Size  Location     Type
  5095 ;;		None
  5096 ;; Return value:  Size  Location     Type
  5097 ;;                  1    wreg      void 
  5098 ;; Registers used:
  5099 ;;		None
  5100 ;; Tracked objects:
  5101 ;;		On entry : 0/0
  5102 ;;		On exit  : 0/0
  5103 ;;		Unchanged: 0/0
  5104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5105 ;;      Params:         0       0       0       0       0       0       0       0       0
  5106 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5107 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5108 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5109 ;;Total ram usage:        0 bytes
  5110 ;; Hardware stack levels used: 1
  5111 ;; This function calls:
  5112 ;;		Nothing
  5113 ;; This function is called by:
  5114 ;;		_Dht11
  5115 ;; This function uses a non-reentrant model
  5116 ;;
  5117                           
  5118                           	psect	text29
  5119  001F34                     __ptext29:
  5120                           	callstack 0
  5121  001F34                     _DHT11_CheckResponse:
  5122                           	callstack 28
  5123  001F34                     l248:
  5124  001F34  B280               	btfsc	128,1,c	;volatile
  5125  001F36  EF9F  F00F         	goto	u1531
  5126  001F3A  EFA1  F00F         	goto	u1530
  5127  001F3E                     u1531:
  5128  001F3E  EF9A  F00F         	goto	l248
  5129  001F42                     u1530:
  5130  001F42                     l251:
  5131  001F42  A280               	btfss	128,1,c	;volatile
  5132  001F44  EFA6  F00F         	goto	u1541
  5133  001F48  EFA8  F00F         	goto	u1540
  5134  001F4C                     u1541:
  5135  001F4C  EFA1  F00F         	goto	l251
  5136  001F50                     u1540:
  5137  001F50                     l254:
  5138  001F50  B280               	btfsc	128,1,c	;volatile
  5139  001F52  EFAD  F00F         	goto	u1551
  5140  001F56  EFAF  F00F         	goto	u1550
  5141  001F5A                     u1551:
  5142  001F5A  EFA8  F00F         	goto	l254
  5143  001F5E                     u1550:
  5144  001F5E  0012               	return		;funcret
  5145  001F60                     __end_of_DHT11_CheckResponse:
  5146                           	callstack 0
  5147                           
  5148                           	psect	rparam
  5149  0000                     
  5150                           	psect	idloc
  5151                           
  5152                           ;Config register IDLOC0 @ 0x200000
  5153                           ;	unspecified, using default values
  5154  200000                     	org	2097152
  5155  200000  FF                 	db	255
  5156                           
  5157                           ;Config register IDLOC1 @ 0x200001
  5158                           ;	unspecified, using default values
  5159  200001                     	org	2097153
  5160  200001  FF                 	db	255
  5161                           
  5162                           ;Config register IDLOC2 @ 0x200002
  5163                           ;	unspecified, using default values
  5164  200002                     	org	2097154
  5165  200002  FF                 	db	255
  5166                           
  5167                           ;Config register IDLOC3 @ 0x200003
  5168                           ;	unspecified, using default values
  5169  200003                     	org	2097155
  5170  200003  FF                 	db	255
  5171                           
  5172                           ;Config register IDLOC4 @ 0x200004
  5173                           ;	unspecified, using default values
  5174  200004                     	org	2097156
  5175  200004  FF                 	db	255
  5176                           
  5177                           ;Config register IDLOC5 @ 0x200005
  5178                           ;	unspecified, using default values
  5179  200005                     	org	2097157
  5180  200005  FF                 	db	255
  5181                           
  5182                           ;Config register IDLOC6 @ 0x200006
  5183                           ;	unspecified, using default values
  5184  200006                     	org	2097158
  5185  200006  FF                 	db	255
  5186                           
  5187                           ;Config register IDLOC7 @ 0x200007
  5188                           ;	unspecified, using default values
  5189  200007                     	org	2097159
  5190  200007  FF                 	db	255
  5191                           
  5192                           	psect	config
  5193                           
  5194                           ;Config register CONFIG1L @ 0x300000
  5195                           ;	PLL Prescaler Selection bits
  5196                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
  5197                           ;	System Clock Postscaler Selection bits
  5198                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  5199                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  5200                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
  5201  300000                     	org	3145728
  5202  300000  00                 	db	0
  5203                           
  5204                           ;Config register CONFIG1H @ 0x300001
  5205                           ;	Oscillator Selection bits
  5206                           ;	FOSC = INTOSCIO_EC, Internal oscillator, port function on RA6, EC used by USB (INTIO)
  5207                           ;	Fail-Safe Clock Monitor Enable bit
  5208                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  5209                           ;	Internal/External Oscillator Switchover bit
  5210                           ;	IESO = OFF, Oscillator Switchover mode disabled
  5211  300001                     	org	3145729
  5212  300001  08                 	db	8
  5213                           
  5214                           ;Config register CONFIG2L @ 0x300002
  5215                           ;	Power-up Timer Enable bit
  5216                           ;	PWRT = OFF, PWRT disabled
  5217                           ;	Brown-out Reset Enable bits
  5218                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
  5219                           ;	Brown-out Reset Voltage bits
  5220                           ;	BORV = 3, Minimum setting 2.05V
  5221                           ;	USB Voltage Regulator Enable bit
  5222                           ;	VREGEN = OFF, USB voltage regulator disabled
  5223  300002                     	org	3145730
  5224  300002  19                 	db	25
  5225                           
  5226                           ;Config register CONFIG2H @ 0x300003
  5227                           ;	Watchdog Timer Enable bit
  5228                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  5229                           ;	Watchdog Timer Postscale Select bits
  5230                           ;	WDTPS = 32768, 1:32768
  5231  300003                     	org	3145731
  5232  300003  1E                 	db	30
  5233                           
  5234                           ; Padding undefined space
  5235  300004                     	org	3145732
  5236  300004  FF                 	db	255
  5237                           
  5238                           ;Config register CONFIG3H @ 0x300005
  5239                           ;	CCP2 MUX bit
  5240                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  5241                           ;	PORTB A/D Enable bit
  5242                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  5243                           ;	Low-Power Timer 1 Oscillator Enable bit
  5244                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  5245                           ;	MCLR Pin Enable bit
  5246                           ;	MCLRE = OFF, RE3 input pin enabled; MCLR pin disabled
  5247  300005                     	org	3145733
  5248  300005  01                 	db	1
  5249                           
  5250                           ;Config register CONFIG4L @ 0x300006
  5251                           ;	Stack Full/Underflow Reset Enable bit
  5252                           ;	STVREN = ON, Stack full/underflow will cause Reset
  5253                           ;	Single-Supply ICSP Enable bit
  5254                           ;	LVP = OFF, Single-Supply ICSP disabled
  5255                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  5256                           ;	ICPRT = OFF, ICPORT disabled
  5257                           ;	Extended Instruction Set Enable bit
  5258                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  5259                           ;	Background Debugger Enable bit
  5260                           ;	DEBUG = 0x1, unprogrammed default
  5261  300006                     	org	3145734
  5262  300006  81                 	db	129
  5263                           
  5264                           ; Padding undefined space
  5265  300007                     	org	3145735
  5266  300007  FF                 	db	255
  5267                           
  5268                           ;Config register CONFIG5L @ 0x300008
  5269                           ;	Code Protection bit
  5270                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  5271                           ;	Code Protection bit
  5272                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  5273                           ;	Code Protection bit
  5274                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  5275                           ;	Code Protection bit
  5276                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  5277  300008                     	org	3145736
  5278  300008  0F                 	db	15
  5279                           
  5280                           ;Config register CONFIG5H @ 0x300009
  5281                           ;	Boot Block Code Protection bit
  5282                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  5283                           ;	Data EEPROM Code Protection bit
  5284                           ;	CPD = OFF, Data EEPROM is not code-protected
  5285  300009                     	org	3145737
  5286  300009  C0                 	db	192
  5287                           
  5288                           ;Config register CONFIG6L @ 0x30000A
  5289                           ;	Write Protection bit
  5290                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  5291                           ;	Write Protection bit
  5292                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  5293                           ;	Write Protection bit
  5294                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  5295                           ;	Write Protection bit
  5296                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  5297  30000A                     	org	3145738
  5298  30000A  0F                 	db	15
  5299                           
  5300                           ;Config register CONFIG6H @ 0x30000B
  5301                           ;	Configuration Register Write Protection bit
  5302                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  5303                           ;	Boot Block Write Protection bit
  5304                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  5305                           ;	Data EEPROM Write Protection bit
  5306                           ;	WRTD = OFF, Data EEPROM is not write-protected
  5307  30000B                     	org	3145739
  5308  30000B  E0                 	db	224
  5309                           
  5310                           ;Config register CONFIG7L @ 0x30000C
  5311                           ;	Table Read Protection bit
  5312                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  5313                           ;	Table Read Protection bit
  5314                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  5315                           ;	Table Read Protection bit
  5316                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  5317                           ;	Table Read Protection bit
  5318                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  5319  30000C                     	org	3145740
  5320  30000C  0F                 	db	15
  5321                           
  5322                           ;Config register CONFIG7H @ 0x30000D
  5323                           ;	Boot Block Table Read Protection bit
  5324                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  5325  30000D                     	org	3145741
  5326  30000D  40                 	db	64
  5327                           tosu	equ	0xFFF
  5328                           tosh	equ	0xFFE
  5329                           tosl	equ	0xFFD
  5330                           stkptr	equ	0xFFC
  5331                           pclatu	equ	0xFFB
  5332                           pclath	equ	0xFFA
  5333                           pcl	equ	0xFF9
  5334                           tblptru	equ	0xFF8
  5335                           tblptrh	equ	0xFF7
  5336                           tblptrl	equ	0xFF6
  5337                           tablat	equ	0xFF5
  5338                           prodh	equ	0xFF4
  5339                           prodl	equ	0xFF3
  5340                           indf0	equ	0xFEF
  5341                           postinc0	equ	0xFEE
  5342                           postdec0	equ	0xFED
  5343                           preinc0	equ	0xFEC
  5344                           plusw0	equ	0xFEB
  5345                           fsr0h	equ	0xFEA
  5346                           fsr0l	equ	0xFE9
  5347                           wreg	equ	0xFE8
  5348                           indf1	equ	0xFE7
  5349                           postinc1	equ	0xFE6
  5350                           postdec1	equ	0xFE5
  5351                           preinc1	equ	0xFE4
  5352                           plusw1	equ	0xFE3
  5353                           fsr1h	equ	0xFE2
  5354                           fsr1l	equ	0xFE1
  5355                           bsr	equ	0xFE0
  5356                           indf2	equ	0xFDF
  5357                           postinc2	equ	0xFDE
  5358                           postdec2	equ	0xFDD
  5359                           preinc2	equ	0xFDC
  5360                           plusw2	equ	0xFDB
  5361                           fsr2h	equ	0xFDA
  5362                           fsr2l	equ	0xFD9
  5363                           status	equ	0xFD8

Data Sizes:
    Strings     127
    Constant    5
    Data        17
    BSS         82
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160     29     128
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 5
		 -> password(CODE[5]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 5
		 -> password(CODE[5]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 5
		 -> pass_user(BANK0[5]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 5
		 -> pass_user(BANK0[5]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_15(CODE[4]), STR_14(CODE[3]), STR_12(CODE[5]), STR_11(CODE[3]), 
		 -> STR_9(CODE[3]), STR_7(CODE[4]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 5
		 -> STR_15(CODE[4]), STR_14(CODE[3]), STR_12(CODE[5]), STR_11(CODE[3]), 
		 -> STR_9(CODE[3]), STR_7(CODE[4]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_15(CODE[4]), STR_14(CODE[3]), STR_12(CODE[5]), STR_11(CODE[3]), 
		 -> STR_9(CODE[3]), STR_7(CODE[4]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 10
		 -> Dht11@value(BANK0[10]), Temperature(BANK0[10]), buffer(BANK0[3]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    S959$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S959$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    LCD_String_xy@msg	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_16(CODE[5]), STR_13(CODE[4]), Dht11@value(BANK0[10]), STR_10(CODE[6]), 
		 -> STR_8(CODE[10]), STR_6(CODE[16]), STR_5(CODE[15]), STR_4(CODE[15]), 
		 -> STR_3(CODE[14]), STR_2(CODE[17]), STR_1(CODE[16]), 

    LCD_String@msg	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_16(CODE[5]), STR_13(CODE[4]), Dht11@value(BANK0[10]), STR_10(CODE[6]), 
		 -> Temperature(BANK0[10]), STR_8(CODE[10]), buffer(BANK0[3]), STR_6(CODE[16]), 
		 -> STR_5(CODE[15]), STR_4(CODE[15]), STR_3(CODE[14]), STR_2(CODE[17]), 
		 -> STR_1(CODE[16]), 


Critical Paths under _main in COMRAM

    _Security->_Dht11
    _Security->_Photoresist
    _Photoresist->_sprintf
    _LCD_Init->_LCD_Command
    _Dht11->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _LCD_String_xy->_LCD_String
    _LCD_String->_LCD_Char
    _LCD_Clear->_LCD_Command

Critical Paths under _main in BANK0

    _main->_Security
    _Security->_Dht11
    _Photoresist->_sprintf
    _Dht11->_sprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   32911
                           _LCD_Init
                           _Security
                        _keypad_init
 ---------------------------------------------------------------------------------
 (1) _keypad_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Security                                             2     2      0   32867
                                             27 BANK0      2     2      0
                              _Dht11
                           _LCD_Char
                          _LCD_Clear
                        _LCD_Command
                         _LCD_String
                      _LCD_String_xy
                        _Photoresist
                      _keypad_getkey
                            _sprintf
                            _strncmp
 ---------------------------------------------------------------------------------
 (2) _strncmp                                             11     5      6     453
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (2) _keypad_getkey                                       19    19      0     542
                                              0 COMRAM    19    19      0
 ---------------------------------------------------------------------------------
 (2) _Photoresist                                          2     2      0   10948
                                             93 COMRAM     2     2      0
                        _LCD_Command
                           _LCD_Init
                         _LCD_String
                      _LCD_String_xy
                            ___fltol
                           ___xxtofl
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     398
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             10     6      4     305
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (3) _LCD_Init                                             1     1      0      44
                                              2 COMRAM     1     1      0
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (2) _Dht11                                               17    17      0   10635
                                             93 COMRAM     2     2      0
                                             13 BANK0     14    14      0
                _DHT11_CheckResponse
                     _DHT11_ReadData
                        _DHT11_Start
                           _LCD_Char
                          _LCD_Clear
                         _LCD_String
                      _LCD_String_xy
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             21    15      6    7216
                                             87 COMRAM     6     0      6
                                              0 BANK0     13    13      0
                            ___fltol (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6    6105
                                             79 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           42    36      6    5751
                                             63 COMRAM    16    10      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    4358
                                             27 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    2709
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (3) _LCD_String_xy                                        5     2      3    2472
                                              4 COMRAM     5     2      3
                        _LCD_Command
                         _LCD_String
 ---------------------------------------------------------------------------------
 (4) _LCD_String                                           2     0      2     469
                                              2 COMRAM     2     0      2
                           _LCD_Char
 ---------------------------------------------------------------------------------
 (5) _LCD_Char                                             2     2      0      44
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _LCD_Clear                                            1     1      0      44
                                              2 COMRAM     1     1      0
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (4) _LCD_Command                                          2     2      0      44
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _DHT11_Start                                          1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _DHT11_ReadData                                       2     2      0     115
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _DHT11_CheckResponse                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Init
     _LCD_Command
   _Security
     _Dht11
       _DHT11_CheckResponse
       _DHT11_ReadData
       _DHT11_Start
       _LCD_Char
       _LCD_Clear
         _LCD_Command
       _LCD_String
         _LCD_Char
       _LCD_String_xy
         _LCD_Command
         _LCD_String
       _sprintf
         ___fltol (ARG)
         _vfprintf (ARG)
           _vfpfcnvrt
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                 _strlen
             _fputc
     _LCD_Char
     _LCD_Clear
     _LCD_Command
     _LCD_String
     _LCD_String_xy
     _Photoresist
       _LCD_Command
       _LCD_Init
       _LCD_String
       _LCD_String_xy
       ___fltol
       ___xxtofl
       _sprintf
     _keypad_getkey
     _sprintf
     _strncmp
   _keypad_init

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      31        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     1D      80       5       80.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BITBIGSFRhll        29      0       0      23        0.0%
BITBIGSFRllll       20      0       0      29        0.0%
BITBIGSFRhhl        1D      0       0      21        0.0%
BITBIGSFRhhh         E      0       0      20        0.0%
BITBIGSFRhlhh        E      0       0      22        0.0%
BITBIGSFRlhl         5      0       0      25        0.0%
BITBIGSFRllhl        4      0       0      27        0.0%
BITBIGSFRlllh        2      0       0      28        0.0%
BITBIGSFRllhh        1      0       0      26        0.0%
BITBIGSFRlhh         1      0       0      24        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      DF      30        0.0%
DATA                 0      0      DF       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Thu Jul 14 12:34:51 2022

               ?_LCD_Command 0001                           l20 1DCE                           l23 1D7E  
                         l17 1F32                           l34 1E92                           l37 1FB8  
                         l29 1C80                  ?_LCD_String 0003                          l200 0F18  
                        l210 0F7A                          l202 0F32                          l203 0F2E  
                        l212 0F94                          l124 1F80                          l221 0FF0  
                        l213 0F90                          l205 0F48                          l206 0F44  
                        l143 18B0                          l215 0FAA                          l127 0B68  
                        l216 0FA6                          l145 18BE                          l209 0F7E  
                        l242 1CDC                          l234 1C8A                          l146 195A  
                        l218 0FC0                          l170 0E18                          l162 1FD6  
                        l251 1F42                          l219 0FBC                          l171 0E14  
                        l180 0E56                          l245 1FA2                          l149 1768  
                        l173 0E2E                          l254 1F50                          l190 0EB6  
                        l174 0E2A                          l239 1CBA                          l183 0E8E  
                        l248 1F34                          l192 0ED0                          l184 0E8A  
                        l176 0E44                          l257 1F5E                          l193 0ECC  
                        l177 0E40                          l186 0EA4                          l187 0EA0  
                        l179 0E5A                          l196 0F06                          l197 0F02  
                        l189 0EBA                          l374 14E0                          l199 0F1C  
                        l387 1644                          l557 186E                          l922 10E0  
                        l915 1048                          l918 11A4                          l929 113C  
                        l970 1BC0                          l938 1D2E                          l965 1B42  
                        l968 1B84                          l976 0926                          l978 092E  
                        l996 0B66                          _Raw 0060                          _abs 1E14  
                        _idx 007F                          _pad 1AFC                          _key 00DF  
                        wreg 000FE8                  LCD_Char@dat 0002                 ___fltol@exp1 000A  
                       l1010 1C22                         l1003 1358                         l1014 1E4A  
                       l1040 1FD8                         l1017 1E52                         l2001 1346  
                       l1009 1C1A                         l1050 1A30                         l2011 1D94  
                       ?_abs 0013                         l2021 1DBA                         l2013 1D96  
                       l1029 1AFA                         l1037 1E12                         l1046 1EFE  
                       l2111 1CC8                         l2103 1C98                         l2023 1DBC  
                       l2015 1D98                         l2007 1D82                         l2031 1C4C  
                       l2113 1CCA                         l2105 1C9E                         l2025 1DBE  
                       l2017 1D9A                         l2009 1D92                         l2033 1C50  
                       l2041 1BFE                         l2121 1780                         l2201 1184  
                       l2115 1CDA                         l2107 1CAC                         l2019 1DA8  
                       l2027 1C24                         l2035 1BC2                         l2051 1F20  
                       l2043 1F00                         l2131 17D0                         l2203 1192  
                       l2211 0DE6                         l2109 1CB4                         l2029 1C28  
                       l2061 1E66                         l2037 1BCA                         l2301 16E0  
                       l2053 1F26                         l2045 1F04                         l2141 17FA  
                       l2133 17D4                         l2125 1794                         l2205 1194  
                       l2221 0DF2                         l2213 0DE6                         l2071 1FA4  
                       l2063 1E6E                         l2039 1BD8                         l2311 1738  
                       l2303 16FA                         l2055 1F2C                         l2047 1F14  
                       l2151 1822                         l2143 1804                         l2135 17E2  
                       l2127 17BE                         l2119 176A                         l2231 0E7E  
                       l2223 0E04                         l2215 0DEA                         l2073 1FAA  
                       l2065 1E78                         l2057 1E56                         l2081 1D00  
                       l2313 173E                         l2305 170C                         l2049 1F1A  
                       l2153 182E                         l2145 180E                         l2129 17C0  
                       l2321 1884                         l2241 0F6A                         l2233 0EDE  
                       l2225 0E08                         l2209 0DD4                         l2401 0D32  
                       l2091 1F96                         l2067 1E80                         l2059 1E56  
                       l2083 1D1C                         l2075 1CDE                         l2315 1750  
                       l2307 1726                         l2155 183E                         l2171 106E  
                       l2163 0FF4                         l2331 18D2                         l2323 18AA  
                       l2243 0F6E                         l2235 0EF2                         l2227 0E68  
                       l2411 0D8C                         l2403 0D36                         l2093 1FA0  
                       l2069 1E86                         l2077 1CF0                         l2309 1732  
                       l2157 184E                         l2181 10C8                         l2165 1004  
                       l2333 18F4                         l2325 18AC                         l2317 1870  
                       l2245 0FCE                         l2237 0EF6                         l2229 0E7A  
                       l2261 19A0                         l2253 195C                         l2413 0D9E  
                       l2405 0D48                         l2341 0B68                         l2421 1F60  
                       l2095 1F34                         l2087 1F84                         l2079 1CF8  
                       l2159 185E                         l2191 112C                         l2183 10CA  
                       l2175 1082                         l2167 1012                         l2335 1924  
                       l2327 18AE                         l2319 1880                         l2247 0FD2  
                       l2239 0F56                         l2263 19B8                         l2255 1986  
                       l2415 0DAA                         l2407 0D62                         l2351 0BAA  
                       l2343 0B7A                         l2423 1F74                         l2097 1C82  
                       l2089 1F88                         l1801 1416                         l2281 165E  
                       l2273 1646                         l2193 114A                         l2185 10D6  
                       l2177 108A                         l2169 1058                         l2337 1936  
                       l2329 18C6                         l2249 0FEE                         l2265 19D4  
                       l2417 0DC4                         l2409 0D70                         l2361 0BF0  
                       l2353 0BB0                         l2345 0B8C                         l2425 1F78  
                       l1811 148A                         l1803 1428                         l2291 1690  
                       l2283 1666                         l2275 164A                         l2195 114C  
                       l2187 1112                         l2179 1096                         l2339 1942  
                       l2267 19E6                         l2259 1992                         l2419 0DC8  
                       l2371 0C52                         l2363 0C1E                         l2355 0BC2  
                       l2347 0B92                         l2427 1F7C                         l1805 1456  
                       l1813 1490                         l1821 14E2                         l1901 0956  
                       l2293 16A2                         l2285 166E                         l2277 164E  
                       l2197 1150                         l2189 111E                         l2269 1A0E  
                       l2381 0CB6                         l2373 0C56                         l2365 0C22  
                       l2357 0BC4                         l2349 0B9A                         l1653 1FCC  
                       l1815 14A0                         l1807 1476                         l1831 1526  
                       l1823 14E6                         l1751 1A60                         l1911 09F4  
                       l1903 095C                         l2295 16BC                         l2287 1672  
                       l2279 1656                         l2199 1174                         l2391 0CEE  
                       l2383 0CD0                         l2375 0C70                         l2367 0C34  
                       l2359 0BDE                         l1655 1FD4                         l1817 14C0  
                       l1809 1478                         l1841 158E                         l1833 1546  
                       l1825 14F4                         l1753 1A7E                         l1745 1A32  
                       l1761 1DDC                         l1921 0A9C                         l1913 09FA  
                       l1905 0964                         l2297 16C8                         l2289 1676  
                       l2393 0CF2                         l2377 0C98                         l2369 0C38  
                       l1851 1604                         l1843 15BC                         l1835 1564  
                       l1827 1514                         l1755 1AB4                         l1747 1A44  
                       l1763 1DEE                         l1771 1EDA                         l1931 0B02  
                       l1923 0AB6                         l1915 0A00                         l1907 096C  
                       l2299 16CE                         l2395 0D0C                         l2379 0CB2  
                       l2387 0CD8                         l1781 136C                         l1853 1624  
                       l1845 15DC                         l1837 156C                         l1829 1518  
                       l1749 1A56                         l1765 1DF2                         l1773 1EF2  
                       l1861 1B20                         l1933 0B08                         l1941 0B3E  
                       l1925 0AD0                         l1909 0972                         l1917 0A64  
                       l2397 0D10                         l2389 0CDC                         l1951 1D46  
                       l1791 13C2                         l1783 138C                         l1847 15EE  
                       l1839 1580                         l1759 1DD0                         l1767 1ECA  
                       l1871 1B66                         l1863 1B2E                         l1935 0B1A  
                       l1919 0A7E                         l1927 0AE0                         l2399 0D1E  
                       l1961 1D6C                         l1953 1D48                         l1945 1D32  
                       l1793 13CE                         l1785 1390                         l1777 135A  
                       l1849 15F4                         l1881 1E2E                         l1769 1ED6  
                       l1873 1B94                         l1865 1B3A                         l1857 1AFC  
                       l1937 0B26                         l1929 0AF2                         l1963 1D6E  
                       l1955 1D4A                         l1947 1D42                         l1795 13EC  
                       l1787 139E                         l1779 135E                         l1875 1BA8  
                       l1867 1B4E                         l1859 1B0C                         l1939 0B2E  
                       l1891 08FE                         l1883 0886                         l1971 11EA  
                       l1957 1D58                         l1949 1D44                         l1797 13F4  
                       l1789 13BE                         l1869 1B62                         l1893 0900  
                       l1885 08A6                         l1973 11EE                         l1965 11A6  
                       ?_pad 0011                         l1959 1D6A                         l1799 1408  
                       l1879 1E14                         l1895 091A                         l1887 08CE  
                       l1983 12B6                         l1975 1212                         l1967 11CA  
                       l1897 0936                         l1889 08EE                         l1985 12DA  
                       l1993 1308                         l1977 1236                         l1969 11D8  
                       l1899 0948                         l1995 1316                         l1987 12E8  
                       l1979 127E                         l1989 12FC                         l1999 1322  
                       STR_1 0827                         STR_2 0806                         STR_3 0855  
                       STR_4 0846                         STR_5 0837                         STR_6 0817  
                       STR_7 0874                         STR_8 0863                         STR_9 0882  
                       u1100 1EF2                         u1101 1EEE                         u1110 136C  
                       u1111 1368                         u1120 139E                         u1200 1564  
                       u2000 19B8                         u1121 139A                         u1201 1560  
                       u2001 19B4                         u1210 158E                         u1050 1A44  
                       u2010 19D4                         u1131 13C8                         u1211 158A  
                       u1051 1A40                         u2011 19D0                         u1140 13EC  
                       u1220 15BC                         u1060 1A56                         u1300 08B8  
                       u2020 19E6                         u1141 13E8                         u1221 15B8  
                       u1061 1A52                         u2021 19E2                         u1150 1416  
                       u1230 1604                         u1070 1A7E                         u1310 08CE  
                       u2030 1A0E                         u1151 1412                         u1231 1600  
                       u1071 1A7A                         u1311 08CA                         u2031 1A0A  
                       u1160 1456                         u1080 1AB4                         u1240 1B0C  
                       u1400 0AE0                         u1320 08FE                         u2040 18BE  
                       u1161 1452                         u1081 1AB0                         u1241 1B08  
                       u1401 0ADC                         u1321 08FA                         u2041 18BA  
                       u1170 14A0                         u1090 1E12                         u1250 1B2E  
                       u1410 0AF2                         u1330 091A                         u2050 0BAA  
                       u1171 149C                         u1091 1E0E                         u1251 1B2A  
                       u1411 0AEE                         u1331 0916                         u2107 0C44  
                       u2051 0BA6                         u1500 1C80                         u1180 14F4  
                       u1260 1B84                         u1420 0B02                         u1340 0948  
                       u2060 0BF0                         u1501 1C7C                         u1181 14F0  
                       u1261 1B80                         u1421 0AFE                         u1341 0944  
                       u2117 0C62                         u2061 0BEC                         u1190 1526  
                       u1270 1B94                         u1430 0B1A                         u1350 0956  
                       u1510 1C1A                         u2070 0C1E                         _LATB 000F8A  
                       u1191 1522                         u1271 1B90                         u1431 0B16  
                       u1351 0952                         u1511 1C16                         u2207 0F70  
                       u2127 0CA4                         u2071 0C1A                         u1520 1E66  
                       u1280 1E2E                         u1360 0A7E                         u1440 11CA  
                       u1600 1780                         u2080 0D32                         _LATD 000F8C  
                       u1521 1E62                         u1281 1E2A                         u1361 0A7A  
                       u1441 11C6                         u1601 177C                         u2217 194C  
                       u2081 0D2E                         u2137 0CC2                         u1530 1F42  
                       u1370 0A9C                         u1290 08B6                         u1450 1212  
                       u1610 17B4                         u1531 1F3E                         u2307 1F9A  
                       u1371 0A98                         u1291 08B0                         u1451 120E  
                       u2227 1F0A                         u2147 0CFE                         u1540 1F50  
                       u1380 0AB6                         u1460 1236                         u1620 17E2  
                       u1700 10C4                         u1541 1F4C                         u2317 1C9A  
                       u1381 0AB2                         u1461 1232                         u2237 175A  
                       u1621 17DE                         u1701 10C0                         u2157 0D54  
                       u1550 1F5E                         u1390 0AD0                         u1470 12DA  
                       u1630 17F6                         u1710 110E                         u1551 1F5A  
                       u2247 1D50                         u1391 0ACC                         u1471 12D6  
                       u1631 17F2                         u1615 17AA                         u1711 110A  
                       u2167 0DB6                         u1560 1C98                         u1480 1C48  
                       u1640 181E                         u1720 112C                         u1800 0E3C  
                       u1561 1C94                         u2257 1D76                         u1641 181A  
                       u1721 1128                         u1801 0E38                         u2177 0E0A  
                       u2097 0BD0                         u1570 1CAC                         u1490 1C70  
                       u1650 183E                         u1730 113C                         u1810 0E52  
                       u1571 1CA8                         u2267 1FB0                         u1651 183A  
                       u1731 1138                         u2187 0E80                         u1811 0E4E  
                       u1580 1CC8                         u1660 184E                         u1740 114A  
                       u1900 0F2A                         u1820 0E68                         u1581 1CC4  
                       u2277 1DA0                         u1661 184A                         u1741 1146  
                       u1901 0F26                         u2197 0EF8                         u1821 0E64  
                       u1590 1CDA                         u1750 1184                         u1670 1004  
                       u1910 0F40                         u1830 0E7A                         u1591 1CD6  
                       u2287 1DC6                         u1487 1C3E                         u1751 1180  
                       u1671 1000                         u1911 0F3C                         u1831 0E76  
                       u1760 1192                         u1680 1012                         u1920 0F56  
                       u1840 0E9C                         u2297 1F8E                         u1497 1C66  
                       u1761 118E                         u1681 100E                         u1921 0F52  
                       u1841 0E98                         u1690 106E                         u1930 0F6A  
                       u1850 0EB2                         u1691 106A                         u1931 0F66  
                       u1851 0EAE                         u1771 0DDE                         u1940 0F8C  
                       u1860 0EC8                         u1780 0E04                         u1941 0F88  
                       u1861 0EC4                         u1781 0E00                         u1950 0FA2  
                       u1870 0EDE                         u1790 0E26                         u1951 0F9E  
                       u1871 0EDA                         u1791 0E22                         u1960 0FB8  
                       u1880 0EF2                         u1961 0FB4                         u1881 0EEE  
                       u1970 0FCE                         u1890 0F14                         u1971 0FCA  
                       u1891 0F10                         u1980 0FEE                         u1981 0FEA  
                       u1990 1986                         u1991 1982                         _lm35 007C  
                       abs@a 0013                         _dbuf 0080                         _main 1F60  
                       _dtoa 0886                         _prec 0072                         _temp 006A  
                       _nout 006E                         pad@i 0018                         pad@p 0015  
                       fsr1h 000FE2                         fsr2h 000FDA                         indf1 000FE7  
                       indf2 000FDF                         fsr1l 000FE1                         pad@w 001A  
                       fsr2l 000FD9                         start 0000             ??_DHT11_ReadData 0001  
              _LCD_String_xy 1E54                 ___param_bank 000000                        ??_abs 0015  
                      ??_pad 0017             __end_of_LCD_Char 1D80             __end_of_LCD_Init 1F34  
              ___fltol@sign1 0009              __end_of___aodiv 14E2                        ?_main 0001  
                      ?_dtoa 001C              __end_of___aomod 1646                        STR_10 086D  
                      STR_11 0882                        STR_12 0873                        STR_13 087D  
                      STR_14 0882                        STR_15 0881                        STR_16 0878  
            __end_of___fltol 1870                        _LATA1 007C49                        _LATD0 007C60  
                      _LATD1 007C61                 vfpfcnvrt@fmt 0042                        _PORTB 000F81  
                      _PORTE 000F84                        _TRISA 000F92                        _TRISB 000F93  
                      _TRISD 000F95                        _TRISE 000F96                        _Dht11 1646  
                      _flags 0074                 ?_keypad_init 0001                        _fputc 1A32  
                      _fputs 1DD0                        pad@fp 0011                        _width 0070  
                      _putch 1FD8                        dtoa@d 001E                        dtoa@i 003E  
                      dtoa@n 0036                        dtoa@p 0030                        dtoa@s 0034  
                      dtoa@w 0032                        tablat 000FF5                        plusw1 000FE3  
                      plusw2 000FDB                        status 000FD8              __end_of_sprintf 1D30  
             Dht11@T_Decimal 00CB              __end_of_strncmp 1A32               ?_LCD_String_xy 0005  
            __initialization 1E94                 __end_of_main 1F84                 __end_of_dtoa 0B68  
            Dht11@RH_Decimal 00C9                       ??_main 0060                       ??_dtoa 0026  
          __end_of_LCD_Clear 1FBA                __activetblptr 000002             __end_of_Security 0DD4  
                     ?_Dht11 0001          keypad_getkey@letras 0001                       ?_fputc 0001  
                     ?_fputs 000A                       _ADRESH 000FC4                       _ADRESL 000FC3  
                     ?_putch 0001          _DHT11_CheckResponse 1F34             LCD_String_xy@msg 0006  
           LCD_String_xy@pos 0005             LCD_String_xy@row 0008                       _OSCCON 000FD3  
           __end_of___xxtofl 11A6                ??_Photoresist 005E                 vfprintf@cfmt 0056  
                  ??___aodiv 0011                    ??___aomod 0011                    ??___fltol 0005  
       ?_DHT11_CheckResponse 0001                       _buffer 00AF                       _estado 007E  
                     clear_0 1EBA                       isa$std 000001                       pad@buf 0013  
                     dtoa@fp 001C                       _strlen 1ECA             __end_of_password 0806  
                     fputc@c 0001                       fputs@c 000E                       fputs@i 000F  
                     fputs@s 000A                 __mediumconst 0000                       tblptrh 000FF7  
                     tblptrl 000FF6                       tblptru 000FF8                       putch@c 0001  
           __end_of_vfprintf 1C24                    ??_sprintf 005E                    ??_strncmp 0007  
               ___xxtofl@arg 000B                 ___xxtofl@exp 000A                 ___xxtofl@val 0001  
                  ?_LCD_Char 0001                   __accesstop 0060      __end_of__initialization 1EC0  
                  ?_LCD_Init 0001              ??_LCD_String_xy 0008                ___rparam_used 000001  
                 ___fltol@f1 0001                __end_of_Dht11 176A               __pcstackCOMRAM 0001  
            Dht11@T_Integral 00CC                 __pidataBANK0 1FBA        ??_DHT11_CheckResponse 0001  
              __end_of_fputc 1AFC                __end_of_fputs 1E14                __end_of_putch 1FDA  
               ??_LCD_String 0005          __end_of_Photoresist 195C                      ??_Dht11 005E  
                    ??_fputc 0005                      ??_fputs 000E                      ??_putch 0001  
                 __pbssBANK0 0060                   ??_LCD_Char 0001                   ??_LCD_Init 0003  
         __end_of_LCD_String 1C82             Dht11@RH_Integral 00CA                    ?_Security 0001  
             _counter_digito 007D                      ?_strlen 0001                _keypad_getkey 0DD4  
                  ?___xxtofl 0001                ??_DHT11_Start 0001                LCD_String@msg 0003  
                    __Hparam 0000                   ??_Security 00CD                      __Lparam 0000  
                _Photoresist 1870                      ___aodiv 135A                      ___aomod 14E2  
                    ___fltol 176A                    ?_vfprintf 0050                 __psmallconst 0800  
                _Temperature 00A0                      __pcinit 1E94                      __ramtop 0800  
                    __ptext0 1F60                      __ptext1 1FCC                      __ptext2 0B68  
                    __ptext3 195C                      __ptext4 0DD4                      __ptext5 1870  
                    __ptext6 0FF2                      __ptext7 176A                      __ptext8 1F00  
                    __ptext9 1646               ?_keypad_getkey 0001                   ??___xxtofl 0005  
                  _LCD_Clear 1FA4                      _sprintf 1CDE                      _strncmp 195C  
       end_of_initialization 1EC0                      fputc@fp 0003               LCD_Command@cmd 0002  
              __Lmediumconst 0000                      fputs@fp 000C            __end_of_vfpfcnvrt 135A  
        __end_of_DHT11_Start 1FA4                      postdec1 000FE5                      postdec2 000FDD  
                    postinc0 000FEE                      postinc1 000FE6                      postinc2 000FDE  
                 ??_vfprintf 0056                      strlen@a 0003                      strlen@s 0001  
                  _PORTAbits 000F80                ___xxtofl@sign 0009                    _TRISAbits 000F92  
                 ?_LCD_Clear 0001           DHT11_ReadData@data 0002                    _Con_Error 007A  
              ??_LCD_Command 0001                  vfpfcnvrt@ap 0044                  vfpfcnvrt@fp 0040  
                vfpfcnvrt@ll 0048              ??_keypad_getkey 0001               __end_of_strlen 1F00  
         keypad_getkey@F3205 00CF          start_initialization 1E94                  __end_of_abs 1E54  
                __end_of_pad 1BC2           keypad_getkey@valor 0011                  _DHT11_Start 1F84  
__end_of_DHT11_CheckResponse 1F60        __end_of_LCD_String_xy 1E94                  vfprintf@fmt 0052  
                __pdataBANK0 00CF                     ??_strlen 0003          __end_of_LCD_Command 1DD0  
              __pcstackBANK0 00B2             ___aodiv@dividend 0001                  ??_LCD_Clear 0003  
              ??_keypad_init 0001                    _dtoa$1041 002E                 ?_Photoresist 0001  
                   ?___aodiv 0001                     ?___aomod 0001             ___aodiv@quotient 0013  
                   ?___fltol 0001               _DHT11_ReadData 1C82                  __smallconst 0800  
      LCD_String_xy@location 0009                     ?_sprintf 0058                     ?_strncmp 0001  
                   _LCD_Char 1D30                     _LCD_Init 1F00                    _pass_user 00AA  
        __end_of_keypad_init 1FD8                    _value_adc 0076       __end_of_DHT11_ReadData 1CDE  
                _LCD_Command 1D80                    _vfpfcnvrt 11A6                   _ADCON0bits 000FC2  
                 _ADCON1bits 000FC1                   _ADCON2bits 000FC0                   Dht11@value 00BF  
                _INTCON2bits 000FF1                    copy_data0 1EA8                     _Contador 0078  
                   __Hrparam 0000                     _Security 0B68                   vfprintf@ap 0054  
                   __Lrparam 0000                   vfprintf@fp 0050              ?_DHT11_ReadData 0001  
                 ?_vfpfcnvrt 0040              DHT11_ReadData@i 0001              ___aodiv@divisor 0009  
            ___aodiv@counter 0011                   sprintf@fmt 005A                     ___xxtofl 0FF2  
                   __ptext10 1CDE                     __ptext11 1BC2                     __ptext20 14E2  
                   __ptext12 11A6                     __ptext21 135A                     __ptext13 0886  
                   __ptext22 1E54                     __ptext14 1AFC                     __ptext23 1C24  
                   __ptext15 1ECA                     __ptext24 1D30                     __ptext16 1DD0  
                   __ptext25 1FA4                     __ptext17 1A32                     __ptext26 1D80  
                   __ptext18 1FD8                     __ptext27 1F84                     __ptext19 1E14  
                   __ptext28 1C82                     __ptext29 1F34                  _keypad_init 1FCC  
               ?_DHT11_Start 0001                     _password 0801                     isa$xinst 000000  
                   _vfprintf 1BC2                   _LCD_String 1C24             ___aomod@dividend 0001  
      __end_of_keypad_getkey 0FF2                    sprintf@ap 00B2                    strncmp@_l 0001  
                  strncmp@_r 0003                   _OSCCONbits 000FD3              ___aomod@divisor 0009  
                ??_vfpfcnvrt 0046              ___aomod@counter 0011                     sprintf@f 00B4  
                   sprintf@s 0058                     strncmp@l 0008                     strncmp@n 0005  
                   strncmp@r 000A               keypad_getkey@i 0012                 ___aodiv@sign 0012  
               ___aomod@sign 0012  
